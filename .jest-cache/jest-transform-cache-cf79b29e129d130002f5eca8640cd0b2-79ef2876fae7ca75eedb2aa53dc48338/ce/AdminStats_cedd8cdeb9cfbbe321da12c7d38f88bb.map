{"version":3,"names":["AdminStats","StatCard","title","value","subtitle","icon","color","trend","cov_5u5rpun5i","f","colorClasses","s","blue","green","yellow","red","purple","gray","_jsxruntime","jsx","className","jsxs","b","toLocaleString","positive","stats","setStats","_react","useState","isLoading","setIsLoading","error","setError","fetchStats","response","fetch","headers","document","cookie","split","ok","Error","data","json","err","message","useEffect","_outline","ArrowPathIcon","Array","map","_","i","onClick","XCircleIcon","flagEnabledRate","feature_flags","total","enabled","toFixed","moduleActiveRate","modules","active","disabled","FlagIcon","parseFloat","CheckCircleIcon","CubeIcon","enabled_for_organisations","UsersIcon","activity","recent_actions_24h","ClockIcon","system","supported_sectors","ExclamationTriangleIcon","style","width"],"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/admin/AdminStats.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  FlagIcon,\n  CubeIcon,\n  UsersIcon,\n  ClockIcon,\n  CheckCircleIcon,\n  XCircleIcon,\n  ExclamationTriangleIcon,\n  ArrowPathIcon\n} from '@heroicons/react/24/outline';\n\ninterface AdminStatsData {\n  feature_flags: {\n    total: number;\n    enabled: number;\n    disabled: number;\n  };\n  modules: {\n    total: number;\n    active: number;\n    enabled_for_organisations: number;\n  };\n  activity: {\n    recent_actions_24h: number;\n  };\n  system: {\n    supported_sectors: number;\n  };\n}\n\ninterface StatCardProps {\n  title: string;\n  value: string | number;\n  subtitle?: string;\n  icon: React.ReactNode;\n  color: 'blue' | 'green' | 'yellow' | 'red' | 'purple' | 'gray';\n  trend?: {\n    value: string;\n    positive: boolean;\n  };\n}\n\nconst StatCard: React.FC<StatCardProps> = ({ \n  title, \n  value, \n  subtitle, \n  icon, \n  color, \n  trend \n}) => {\n  const colorClasses = {\n    blue: 'bg-blue-50 text-blue-600',\n    green: 'bg-green-50 text-green-600',\n    yellow: 'bg-yellow-50 text-yellow-600', \n    red: 'bg-red-50 text-red-600',\n    purple: 'bg-purple-50 text-purple-600',\n    gray: 'bg-gray-50 text-gray-600'\n  };\n\n  return (\n    <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n      <div className=\"p-5\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <div className={`p-3 rounded-md ${colorClasses[color]}`}>\n              {icon}\n            </div>\n          </div>\n          <div className=\"ml-5 w-0 flex-1\">\n            <dl>\n              <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                {title}\n              </dt>\n              <dd className=\"flex items-baseline\">\n                <div className=\"text-2xl font-semibold text-gray-900\">\n                  {typeof value === 'number' ? value.toLocaleString() : value}\n                </div>\n                {trend && (\n                  <div className={`ml-2 flex items-baseline text-sm font-semibold ${\n                    trend.positive ? 'text-green-600' : 'text-red-600'\n                  }`}>\n                    {trend.value}\n                  </div>\n                )}\n              </dd>\n              {subtitle && (\n                <dd className=\"text-sm text-gray-500 mt-1\">\n                  {subtitle}\n                </dd>\n              )}\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const AdminStats: React.FC = () => {\n  const [stats, setStats] = useState<AdminStatsData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchStats = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('/api/v1/admin/dashboard/stats', {\n        headers: {\n          'Authorization': `Bearer ${document.cookie.split('access_token=')[1]?.split(';')[0]}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch admin statistics');\n      }\n\n      const data = await response.json();\n      setStats(data);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load statistics');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchStats();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-2xl font-bold text-gray-900\">Platform Overview</h2>\n          <div className=\"animate-spin\">\n            <ArrowPathIcon className=\"h-5 w-5 text-gray-400\" />\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\n          {[...Array(8)].map((_, i) => (\n            <div key={i} className=\"bg-white overflow-hidden shadow rounded-lg\">\n              <div className=\"p-5\">\n                <div className=\"animate-pulse\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-12 h-12 bg-gray-200 rounded-md\"></div>\n                    <div className=\"ml-5 flex-1\">\n                      <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n                      <div className=\"h-6 bg-gray-200 rounded w-1/2\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-2xl font-bold text-gray-900\">Platform Overview</h2>\n          <button\n            onClick={fetchStats}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n          >\n            <ArrowPathIcon className=\"h-4 w-4 mr-2\" />\n            Retry\n          </button>\n        </div>\n        \n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <XCircleIcon className=\"h-5 w-5 text-red-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Error Loading Statistics</h3>\n              <p className=\"mt-1 text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!stats) {\n    return null;\n  }\n\n  const flagEnabledRate = stats.feature_flags.total > 0 \n    ? ((stats.feature_flags.enabled / stats.feature_flags.total) * 100).toFixed(1)\n    : '0';\n\n  const moduleActiveRate = stats.modules.total > 0\n    ? ((stats.modules.active / stats.modules.total) * 100).toFixed(1)\n    : '0';\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">Platform Overview</h2>\n        <button\n          onClick={fetchStats}\n          className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n        >\n          <ArrowPathIcon className=\"h-4 w-4 mr-2\" />\n          Refresh\n        </button>\n      </div>\n\n      {/* Main Statistics Grid */}\n      <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\n        {/* Feature Flags */}\n        <StatCard\n          title=\"Total Feature Flags\"\n          value={stats.feature_flags.total}\n          subtitle={`${stats.feature_flags.enabled} enabled, ${stats.feature_flags.disabled} disabled`}\n          icon={<FlagIcon className=\"h-6 w-6\" />}\n          color=\"blue\"\n          trend={{\n            value: `${flagEnabledRate}% enabled`,\n            positive: parseFloat(flagEnabledRate) >= 50\n          }}\n        />\n\n        <StatCard\n          title=\"Enabled Flags\"\n          value={stats.feature_flags.enabled}\n          subtitle=\"Currently active\"\n          icon={<CheckCircleIcon className=\"h-6 w-6\" />}\n          color=\"green\"\n        />\n\n        {/* Modules */}\n        <StatCard\n          title=\"Total Modules\"\n          value={stats.modules.total}\n          subtitle={`${stats.modules.active} active modules`}\n          icon={<CubeIcon className=\"h-6 w-6\" />}\n          color=\"purple\"\n          trend={{\n            value: `${moduleActiveRate}% active`,\n            positive: parseFloat(moduleActiveRate) >= 80\n          }}\n        />\n\n        <StatCard\n          title=\"Organisation Modules\"\n          value={stats.modules.enabled_for_organisations}\n          subtitle=\"Enabled across organisations\"\n          icon={<UsersIcon className=\"h-6 w-6\" />}\n          color=\"yellow\"\n        />\n\n        {/* Activity */}\n        <StatCard\n          title=\"Recent Activity\"\n          value={stats.activity.recent_actions_24h}\n          subtitle=\"Actions in last 24 hours\"\n          icon={<ClockIcon className=\"h-6 w-6\" />}\n          color=\"gray\"\n        />\n\n        {/* System */}\n        <StatCard\n          title=\"Supported Sectors\"\n          value={stats.system.supported_sectors}\n          subtitle=\"SIC codes with analytics\"\n          icon={<ExclamationTriangleIcon className=\"h-6 w-6\" />}\n          color=\"red\"\n        />\n\n        {/* Additional calculated metrics */}\n        <StatCard\n          title=\"Flag Utilization\"\n          value={`${flagEnabledRate}%`}\n          subtitle=\"Percentage of flags enabled\"\n          icon={<FlagIcon className=\"h-6 w-6\" />}\n          color={parseFloat(flagEnabledRate) >= 50 ? 'green' : 'yellow'}\n        />\n\n        <StatCard\n          title=\"Module Coverage\"\n          value={`${moduleActiveRate}%`}\n          subtitle=\"Active modules ratio\"\n          icon={<CubeIcon className=\"h-6 w-6\" />}\n          color={parseFloat(moduleActiveRate) >= 80 ? 'green' : 'yellow'}\n        />\n      </div>\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 gap-5 lg:grid-cols-2\">\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"px-4 py-5 sm:p-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\n              Feature Flag Status\n            </h3>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600\">Total Flags</span>\n                <span className=\"text-sm font-medium text-gray-900\">\n                  {stats.feature_flags.total}\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600\">Enabled</span>\n                <span className=\"text-sm font-medium text-green-600\">\n                  {stats.feature_flags.enabled}\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600\">Disabled</span>\n                <span className=\"text-sm font-medium text-gray-600\">\n                  {stats.feature_flags.disabled}\n                </span>\n              </div>\n              <div className=\"pt-2\">\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div \n                    className=\"bg-green-600 h-2 rounded-full\" \n                    style={{ \n                      width: `${flagEnabledRate}%` \n                    }}\n                  ></div>\n                </div>\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  {flagEnabledRate}% of flags are enabled\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"px-4 py-5 sm:p-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\n              Module Status\n            </h3>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600\">Total Modules</span>\n                <span className=\"text-sm font-medium text-gray-900\">\n                  {stats.modules.total}\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600\">Active</span>\n                <span className=\"text-sm font-medium text-green-600\">\n                  {stats.modules.active}\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600\">Organisation Deployments</span>\n                <span className=\"text-sm font-medium text-blue-600\">\n                  {stats.modules.enabled_for_organisations}\n                </span>\n              </div>\n              <div className=\"pt-2\">\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div \n                    className=\"bg-blue-600 h-2 rounded-full\" \n                    style={{ \n                      width: `${moduleActiveRate}%` \n                    }}\n                  ></div>\n                </div>\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  {moduleActiveRate}% of modules are active\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};"],"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","ignoreList":[]}