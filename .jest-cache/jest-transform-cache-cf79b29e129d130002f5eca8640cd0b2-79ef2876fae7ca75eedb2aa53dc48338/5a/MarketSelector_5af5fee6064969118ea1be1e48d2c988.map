{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/market-edge/MarketSelector.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ChevronDownIcon, PlusIcon } from '@heroicons/react/24/outline';\nimport { Market } from '@/types/market-edge';\nimport { marketEdgeAPI } from '@/services/market-edge-api';\n\ninterface MarketSelectorProps {\n  selectedMarket?: Market;\n  onMarketSelect: (market: Market) => void;\n  onCreateMarket?: () => void;\n  className?: string;\n}\n\nexport const MarketSelector: React.FC<MarketSelectorProps> = ({\n  selectedMarket,\n  onMarketSelect,\n  onCreateMarket,\n  className = ''\n}) => {\n  const [markets, setMarkets] = useState<Market[]>([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n\n  useEffect(() => {\n    loadMarkets();\n  }, []);\n\n  const loadMarkets = async (showLoading = true) => {\n    try {\n      if (showLoading) {\n        setIsLoading(true);\n      }\n      console.log('Loading markets...');\n      const marketData = await marketEdgeAPI.getMarkets();\n      setMarkets(marketData || []);\n      setError(null);\n      setRetryCount(0); // Reset retry count on success\n      console.log('Markets loaded successfully:', marketData?.length || 0);\n    } catch (err: any) {\n      console.error('Failed to load markets:', err);\n      \n      // Enhanced error handling with specific messages\n      let errorMessage = 'Failed to load markets. Please try again.';\n      \n      if (err?.response?.status === 401) {\n        errorMessage = 'Authentication required. Please log in to access markets.';\n      } else if (err?.response?.status === 403) {\n        errorMessage = 'Access denied. You may not have permission to view markets.';\n      } else if (err?.response?.status === 404) {\n        errorMessage = 'Markets service not found. Please contact support.';\n      } else if (err?.response?.status >= 500) {\n        errorMessage = 'Server error occurred. Please try again in a moment.';\n      } else if (err?.message?.includes('Network Error')) {\n        errorMessage = 'Network connection error. Please check your connection.';\n      } else if (err?.message?.includes('timeout')) {\n        errorMessage = 'Request timed out. Please try again.';\n      } else if (err?.message) {\n        errorMessage = err.message;\n      }\n      \n      setError(errorMessage);\n      setMarkets([]); // Ensure markets is always an array\n      setRetryCount(prev => prev + 1);\n    } finally {\n      if (showLoading) {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const filteredMarkets = (markets || []).filter(market =>\n    market.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const handleMarketSelect = (market: Market) => {\n    onMarketSelect(market);\n    setIsOpen(false);\n    setSearchQuery('');\n  };\n\n  return (\n    <div className={`relative ${className}`}>\n      {/* Selected Market Display */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"w-full flex items-center justify-between px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n        disabled={isLoading}\n      >\n        <div className=\"flex items-center\">\n          <div className=\"w-3 h-3 bg-green-500 rounded-full mr-3\"></div>\n          <span className=\"text-sm font-medium text-gray-900\">\n            {selectedMarket ? selectedMarket.name : 'Select Market'}\n          </span>\n        </div>\n        <ChevronDownIcon \n          className={`w-5 h-5 text-gray-400 transition-transform ${isOpen ? 'rotate-180' : ''}`} \n        />\n      </button>\n\n      {/* Dropdown */}\n      {isOpen && (\n        <div className=\"absolute z-50 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg max-h-80 overflow-hidden\">\n          {/* Search Input */}\n          <div className=\"p-3 border-b border-gray-200\">\n            <input\n              type=\"text\"\n              placeholder=\"Search markets...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              autoFocus\n            />\n          </div>\n\n          {/* Markets List */}\n          <div className=\"max-h-60 overflow-y-auto\">\n            {error ? (\n              <div className=\"p-4 text-center text-red-600 text-sm\">\n                <div className=\"mb-2\">{error}</div>\n                {retryCount > 0 && (\n                  <div className=\"text-xs text-gray-500 mb-2\">\n                    Retry attempt: {retryCount}\n                  </div>\n                )}\n                <button\n                  onClick={() => loadMarkets()}\n                  disabled={isLoading}\n                  className=\"block mx-auto mt-2 text-blue-600 hover:text-blue-800 underline disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isLoading ? 'Retrying...' : 'Try Again'}\n                </button>\n                {retryCount >= 3 && (\n                  <div className=\"mt-2 text-xs text-gray-500\">\n                    Having trouble? Try refreshing the page or contact support.\n                  </div>\n                )}\n              </div>\n            ) : isLoading ? (\n              <div className=\"p-4 text-center text-gray-500 text-sm\">\n                Loading markets...\n              </div>\n            ) : filteredMarkets.length === 0 ? (\n              <div className=\"p-4 text-center text-gray-500 text-sm\">\n                {searchQuery ? 'No markets found' : 'No markets available'}\n              </div>\n            ) : (\n              filteredMarkets.map((market) => (\n                <button\n                  key={market.id}\n                  onClick={() => handleMarketSelect(market)}\n                  className=\"w-full px-4 py-3 text-left hover:bg-gray-50 focus:outline-none focus:bg-gray-50 transition-colors\"\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {market.name}\n                      </div>\n                      <div className=\"text-xs text-gray-500 mt-1\">\n                        {market.competitor_count} competitors â€¢ \n                        {market.is_active ? ' Active' : ' Inactive'}\n                      </div>\n                    </div>\n                    {selectedMarket?.id === market.id && (\n                      <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n                    )}\n                  </div>\n                </button>\n              ))\n            )}\n          </div>\n\n          {/* Create New Market */}\n          {onCreateMarket && (\n            <div className=\"border-t border-gray-200\">\n              <button\n                onClick={() => {\n                  onCreateMarket();\n                  setIsOpen(false);\n                }}\n                className=\"w-full px-4 py-3 text-left hover:bg-gray-50 focus:outline-none focus:bg-gray-50 transition-colors flex items-center text-blue-600\"\n              >\n                <PlusIcon className=\"w-4 h-4 mr-2\" />\n                <span className=\"text-sm font-medium\">Create New Market</span>\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Overlay */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => setIsOpen(false)}\n        />\n      )}\n    </div>\n  );\n};"],"names":["MarketSelector","selectedMarket","onMarketSelect","onCreateMarket","className","markets","setMarkets","useState","isOpen","setIsOpen","isLoading","setIsLoading","searchQuery","setSearchQuery","error","setError","retryCount","setRetryCount","useEffect","loadMarkets","showLoading","console","log","marketData","marketEdgeAPI","getMarkets","length","err","errorMessage","response","status","message","includes","prev","filteredMarkets","filter","market","name","toLowerCase","handleMarketSelect","div","button","onClick","disabled","span","ChevronDownIcon","input","type","placeholder","value","onChange","e","target","autoFocus","map","competitor_count","is_active","id","PlusIcon"],"mappings":"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"}