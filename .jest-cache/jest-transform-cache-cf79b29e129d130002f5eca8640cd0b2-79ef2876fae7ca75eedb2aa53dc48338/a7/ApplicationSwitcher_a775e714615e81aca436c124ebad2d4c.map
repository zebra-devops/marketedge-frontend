{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/ui/ApplicationSwitcher.tsx"],"sourcesContent":["'use client'\n\nimport { Fragment, useState, useEffect } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport {\n  ChevronDownIcon,\n  CheckIcon,\n  ChartBarIcon,\n  CogIcon,\n  EyeIcon,\n} from '@heroicons/react/24/outline'\nimport { useRouter, usePathname } from 'next/navigation'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner'\n\ninterface Application {\n  id: string\n  name: string\n  displayName: string\n  route: string\n  icon: React.ComponentType<{ className?: string }>\n  color: string\n  description: string\n  requiredPermissions?: string[]\n}\n\nconst applications: Application[] = [\n  {\n    id: 'market-edge',\n    name: 'Market Edge',\n    displayName: 'Market Edge',\n    route: '/market-edge',\n    icon: ChartBarIcon,\n    color: 'from-blue-500 to-green-500',\n    description: 'Competitive Intelligence & Market Analysis',\n    requiredPermissions: ['read:market_edge']\n  },\n  {\n    id: 'causal-edge',\n    name: 'Causal Edge',\n    displayName: 'Causal Edge',\n    route: '/causal-edge',\n    icon: CogIcon,\n    color: 'from-orange-500 to-red-500',\n    description: 'Business Process & Causal Analysis',\n    requiredPermissions: ['read:causal_edge']\n  },\n  {\n    id: 'value-edge',\n    name: 'Value Edge',\n    displayName: 'Value Edge',\n    route: '/value-edge',\n    icon: EyeIcon,\n    color: 'from-purple-500 to-teal-500',\n    description: 'Value Engineering & ROI Analysis',\n    requiredPermissions: ['read:value_edge']\n  }\n]\n\ninterface ApplicationSwitcherProps {\n  className?: string\n  userPermissions?: string[]\n}\n\nexport default function ApplicationSwitcher({ \n  className = '', \n  userPermissions = []\n}: ApplicationSwitcherProps) {\n  const router = useRouter()\n  const pathname = usePathname()\n  const [currentApplication, setCurrentApplication] = useState<Application | null>(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isOpen, setIsOpen] = useState(false)\n\n  // Get current application from pathname\n  useEffect(() => {\n    const currentApp = applications.find(app => pathname.startsWith(app.route))\n    if (currentApp) {\n      setCurrentApplication(currentApp)\n      // Save to localStorage\n      localStorage.setItem('currentApplication', currentApp.id)\n    } else {\n      // Try to restore from localStorage\n      const savedAppId = localStorage.getItem('currentApplication')\n      const savedApp = applications.find(app => app.id === savedAppId)\n      if (savedApp && hasPermission(savedApp)) {\n        setCurrentApplication(savedApp)\n      }\n    }\n  }, [pathname, userPermissions])\n\n  // Filter applications based on user permissions\n  const accessibleApplications = applications.filter(app => hasPermission(app))\n\n  function hasPermission(app: Application): boolean {\n    if (!app.requiredPermissions || app.requiredPermissions.length === 0) {\n      return true\n    }\n    return app.requiredPermissions.some(permission => \n      userPermissions.includes(permission)\n    )\n  }\n\n  const handleApplicationSwitch = async (application: Application) => {\n    if (application.id === currentApplication?.id || isLoading) return\n    \n    setIsLoading(true)\n    try {\n      // Save to localStorage\n      localStorage.setItem('currentApplication', application.id)\n      \n      // Navigate to the application\n      router.push(application.route)\n      setCurrentApplication(application)\n      setIsOpen(false)\n    } catch (error) {\n      console.error('Failed to switch application:', error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  // Don't show if user has access to only one application or none\n  if (accessibleApplications.length <= 1) {\n    return null\n  }\n\n  const currentAppDisplay = currentApplication || accessibleApplications[0]\n\n  return (\n    <div className={`relative ${className}`}>\n      <Listbox value={currentApplication} onChange={handleApplicationSwitch}>\n        <div className=\"relative\">\n          <Listbox.Button\n            className=\"relative w-full min-w-[220px] cursor-pointer rounded-lg bg-white py-2 pl-3 pr-10 text-left border border-gray-300 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-1 focus:ring-primary-500 sm:text-sm\"\n            disabled={isLoading}\n          >\n            <div className=\"flex items-center gap-3\">\n              {isLoading ? (\n                <LoadingSpinner size=\"sm\" />\n              ) : (\n                <div className={`flex-shrink-0 w-8 h-8 rounded-lg bg-gradient-to-br ${currentAppDisplay?.color || 'from-gray-400 to-gray-600'} flex items-center justify-center`}>\n                  {currentAppDisplay?.icon && (\n                    <currentAppDisplay.icon className=\"h-5 w-5 text-white\" />\n                  )}\n                </div>\n              )}\n              \n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex flex-col\">\n                  <span className=\"block truncate font-medium text-gray-900\">\n                    {currentAppDisplay?.displayName || 'Select Application'}\n                  </span>\n                  <span className=\"block truncate text-xs text-gray-500\">\n                    {currentAppDisplay?.description || 'Business Intelligence Platform'}\n                  </span>\n                </div>\n              </div>\n            </div>\n            \n            <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n              <ChevronDownIcon\n                className=\"h-5 w-5 text-gray-400\"\n                aria-hidden=\"true\"\n              />\n            </span>\n          </Listbox.Button>\n          \n          <Transition\n            show={isOpen}\n            as={Fragment}\n            leave=\"transition ease-in duration-100\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n            beforeEnter={() => setIsOpen(true)}\n            afterLeave={() => setIsOpen(false)}\n          >\n            <Listbox.Options className=\"absolute z-50 mt-1 max-h-60 w-full min-w-[300px] overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n              <div className=\"px-3 py-2 text-xs font-medium text-gray-500 border-b border-gray-200\">\n                Switch Application\n              </div>\n              \n              {accessibleApplications.map((application) => {\n                const isCurrent = application.id === currentApplication?.id\n                \n                return (\n                  <Listbox.Option\n                    key={application.id}\n                    className={({ active, selected }) =>\n                      `relative cursor-pointer select-none py-3 px-3 ${\n                        active || selected\n                          ? 'bg-primary-50 text-primary-900'\n                          : 'text-gray-900'\n                      } ${isCurrent ? 'bg-primary-50' : ''}`\n                    }\n                    value={application}\n                  >\n                    {({ selected }) => (\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n                          <div className={`flex-shrink-0 w-10 h-10 rounded-lg bg-gradient-to-br ${application.color} flex items-center justify-center shadow-sm`}>\n                            <application.icon className=\"h-6 w-6 text-white\" />\n                          </div>\n                          \n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"flex items-center gap-2 mb-1\">\n                              <span className={`block truncate ${isCurrent ? 'font-semibold' : 'font-medium'}`}>\n                                {application.displayName}\n                              </span>\n                              {isCurrent && (\n                                <span className=\"text-xs bg-primary-100 text-primary-700 px-2 py-0.5 rounded-full\">\n                                  Current\n                                </span>\n                              )}\n                            </div>\n                            <p className=\"text-sm text-gray-500 truncate\">\n                              {application.description}\n                            </p>\n                          </div>\n                        </div>\n                        \n                        {isCurrent && (\n                          <CheckIcon className=\"h-5 w-5 text-primary-600\" />\n                        )}\n                      </div>\n                    )}\n                  </Listbox.Option>\n                )\n              })}\n            </Listbox.Options>\n          </Transition>\n        </div>\n      </Listbox>\n    </div>\n  )\n}"],"names":["ApplicationSwitcher","applications","id","name","displayName","route","icon","ChartBarIcon","color","description","requiredPermissions","CogIcon","EyeIcon","className","userPermissions","router","useRouter","pathname","usePathname","currentApplication","setCurrentApplication","useState","isLoading","setIsLoading","isOpen","setIsOpen","useEffect","currentApp","find","app","startsWith","localStorage","setItem","savedAppId","getItem","savedApp","hasPermission","accessibleApplications","filter","length","some","permission","includes","handleApplicationSwitch","application","push","error","console","currentAppDisplay","div","Listbox","value","onChange","Button","disabled","LoadingSpinner","size","span","ChevronDownIcon","aria-hidden","Transition","show","as","Fragment","leave","leaveFrom","leaveTo","beforeEnter","afterLeave","Options","map","isCurrent","Option","active","selected","p","CheckIcon"],"mappings":"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"}