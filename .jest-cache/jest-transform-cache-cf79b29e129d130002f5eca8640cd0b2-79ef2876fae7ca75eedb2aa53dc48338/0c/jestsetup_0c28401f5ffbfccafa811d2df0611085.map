{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/jest.setup.js"],"sourcesContent":["import '@testing-library/jest-dom'\nimport 'jest-axe/extend-expect'\n\n// Import MSW server for API mocking\nimport './src/__tests__/mocks/server'\n\n// Mock Next.js router\njest.mock('next/router', () => ({\n  useRouter() {\n    return {\n      route: '/',\n      pathname: '/',\n      query: {},\n      asPath: '/',\n      push: jest.fn(),\n      pop: jest.fn(),\n      reload: jest.fn(),\n      back: jest.fn(),\n      prefetch: jest.fn().mockResolvedValue(undefined),\n      beforePopState: jest.fn(),\n      events: {\n        on: jest.fn(),\n        off: jest.fn(),\n        emit: jest.fn(),\n      },\n      isFallback: false,\n      isLocaleDomain: true,\n      isReady: true,\n      defaultLocale: 'en',\n      domainLocales: [],\n      isPreview: false,\n    }\n  },\n}))\n\n// Mock Next.js navigation\njest.mock('next/navigation', () => ({\n  useRouter() {\n    return {\n      push: jest.fn(),\n      replace: jest.fn(),\n      refresh: jest.fn(),\n      back: jest.fn(),\n      forward: jest.fn(),\n      prefetch: jest.fn(),\n    }\n  },\n  useSearchParams() {\n    return {\n      get: jest.fn(),\n    }\n  },\n  usePathname() {\n    return '/'\n  },\n}))\n\n// Mock Next.js Image component\njest.mock('next/image', () => ({\n  __esModule: true,\n  default: (props) => {\n    // eslint-disable-next-line @next/next/no-img-element\n    return <img {...props} />\n  },\n}))\n\n// Mock Next.js Link component\njest.mock('next/link', () => ({\n  __esModule: true,\n  default: ({ children, href, ...props }) => {\n    return (\n      <a href={href} {...props}>\n        {children}\n      </a>\n    )\n  },\n}))\n\n// Mock ResizeObserver\nglobal.ResizeObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}))\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}))\n\n// Mock window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n})\n\n// Mock window.scrollTo\nObject.defineProperty(window, 'scrollTo', {\n  writable: true,\n  value: jest.fn(),\n})\n\n// Mock localStorage\nObject.defineProperty(window, 'localStorage', {\n  value: {\n    getItem: jest.fn(),\n    setItem: jest.fn(),\n    removeItem: jest.fn(),\n    clear: jest.fn(),\n    key: jest.fn(),\n    length: 0,\n  },\n  writable: true,\n})\n\n// Mock sessionStorage\nObject.defineProperty(window, 'sessionStorage', {\n  value: {\n    getItem: jest.fn(),\n    setItem: jest.fn(),\n    removeItem: jest.fn(),\n    clear: jest.fn(),\n    key: jest.fn(),\n    length: 0,\n  },\n  writable: true,\n})\n\n// Mock crypto for UUID generation\nObject.defineProperty(global, 'crypto', {\n  value: {\n    randomUUID: jest.fn(() => 'test-uuid-1234'),\n    getRandomValues: jest.fn((arr) => {\n      for (let i = 0; i < arr.length; i++) {\n        arr[i] = Math.floor(Math.random() * 256)\n      }\n      return arr\n    }),\n  },\n})\n\n// Mock fetch if not available\nif (!global.fetch) {\n  global.fetch = jest.fn()\n}\n\n// Custom console override to catch errors during tests\nconst originalError = console.error\nconst originalWarn = console.warn\n\nbeforeAll(() => {\n  console.error = (...args) => {\n    if (\n      typeof args[0] === 'string' &&\n      (args[0].includes('Warning: ReactDOM.render is no longer supported') ||\n       args[0].includes('Warning: React.createFactory() is deprecated') ||\n       args[0].includes('Warning: componentWillReceiveProps') ||\n       args[0].includes('act(...)'))\n    ) {\n      return\n    }\n    originalError.call(console, ...args)\n  }\n  \n  console.warn = (...args) => {\n    if (\n      typeof args[0] === 'string' &&\n      args[0].includes('componentWillReceiveProps')\n    ) {\n      return\n    }\n    originalWarn.call(console, ...args)\n  }\n})\n\nafterAll(() => {\n  console.error = originalError\n  console.warn = originalWarn\n})\n\n// Clean up after each test\nafterEach(() => {\n  jest.clearAllMocks()\n  // Reset localStorage and sessionStorage\n  window.localStorage.clear()\n  window.sessionStorage.clear()\n})\n\n// Global test utilities available in all tests\nglobal.testUtils = {\n  // Helper to create mock user with tenant context\n  createMockUser: (overrides = {}) => ({\n    id: 'test-user-id',\n    email: 'test@example.com',\n    name: 'Test User',\n    role: 'user',\n    organisation_id: 'test-tenant-id',\n    is_active: true,\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    ...overrides,\n  }),\n  \n  // Helper to create mock organisation\n  createMockOrganisation: (overrides = {}) => ({\n    id: 'test-tenant-id',\n    name: 'Test Organisation',\n    industry: 'general',\n    subscription_plan: 'professional',\n    is_active: true,\n    ...overrides,\n  }),\n  \n  // Helper to create mock API response\n  createMockApiResponse: (data, status = 200) => ({\n    ok: status >= 200 && status < 300,\n    status,\n    json: jest.fn().mockResolvedValue(data),\n    text: jest.fn().mockResolvedValue(JSON.stringify(data)),\n  }),\n}\n\n// Make fetch return successful responses by default\nglobal.fetch.mockResolvedValue({\n  ok: true,\n  status: 200,\n  json: jest.fn().mockResolvedValue({}),\n  text: jest.fn().mockResolvedValue(''),\n})\n\n// Setup MSW (Mock Service Worker) for API mocking in tests\nimport { setupServer } from 'msw/node'\nimport { http, HttpResponse } from 'msw'\n\n// Create MSW server instance that will be available in all tests\nexport const server = setupServer(\n  // Default handlers that can be overridden in individual tests\n  http.get('/api/v1/auth/me', () => {\n    return HttpResponse.json(global.testUtils.createMockUser())\n  }),\n  \n  http.get('/api/v1/organisations', () => {\n    return HttpResponse.json({\n      organisations: [global.testUtils.createMockOrganisation()],\n    })\n  }),\n  \n  // Health check endpoint\n  http.get('/health', () => {\n    return HttpResponse.json({ status: 'healthy' })\n  }),\n)\n\n// Start server before all tests\nbeforeAll(() => server.listen({ onUnhandledRequest: 'warn' }))\n\n// Reset handlers after each test to ensure test isolation\nafterEach(() => server.resetHandlers())\n\n// Clean up after all tests\nafterAll(() => server.close())"],"names":["jest","mock","useRouter","route","pathname","query","asPath","push","fn","pop","reload","back","prefetch","mockResolvedValue","undefined","beforePopState","events","on","off","emit","isFallback","isLocaleDomain","isReady","defaultLocale","domainLocales","isPreview","replace","refresh","forward","useSearchParams","get","usePathname","__esModule","default","props","img","children","href","a","server","global","ResizeObserver","mockImplementation","observe","unobserve","disconnect","IntersectionObserver","Object","defineProperty","window","writable","value","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","getItem","setItem","removeItem","clear","key","length","randomUUID","getRandomValues","arr","i","Math","floor","random","fetch","originalError","console","error","originalWarn","warn","beforeAll","args","includes","call","afterAll","afterEach","clearAllMocks","localStorage","sessionStorage","testUtils","createMockUser","overrides","id","email","name","role","organisation_id","is_active","created_at","Date","toISOString","updated_at","createMockOrganisation","industry","subscription_plan","createMockApiResponse","data","status","ok","json","text","JSON","stringify","setupServer","http","HttpResponse","organisations","listen","onUnhandledRequest","resetHandlers","close"],"mappings":"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"}