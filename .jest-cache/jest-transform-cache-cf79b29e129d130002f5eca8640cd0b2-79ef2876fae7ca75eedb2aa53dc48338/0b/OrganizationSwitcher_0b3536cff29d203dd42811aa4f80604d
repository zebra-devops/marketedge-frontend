1508e0d2920b079e32f21dd73223f17f
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return OrganizationSwitcher;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _react1 = require("@headlessui/react");
const _outline = require("@heroicons/react/24/outline");
const _OrganisationProvider = require("../providers/OrganisationProvider");
const _LoadingSpinner = /*#__PURE__*/ _interop_require_default(require("./LoadingSpinner"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const getIndustryIcon = (industry)=>{
    // Industry badge colors and icons
    switch(industry.toLowerCase()){
        case "cinema exhibition":
        case "cinema":
            return {
                color: "bg-purple-100 text-purple-800",
                icon: "\uD83C\uDFAC"
            };
        case "hotel":
        case "accommodation":
            return {
                color: "bg-blue-100 text-blue-800",
                icon: "\uD83C\uDFE8"
            };
        case "gym":
        case "fitness":
            return {
                color: "bg-green-100 text-green-800",
                icon: "\uD83D\uDCAA"
            };
        case "retail":
        case "retail trade":
            return {
                color: "bg-yellow-100 text-yellow-800",
                icon: "\uD83D\uDECD️"
            };
        case "b2b":
        case "business services":
            return {
                color: "bg-gray-100 text-gray-800",
                icon: "\uD83C\uDFE2"
            };
        default:
            return {
                color: "bg-gray-100 text-gray-800",
                icon: "\uD83C\uDFE2"
            };
    }
};
function OrganizationSwitcher({ className = "" }) {
    const { currentOrganisation, accessibleOrganisations, switchOrganisation, isSwitching, isLoadingAccessible } = (0, _OrganisationProvider.useOrganisationContext)();
    const [isOpen, setIsOpen] = (0, _react.useState)(false);
    const handleSwitchOrganisation = async (organisation)=>{
        if (organisation.id === currentOrganisation?.id || isSwitching) return;
        try {
            await switchOrganisation(organisation.id);
            setIsOpen(false);
        } catch (error) {
            console.error("Failed to switch organization:", error);
        // Error handling could show a toast notification here
        }
    };
    // Don't show if user has access to only one organization or none
    if (isLoadingAccessible || accessibleOrganisations.length <= 1) {
        return null;
    }
    const currentOrgDisplay = currentOrganisation || accessibleOrganisations[0];
    const currentIndustryStyle = getIndustryIcon(currentOrgDisplay?.industry || "");
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: `relative ${className}`,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.Listbox, {
            value: currentOrganisation,
            onChange: handleSwitchOrganisation,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "relative",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react1.Listbox.Button, {
                        className: "relative w-full min-w-[200px] cursor-pointer rounded-lg bg-white py-2 pl-3 pr-10 text-left border border-gray-300 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-1 focus:ring-primary-500 sm:text-sm",
                        disabled: isSwitching,
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-3",
                                children: [
                                    isSwitching ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingSpinner.default, {
                                        size: "sm"
                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.BuildingOfficeIcon, {
                                        className: "h-5 w-5 text-gray-400"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "flex-1 min-w-0",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center gap-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "block truncate font-medium text-gray-900",
                                                    children: currentOrgDisplay?.name || "Select Organization"
                                                }),
                                                currentOrgDisplay?.industry && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                    className: `inline-flex items-center gap-1 px-2 py-0.5 rounded-full text-xs font-medium ${currentIndustryStyle.color}`,
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            children: currentIndustryStyle.icon
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            className: "hidden sm:inline",
                                                            children: currentOrgDisplay.industry
                                                        })
                                                    ]
                                                })
                                            ]
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ChevronDownIcon, {
                                    className: "h-5 w-5 text-gray-400",
                                    "aria-hidden": "true"
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.Transition, {
                        show: isOpen,
                        as: _react.Fragment,
                        leave: "transition ease-in duration-100",
                        leaveFrom: "opacity-100",
                        leaveTo: "opacity-0",
                        beforeEnter: ()=>setIsOpen(true),
                        afterLeave: ()=>setIsOpen(false),
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react1.Listbox.Options, {
                            className: "absolute z-50 mt-1 max-h-60 w-full min-w-[280px] overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "px-3 py-2 text-xs font-medium text-gray-500 border-b border-gray-200",
                                    children: "Switch Organization"
                                }),
                                accessibleOrganisations.map((organisation)=>{
                                    const industryStyle = getIndustryIcon(organisation.industry || "");
                                    const isCurrent = organisation.id === currentOrganisation?.id;
                                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.Listbox.Option, {
                                        className: ({ active, selected })=>`relative cursor-pointer select-none py-3 px-3 ${active || selected ? "bg-primary-50 text-primary-900" : "text-gray-900"} ${isCurrent ? "bg-primary-50" : ""}`,
                                        value: organisation,
                                        children: ({ selected })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex items-center justify-between",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center gap-3 flex-1 min-w-0",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.BuildingOfficeIcon, {
                                                                className: "h-5 w-5 text-gray-400 flex-shrink-0"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "flex-1 min-w-0",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "flex items-center gap-2 mb-1",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                className: `block truncate ${isCurrent ? "font-semibold" : "font-medium"}`,
                                                                                children: organisation.name
                                                                            }),
                                                                            isCurrent && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                className: "text-xs bg-primary-100 text-primary-700 px-2 py-0.5 rounded-full",
                                                                                children: "Current"
                                                                            })
                                                                        ]
                                                                    }),
                                                                    organisation.industry && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                        className: "flex items-center gap-2",
                                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                            className: `inline-flex items-center gap-1 px-2 py-0.5 rounded-full text-xs font-medium ${industryStyle.color}`,
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                    children: industryStyle.icon
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                    children: organisation.industry
                                                                                })
                                                                            ]
                                                                        })
                                                                    })
                                                                ]
                                                            })
                                                        ]
                                                    }),
                                                    isCurrent && /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.CheckIcon, {
                                                        className: "h-5 w-5 text-primary-600"
                                                    })
                                                ]
                                            })
                                    }, organisation.id);
                                })
                            ]
                        })
                    })
                ]
            })
        })
    });
}

//# sourceMappingURL=data:application/json;base64,