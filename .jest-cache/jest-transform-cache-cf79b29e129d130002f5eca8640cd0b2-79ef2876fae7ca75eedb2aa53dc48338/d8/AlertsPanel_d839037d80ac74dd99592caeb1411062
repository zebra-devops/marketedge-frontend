fa942a645e01121842f4adc6ecd7ed3d
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AlertsPanel", {
    enumerable: true,
    get: function() {
        return AlertsPanel;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _outline = require("@heroicons/react/24/outline");
const _marketedgeapi = require("../../services/market-edge-api");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const AlertsPanel = ({ alerts, isLoading = false, onMarkRead, onRefresh, className = "" })=>{
    const [processingAlerts, setProcessingAlerts] = (0, _react.useState)(new Set());
    const getSeverityIcon = (severity)=>{
        switch(severity){
            case "critical":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.XCircleIcon, {
                    className: "w-5 h-5 text-red-500"
                });
            case "high":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ExclamationCircleIcon, {
                    className: "w-5 h-5 text-red-500"
                });
            case "medium":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ExclamationTriangleIcon, {
                    className: "w-5 h-5 text-yellow-500"
                });
            case "low":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.InformationCircleIcon, {
                    className: "w-5 h-5 text-blue-500"
                });
            default:
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.InformationCircleIcon, {
                    className: "w-5 h-5 text-gray-500"
                });
        }
    };
    const getSeverityBadge = (severity)=>{
        const baseClasses = "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium";
        switch(severity){
            case "critical":
                return `${baseClasses} bg-red-100 text-red-800`;
            case "high":
                return `${baseClasses} bg-red-100 text-red-800`;
            case "medium":
                return `${baseClasses} bg-yellow-100 text-yellow-800`;
            case "low":
                return `${baseClasses} bg-blue-100 text-blue-800`;
            default:
                return `${baseClasses} bg-gray-100 text-gray-800`;
        }
    };
    const getAlertTypeLabel = (type)=>{
        const labels = {
            "price_change": "Price Change",
            "new_competitor": "New Competitor",
            "anomaly": "Anomaly",
            "promotion": "Promotion",
            "market_shift": "Market Shift",
            "competitor_move": "Competitor Move"
        };
        return labels[type] || type.charAt(0).toUpperCase() + type.slice(1);
    };
    const formatTimeAgo = (dateString)=>{
        const date = new Date(dateString);
        const now = new Date();
        const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));
        if (diffInMinutes < 1) return "Just now";
        if (diffInMinutes < 60) return `${diffInMinutes}m ago`;
        if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;
        if (diffInMinutes < 10080) return `${Math.floor(diffInMinutes / 1440)}d ago`;
        return date.toLocaleDateString();
    };
    const handleMarkRead = async (alertId)=>{
        if (processingAlerts.has(alertId)) return;
        setProcessingAlerts((prev)=>new Set(prev).add(alertId));
        try {
            await _marketedgeapi.marketEdgeAPI.markAlertRead(alertId);
            if (onMarkRead) {
                onMarkRead(alertId);
            }
        } catch (error) {
            console.error("Failed to mark alert as read:", error);
        } finally{
            setProcessingAlerts((prev)=>{
                const newSet = new Set(prev);
                newSet.delete(alertId);
                return newSet;
            });
        }
    };
    // Group alerts by severity and read status
    const { unreadAlerts, readAlerts } = _react.default.useMemo(()=>{
        const unread = alerts.filter((alert)=>!alert.is_read).sort((a, b)=>{
            // Sort by severity first, then by date
            const severityOrder = {
                critical: 4,
                high: 3,
                medium: 2,
                low: 1
            };
            const aSeverity = severityOrder[a.severity] || 0;
            const bSeverity = severityOrder[b.severity] || 0;
            if (aSeverity !== bSeverity) return bSeverity - aSeverity;
            return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();
        });
        const read = alerts.filter((alert)=>alert.is_read).sort((a, b)=>new Date(b.created_at).getTime() - new Date(a.created_at).getTime()).slice(0, 10); // Show only last 10 read alerts
        return {
            unreadAlerts: unread,
            readAlerts: read
        };
    }, [
        alerts
    ]);
    if (isLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: `bg-white rounded-lg border border-gray-200 ${className}`,
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "p-4 border-b border-gray-200",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                        className: "text-lg font-medium text-gray-900",
                        children: "Market Alerts"
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "p-4",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "space-y-4",
                        children: [
                            ...Array(3)
                        ].map((_, i)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "animate-pulse",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-start space-x-3",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "w-5 h-5 bg-gray-200 rounded"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex-1",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "h-4 bg-gray-200 rounded w-3/4 mb-2"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "h-3 bg-gray-200 rounded w-1/2"
                                                })
                                            ]
                                        })
                                    ]
                                })
                            }, i))
                    })
                })
            ]
        });
    }
    if (alerts.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: `bg-white rounded-lg border border-gray-200 ${className}`,
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "p-4 border-b border-gray-200",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                className: "text-lg font-medium text-gray-900",
                                children: "Market Alerts"
                            }),
                            onRefresh && /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: onRefresh,
                                className: "text-sm text-blue-600 hover:text-blue-800",
                                children: "Refresh"
                            })
                        ]
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "p-6 text-center",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.CheckCircleIcon, {
                            className: "mx-auto h-12 w-12 text-green-400"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                            className: "mt-2 text-sm font-medium text-gray-900",
                            children: "All clear!"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            className: "mt-1 text-sm text-gray-500",
                            children: "No alerts at the moment. You'll be notified of any market changes."
                        })
                    ]
                })
            ]
        });
    }
    const AlertItem = ({ alert, showActions = true })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: `p-4 border-l-4 ${alert.is_read ? "border-gray-200 bg-gray-50" : alert.severity === "critical" ? "border-red-500 bg-red-50" : alert.severity === "high" ? "border-red-400 bg-red-50" : alert.severity === "medium" ? "border-yellow-400 bg-yellow-50" : "border-blue-400 bg-blue-50"}`,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-start justify-between",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-start space-x-3",
                        children: [
                            getSeverityIcon(alert.severity),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex-1 min-w-0",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center space-x-2 mb-1",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: getSeverityBadge(alert.severity),
                                                children: alert.severity.toUpperCase()
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: "text-xs text-gray-500",
                                                children: getAlertTypeLabel(alert.alert_type)
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: `text-sm font-medium ${alert.is_read ? "text-gray-700" : "text-gray-900"}`,
                                        children: alert.title
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: `text-sm mt-1 ${alert.is_read ? "text-gray-600" : "text-gray-700"}`,
                                        children: alert.message
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center justify-between mt-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: "text-xs text-gray-500",
                                                children: formatTimeAgo(alert.created_at)
                                            }),
                                            alert.trigger_data && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                className: "text-xs text-gray-500",
                                                children: [
                                                    "Confidence: ",
                                                    Math.round((alert.trigger_data.confidence || 0) * 100),
                                                    "%"
                                                ]
                                            })
                                        ]
                                    })
                                ]
                            })
                        ]
                    }),
                    showActions && !alert.is_read && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "flex items-center space-x-1 ml-4",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            onClick: ()=>handleMarkRead(alert.id),
                            disabled: processingAlerts.has(alert.id),
                            className: "p-1 text-gray-400 hover:text-gray-600 transition-colors",
                            title: "Mark as read",
                            children: processingAlerts.has(alert.id) ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "w-4 h-4 border border-gray-300 border-t-gray-600 rounded-full animate-spin"
                            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.EyeIcon, {
                                className: "w-4 h-4"
                            })
                        })
                    })
                ]
            })
        });
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `bg-white rounded-lg border border-gray-200 ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "p-4 border-b border-gray-200",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                            className: "text-lg font-medium text-gray-900",
                            children: [
                                "Market Alerts",
                                unreadAlerts.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    className: "ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800",
                                    children: [
                                        unreadAlerts.length,
                                        " new"
                                    ]
                                })
                            ]
                        }),
                        onRefresh && /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            onClick: onRefresh,
                            className: "text-sm text-blue-600 hover:text-blue-800",
                            children: "Refresh"
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "max-h-96 overflow-y-auto",
                children: [
                    unreadAlerts.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "px-4 py-2 bg-gray-50 border-b border-gray-200",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                    className: "text-sm font-medium text-gray-900",
                                    children: [
                                        "Unread (",
                                        unreadAlerts.length,
                                        ")"
                                    ]
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "space-y-1",
                                children: unreadAlerts.map((alert)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(AlertItem, {
                                        alert: alert
                                    }, alert.id))
                            })
                        ]
                    }),
                    readAlerts.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "px-4 py-2 bg-gray-50 border-b border-gray-200",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                    className: "text-sm font-medium text-gray-700",
                                    children: "Recently Read"
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "space-y-1",
                                children: readAlerts.map((alert)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(AlertItem, {
                                        alert: alert,
                                        showActions: false
                                    }, alert.id))
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "px-4 py-3 bg-gray-50 border-t border-gray-200 text-center",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    className: "text-xs text-gray-500",
                    children: "Alerts are updated in real-time based on market changes"
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,