ae7d17621acbea83b84155c8dc501300
"use strict";

/* istanbul ignore next */
function cov_m5y1grxz9() {
  var path = "/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/ui/LoadingSpinner.tsx";
  var hash = "9b5b940b0b1553595c8763bebcbf4d79a0857947";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/ui/LoadingSpinner.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 71
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "9": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "10": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 37,
          column: 7
        }
      },
      "12": {
        start: {
          line: 39,
          column: 17
        },
        end: {
          line: 39,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 21
          }
        },
        loc: {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 26,
            column: 24
          }
        },
        loc: {
          start: {
            line: 26,
            column: 58
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 22,
            column: 38
          }
        }, {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 24,
            column: 5
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 14
          }
        }, {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 32
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 33
          },
          end: {
            line: 26,
            column: 37
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 26,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 53
          }
        }],
        line: 26
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/ui/LoadingSpinner.tsx"],
      sourcesContent: ["import React from 'react'\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg'\n  className?: string\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ size = 'md', className = '' }) => {\n  const sizeClasses = {\n    sm: 'h-4 w-4',\n    md: 'h-8 w-8',\n    lg: 'h-12 w-12'\n  }\n\n  return (\n    <div className={`flex justify-center items-center ${className}`}>\n      <div\n        className={`animate-spin rounded-full border-2 border-gray-300 border-t-primary-600 ${sizeClasses[size]}`}\n      />\n    </div>\n  )\n}\n\nexport default LoadingSpinner\nexport { LoadingSpinner }"],
      names: ["LoadingSpinner", "size", "className", "sizeClasses", "sm", "md", "lg", "div"],
      mappings: ";;;;;;;;;;;IAwBSA,cAAc;eAAdA;;IADT,OAA6B;eAA7B;;;;8DAvBkB;;;;;;AAOlB,MAAMA,iBAAgD,CAAC,EAAEC,OAAO,IAAI,EAAEC,YAAY,EAAE,EAAE;IACpF,MAAMC,cAAc;QAClBC,IAAI;QACJC,IAAI;QACJC,IAAI;IACN;IAEA,qBACE,qBAACC;QAAIL,WAAW,CAAC,iCAAiC,EAAEA,UAAU,CAAC;kBAC7D,cAAA,qBAACK;YACCL,WAAW,CAAC,wEAAwE,EAAEC,WAAW,CAACF,KAAK,CAAC,CAAC;;;AAIjH;MAEA,WAAeD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9b5b940b0b1553595c8763bebcbf4d79a0857947"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_m5y1grxz9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_m5y1grxz9();
cov_m5y1grxz9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_m5y1grxz9().f[0]++;
  cov_m5y1grxz9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_m5y1grxz9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_m5y1grxz9().s[3]++;
_export(exports, {
  LoadingSpinner: function () {
    /* istanbul ignore next */
    cov_m5y1grxz9().f[1]++;
    cov_m5y1grxz9().s[4]++;
    return LoadingSpinner;
  },
  default: function () {
    /* istanbul ignore next */
    cov_m5y1grxz9().f[2]++;
    cov_m5y1grxz9().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_m5y1grxz9().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_m5y1grxz9().s[7]++, _interop_require_default(require("react")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_m5y1grxz9().f[3]++;
  cov_m5y1grxz9().s[8]++;
  return /* istanbul ignore next */(cov_m5y1grxz9().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_m5y1grxz9().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_m5y1grxz9().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_m5y1grxz9().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_m5y1grxz9().s[9]++;
const LoadingSpinner = ({
  size =
  /* istanbul ignore next */
  (cov_m5y1grxz9().b[2][0]++, "md"),
  className =
  /* istanbul ignore next */
  (cov_m5y1grxz9().b[3][0]++, "")
}) => {
  /* istanbul ignore next */
  cov_m5y1grxz9().f[4]++;
  const sizeClasses =
  /* istanbul ignore next */
  (cov_m5y1grxz9().s[10]++, {
    sm: "h-4 w-4",
    md: "h-8 w-8",
    lg: "h-12 w-12"
  });
  /* istanbul ignore next */
  cov_m5y1grxz9().s[11]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `flex justify-center items-center ${className}`,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: `animate-spin rounded-full border-2 border-gray-300 border-t-primary-600 ${sizeClasses[size]}`
    })
  });
};
const _default =
/* istanbul ignore next */
(cov_m5y1grxz9().s[12]++, LoadingSpinner);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMb2FkaW5nU3Bpbm5lciIsImNvdl9tNXkxZ3J4ejkiLCJmIiwicyIsImRlZmF1bHQiLCJfZGVmYXVsdCIsInNpemUiLCJiIiwiY2xhc3NOYW1lIiwic2l6ZUNsYXNzZXMiLCJzbSIsIm1kIiwibGciLCJfanN4cnVudGltZSIsImpzeCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXR0L1NpdGVzL01hcmtldEVkZ2UvcGxhdGZvcm0td3JhcHBlci9mcm9udGVuZC9zcmMvY29tcG9uZW50cy91aS9Mb2FkaW5nU3Bpbm5lci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5pbnRlcmZhY2UgTG9hZGluZ1NwaW5uZXJQcm9wcyB7XG4gIHNpemU/OiAnc20nIHwgJ21kJyB8ICdsZydcbiAgY2xhc3NOYW1lPzogc3RyaW5nXG59XG5cbmNvbnN0IExvYWRpbmdTcGlubmVyOiBSZWFjdC5GQzxMb2FkaW5nU3Bpbm5lclByb3BzPiA9ICh7IHNpemUgPSAnbWQnLCBjbGFzc05hbWUgPSAnJyB9KSA9PiB7XG4gIGNvbnN0IHNpemVDbGFzc2VzID0ge1xuICAgIHNtOiAnaC00IHctNCcsXG4gICAgbWQ6ICdoLTggdy04JyxcbiAgICBsZzogJ2gtMTIgdy0xMidcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2BmbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlciAke2NsYXNzTmFtZX1gfT5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPXtgYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBib3JkZXItMiBib3JkZXItZ3JheS0zMDAgYm9yZGVyLXQtcHJpbWFyeS02MDAgJHtzaXplQ2xhc3Nlc1tzaXplXX1gfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2FkaW5nU3Bpbm5lclxuZXhwb3J0IHsgTG9hZGluZ1NwaW5uZXIgfSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF3QlNBLGNBQWMsV0FBQUEsQ0FBQTtJQUFBO0lBQUFDLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0FBZEgsY0FBQTs7RUFEVEksT0FBNkIsV0FBQUEsQ0FBQTtJQUFBO0lBQUFILGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0FBN0JFLFFBQUE7Ozs7Ozs7O3VFQXZCa0I7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT2xCLE1BQU1MLGNBQUEsR0FBZ0RBLENBQUM7RUFBRU0sSUFBQTtFQUFBO0VBQUEsQ0FBQUwsYUFBQSxHQUFBTSxDQUFBLFVBQU8sSUFBSTtFQUFFQyxTQUFBO0VBQUE7RUFBQSxDQUFBUCxhQUFBLEdBQUFNLENBQUEsVUFBWSxFQUFFO0FBQUEsQ0FBRTtFQUFBO0VBQUFOLGFBQUEsR0FBQUMsQ0FBQTtFQUNwRixNQUFNTyxXQUFBO0VBQUE7RUFBQSxDQUFBUixhQUFBLEdBQUFFLENBQUEsUUFBYztJQUNsQk8sRUFBQSxFQUFJO0lBQ0pDLEVBQUEsRUFBSTtJQUNKQyxFQUFBLEVBQUk7RUFDTjtFQUFBO0VBQUFYLGFBQUEsR0FBQUUsQ0FBQTtFQUVBLG9CQUNFLElBQUFVLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO0lBQUlOLFNBQUEsRUFBVyxvQ0FBb0NBLFNBQUEsRUFBVztjQUM3RCxpQkFBQUssV0FBQSxDQUFBQyxHQUFBLEVBQUM7TUFDQ04sU0FBQSxFQUFXLDJFQUEyRUMsV0FBVyxDQUFDSCxJQUFBLENBQUs7OztBQUkvRztNQUVBRCxRQUFBO0FBQUE7QUFBQSxDQUFBSixhQUFBLEdBQUFFLENBQUEsUUFBZUgsY0FBQSIsImlnbm9yZUxpc3QiOltdfQ==