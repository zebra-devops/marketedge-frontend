{"version":3,"names":["cov_220e8v818s","actualCoverage","s","AuthContext","f","useAuth","useAuthContext","_react","createContext","undefined","context","useContext","b","Error","user","setUser","useState","isLoading","setIsLoading","useEffect","initAuth","_auth","authService","isAuthenticated","userData","getCurrentUser","error","console","logout","login","code","redirectUri","response","redirect_uri","refreshUser"],"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/hooks/useAuth.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, createContext, useContext } from 'react'\nimport { User, AuthState } from '@/types/auth'\nimport { authService } from '@/services/auth'\n\ninterface AuthContextType extends AuthState {\n  login: (code: string, redirectUri: string) => Promise<void>\n  logout: () => void\n  refreshUser: () => Promise<void>\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport const useAuthContext = (): AuthContextType => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error('useAuthContext must be used within an AuthProvider')\n  }\n  return context\n}\n\nexport const useAuth = () => {\n  const [user, setUser] = useState<User | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        if (authService.isAuthenticated()) {\n          const userData = await authService.getCurrentUser()\n          setUser(userData)\n        }\n      } catch (error) {\n        console.error('Auth initialization failed:', error)\n        authService.logout()\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    initAuth()\n  }, [])\n\n  const login = async (code: string, redirectUri: string) => {\n    try {\n      const response = await authService.login({ code, redirect_uri: redirectUri })\n      setUser(response.user)\n    } catch (error) {\n      console.error('Login failed:', error)\n      throw error\n    }\n  }\n\n  const logout = () => {\n    authService.logout()\n    setUser(null)\n  }\n\n  const refreshUser = async () => {\n    try {\n      const userData = await authService.getCurrentUser()\n      setUser(userData)\n    } catch (error) {\n      console.error('User refresh failed:', error)\n      logout()\n    }\n  }\n\n  return {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n    refreshUser,\n  }\n}\n\nexport { AuthContext }"],"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","ignoreList":[]}