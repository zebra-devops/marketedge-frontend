{"version":3,"names":["AuthService","cov_j0efudg6e","f","s","authService","login","loginData","response","_api","apiService","post","_jscookie","default","set","access_token","expires","refresh_token","getCurrentUser","get","getAuth0Url","redirectUri","encodeURIComponent","logout","remove","window","location","href","getToken","isAuthenticated"],"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/services/auth.ts"],"sourcesContent":["import { apiService } from './api'\nimport { LoginRequest, TokenResponse, User } from '@/types/auth'\nimport Cookies from 'js-cookie'\n\nexport class AuthService {\n  async login(loginData: LoginRequest): Promise<TokenResponse> {\n    const response = await apiService.post<TokenResponse>('/auth/login', loginData)\n    \n    Cookies.set('access_token', response.access_token, { expires: 1 })\n    Cookies.set('refresh_token', response.refresh_token, { expires: 7 })\n    \n    return response\n  }\n\n  async getCurrentUser(): Promise<User> {\n    return apiService.get<User>('/auth/me')\n  }\n\n  async getAuth0Url(redirectUri: string): Promise<{ auth_url: string }> {\n    return apiService.get<{ auth_url: string }>(`/auth/auth0-url?redirect_uri=${encodeURIComponent(redirectUri)}`)\n  }\n\n  logout() {\n    Cookies.remove('access_token')\n    Cookies.remove('refresh_token')\n    window.location.href = '/login'\n  }\n\n  getToken(): string | undefined {\n    return Cookies.get('access_token')\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.getToken()\n  }\n}\n\nexport const authService = new AuthService()"],"mappingsaA,WAAW,WAAAA,CAAA;IAAA;IAAAC,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAXH,WAAA;;EAiCAI,WAAW,WAAAA,CAAA;IAAA;IAAAH,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAXC,WAAA;;;;;iCArCc;;;uEAEP;;;;;;;;;;;;;;;AAEb,MAAMJ,WAAA;EACX,MAAMK,MAAMC,SAAuB,EAA0B;IAAA;IAAAL,aAAA,GAAAC,CAAA;IAC3D,MAAMK,QAAA;IAAA;IAAA,CAAAN,aAAA,GAAAE,CAAA,OAAW,MAAMK,IAAA,CAAAC,UAAU,CAACC,IAAI,CAAgB,eAAeJ,SAAA;IAAA;IAAAL,aAAA,GAAAE,CAAA;IAErEQ,SAAA,CAAAC,OAAO,CAACC,GAAG,CAAC,gBAAgBN,QAAA,CAASO,YAAY,EAAE;MAAEC,OAAA,EAAS;IAAE;IAAA;IAAAd,aAAA,GAAAE,CAAA;IAChEQ,SAAA,CAAAC,OAAO,CAACC,GAAG,CAAC,iBAAiBN,QAAA,CAASS,aAAa,EAAE;MAAED,OAAA,EAAS;IAAE;IAAA;IAAAd,aAAA,GAAAE,CAAA;IAElE,OAAOI,QAAA;EACT;EAEA,MAAMU,eAAA,EAAgC;IAAA;IAAAhB,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IACpC,OAAOK,IAAA,CAAAC,UAAU,CAACS,GAAG,CAAO;EAC9B;EAEA,MAAMC,YAAYC,WAAmB,EAAiC;IAAA;IAAAnB,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IACpE,OAAOK,IAAA,CAAAC,UAAU,CAACS,GAAG,CAAuB,gCAAgCG,kBAAA,CAAmBD,WAAA,GAAc;EAC/G;EAEAE,OAAA,EAAS;IAAA;IAAArB,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IACPQ,SAAA,CAAAC,OAAO,CAACW,MAAM,CAAC;IAAA;IAAAtB,aAAA,GAAAE,CAAA;IACfQ,SAAA,CAAAC,OAAO,CAACW,MAAM,CAAC;IAAA;IAAAtB,aAAA,GAAAE,CAAA;IACfqB,MAAA,CAAOC,QAAQ,CAACC,IAAI,GAAG;EACzB;EAEAC,SAAA,EAA+B;IAAA;IAAA1B,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IAC7B,OAAOQ,SAAA,CAAAC,OAAO,CAACM,GAAG,CAAC;EACrB;EAEAU,gBAAA,EAA2B;IAAA;IAAA3B,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IACzB,OAAO,CAAC,CAAC,IAAI,CAACwB,QAAQ;EACxB;AACF;AAEO,MAAMvB,WAAA;AAAA;AAAA,CAAAH,aAAA,GAAAE,CAAA,QAAc,IAAIH,WAAA","ignoreList":[]}