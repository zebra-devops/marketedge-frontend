72332908246e4c8da9e9c062b48ad211
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "PerformanceMetrics", {
    enumerable: true,
    get: function() {
        return PerformanceMetrics;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _outline = require("@heroicons/react/24/outline");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const MetricCard = ({ title, value, subtitle, trend, trendValue, icon, color = "blue", isLoading = false })=>{
    const colorClasses = {
        blue: "bg-blue-50 text-blue-600",
        green: "bg-green-50 text-green-600",
        red: "bg-red-50 text-red-600",
        yellow: "bg-yellow-50 text-yellow-600",
        gray: "bg-gray-50 text-gray-600"
    };
    const trendIcons = {
        up: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ArrowTrendingUpIcon, {
            className: "w-4 h-4 text-green-500"
        }),
        down: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ArrowTrendingDownIcon, {
            className: "w-4 h-4 text-red-500"
        }),
        stable: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.MinusIcon, {
            className: "w-4 h-4 text-gray-500"
        })
    };
    if (isLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "bg-white p-6 rounded-lg border border-gray-200",
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "animate-pulse",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between mb-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "h-4 bg-gray-200 rounded w-24"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "h-8 w-8 bg-gray-200 rounded"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "h-8 bg-gray-200 rounded w-20 mb-2"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "h-3 bg-gray-200 rounded w-16"
                    })
                ]
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "bg-white p-6 rounded-lg border border-gray-200 hover:shadow-md transition-shadow",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between mb-3",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                        className: "text-sm font-medium text-gray-500",
                        children: title
                    }),
                    icon && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: `p-2 rounded-lg ${colorClasses[color]}`,
                        children: icon
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-baseline justify-between",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-2xl font-semibold text-gray-900",
                                children: typeof value === "number" && title.toLowerCase().includes("price") ? `£${value.toFixed(2)}` : value
                            }),
                            subtitle && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-sm text-gray-600 mt-1",
                                children: subtitle
                            })
                        ]
                    }),
                    trend && trendValue && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center space-x-1",
                        children: [
                            trendIcons[trend],
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: `text-sm font-medium ${trend === "up" ? "text-green-600" : trend === "down" ? "text-red-600" : "text-gray-600"}`,
                                children: trendValue
                            })
                        ]
                    })
                ]
            })
        ]
    });
};
const PerformanceMetrics = ({ metrics, isLoading = false, className = "" })=>{
    if (isLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: `grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 ${className}`,
            children: [
                ...Array(8)
            ].map((_, i)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(MetricCard, {
                    title: "",
                    value: "",
                    isLoading: true
                }, i))
        });
    }
    if (!metrics || Object.keys(metrics).length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: `bg-white rounded-lg border border-gray-200 p-6 ${className}`,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-center text-gray-500",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ChartBarIcon, {
                        className: "mx-auto h-12 w-12 text-gray-400"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                        className: "mt-2 text-sm font-medium text-gray-900",
                        children: "No metrics available"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "mt-1 text-sm text-gray-500",
                        children: "Metrics will appear here once pricing data is analyzed."
                    })
                ]
            })
        });
    }
    // Calculate trend information
    const getTrendInfo = ()=>{
        const trends = metrics.trends;
        if (!trends || trends.trend === "insufficient_data") {
            return {
                trend: "stable",
                trendValue: "No trend data"
            };
        }
        const changePercent = Math.abs(trends.price_change_percent || 0);
        return {
            trend: trends.trend === "increasing" ? "up" : trends.trend === "decreasing" ? "down" : "stable",
            trendValue: `${changePercent.toFixed(1)}%`
        };
    };
    const trendInfo = getTrendInfo();
    const competitorCount = Object.keys(metrics.competitors || {}).length;
    const anomalyCount = metrics.anomalies?.length || 0;
    // Calculate price volatility (coefficient of variation)
    const priceVolatility = metrics.average_price > 0 ? metrics.standard_deviation / metrics.average_price * 100 : 0;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(MetricCard, {
                title: "Average Price",
                value: metrics.average_price,
                subtitle: `Median: £${metrics.median_price?.toFixed(2) || "0.00"}`,
                trend: trendInfo.trend,
                trendValue: trendInfo.trendValue,
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.CurrencyPoundIcon, {
                    className: "w-5 h-5"
                }),
                color: "blue"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(MetricCard, {
                title: "Price Range",
                value: `£${metrics.price_range?.toFixed(2) || "0.00"}`,
                subtitle: `£${metrics.min_price?.toFixed(2) || "0.00"} - £${metrics.max_price?.toFixed(2) || "0.00"}`,
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ChartBarIcon, {
                    className: "w-5 h-5"
                }),
                color: "green"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(MetricCard, {
                title: "Active Competitors",
                value: competitorCount,
                subtitle: `${metrics.total_data_points || 0} data points`,
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.UsersIcon, {
                    className: "w-5 h-5"
                }),
                color: "yellow"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(MetricCard, {
                title: "Price Volatility",
                value: `${priceVolatility.toFixed(1)}%`,
                subtitle: `Std Dev: £${metrics.standard_deviation?.toFixed(2) || "0.00"}`,
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ChartBarIcon, {
                    className: "w-5 h-5"
                }),
                color: priceVolatility > 15 ? "red" : priceVolatility > 8 ? "yellow" : "green"
            }),
            metrics.price_quartiles && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MetricCard, {
                        title: "25th Percentile",
                        value: metrics.price_quartiles.q1,
                        subtitle: "Lower quartile",
                        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ChartBarIcon, {
                            className: "w-5 h-5"
                        }),
                        color: "gray"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MetricCard, {
                        title: "75th Percentile",
                        value: metrics.price_quartiles.q3,
                        subtitle: "Upper quartile",
                        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ChartBarIcon, {
                            className: "w-5 h-5"
                        }),
                        color: "gray"
                    })
                ]
            }),
            anomalyCount > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(MetricCard, {
                title: "Price Anomalies",
                value: anomalyCount,
                subtitle: `${metrics.anomalies?.filter((a)=>a.severity === "high").length || 0} high severity`,
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ExclamationCircleIcon, {
                    className: "w-5 h-5"
                }),
                color: "red"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(MetricCard, {
                title: "Analysis Period",
                value: `${Math.ceil((new Date(metrics.period_end).getTime() - new Date(metrics.period_start).getTime()) / (1000 * 60 * 60 * 24))} days`,
                subtitle: `${new Date(metrics.period_start).toLocaleDateString()} - ${new Date(metrics.period_end).toLocaleDateString()}`,
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ChartBarIcon, {
                    className: "w-5 h-5"
                }),
                color: "gray"
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,