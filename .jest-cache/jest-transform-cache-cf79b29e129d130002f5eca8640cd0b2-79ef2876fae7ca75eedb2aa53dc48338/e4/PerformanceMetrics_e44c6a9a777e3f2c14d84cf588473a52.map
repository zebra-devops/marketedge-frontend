{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/market-edge/PerformanceMetrics.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n  MinusIcon,\n  CurrencyPoundIcon,\n  ChartBarIcon,\n  UsersIcon,\n  ExclamationCircleIcon\n} from '@heroicons/react/24/outline';\nimport { MarketMetrics } from '@/types/market-edge';\n\ninterface PerformanceMetricsProps {\n  metrics: MarketMetrics;\n  isLoading?: boolean;\n  className?: string;\n}\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  subtitle?: string;\n  trend?: 'up' | 'down' | 'stable';\n  trendValue?: string;\n  icon?: React.ReactNode;\n  color?: 'blue' | 'green' | 'red' | 'yellow' | 'gray';\n  isLoading?: boolean;\n}\n\nconst MetricCard: React.FC<MetricCardProps> = ({\n  title,\n  value,\n  subtitle,\n  trend,\n  trendValue,\n  icon,\n  color = 'blue',\n  isLoading = false\n}) => {\n  const colorClasses = {\n    blue: 'bg-blue-50 text-blue-600',\n    green: 'bg-green-50 text-green-600',\n    red: 'bg-red-50 text-red-600',\n    yellow: 'bg-yellow-50 text-yellow-600',\n    gray: 'bg-gray-50 text-gray-600'\n  };\n\n  const trendIcons = {\n    up: <ArrowTrendingUpIcon className=\"w-4 h-4 text-green-500\" />,\n    down: <ArrowTrendingDownIcon className=\"w-4 h-4 text-red-500\" />,\n    stable: <MinusIcon className=\"w-4 h-4 text-gray-500\" />\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n        <div className=\"animate-pulse\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <div className=\"h-4 bg-gray-200 rounded w-24\"></div>\n            <div className=\"h-8 w-8 bg-gray-200 rounded\"></div>\n          </div>\n          <div className=\"h-8 bg-gray-200 rounded w-20 mb-2\"></div>\n          <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg border border-gray-200 hover:shadow-md transition-shadow\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-sm font-medium text-gray-500\">{title}</h3>\n        {icon && (\n          <div className={`p-2 rounded-lg ${colorClasses[color]}`}>\n            {icon}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"flex items-baseline justify-between\">\n        <div>\n          <p className=\"text-2xl font-semibold text-gray-900\">\n            {typeof value === 'number' && title.toLowerCase().includes('price') \n              ? `£${value.toFixed(2)}` \n              : value}\n          </p>\n          {subtitle && (\n            <p className=\"text-sm text-gray-600 mt-1\">{subtitle}</p>\n          )}\n        </div>\n        \n        {trend && trendValue && (\n          <div className=\"flex items-center space-x-1\">\n            {trendIcons[trend]}\n            <span className={`text-sm font-medium ${\n              trend === 'up' ? 'text-green-600' :\n              trend === 'down' ? 'text-red-600' :\n              'text-gray-600'\n            }`}>\n              {trendValue}\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const PerformanceMetrics: React.FC<PerformanceMetricsProps> = ({\n  metrics,\n  isLoading = false,\n  className = ''\n}) => {\n  if (isLoading) {\n    return (\n      <div className={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 ${className}`}>\n        {[...Array(8)].map((_, i) => (\n          <MetricCard\n            key={i}\n            title=\"\"\n            value=\"\"\n            isLoading={true}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  if (!metrics || Object.keys(metrics).length === 0) {\n    return (\n      <div className={`bg-white rounded-lg border border-gray-200 p-6 ${className}`}>\n        <div className=\"text-center text-gray-500\">\n          <ChartBarIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No metrics available</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Metrics will appear here once pricing data is analyzed.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // Calculate trend information\n  const getTrendInfo = () => {\n    const trends = metrics.trends;\n    if (!trends || trends.trend === 'insufficient_data') {\n      return { trend: 'stable' as const, trendValue: 'No trend data' };\n    }\n\n    const changePercent = Math.abs(trends.price_change_percent || 0);\n    return {\n      trend: trends.trend === 'increasing' ? 'up' as const : \n             trends.trend === 'decreasing' ? 'down' as const : \n             'stable' as const,\n      trendValue: `${changePercent.toFixed(1)}%`\n    };\n  };\n\n  const trendInfo = getTrendInfo();\n  const competitorCount = Object.keys(metrics.competitors || {}).length;\n  const anomalyCount = metrics.anomalies?.length || 0;\n\n  // Calculate price volatility (coefficient of variation)\n  const priceVolatility = metrics.average_price > 0 \n    ? (metrics.standard_deviation / metrics.average_price) * 100 \n    : 0;\n\n  return (\n    <div className={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 ${className}`}>\n      {/* Average Price */}\n      <MetricCard\n        title=\"Average Price\"\n        value={metrics.average_price}\n        subtitle={`Median: £${metrics.median_price?.toFixed(2) || '0.00'}`}\n        trend={trendInfo.trend}\n        trendValue={trendInfo.trendValue}\n        icon={<CurrencyPoundIcon className=\"w-5 h-5\" />}\n        color=\"blue\"\n      />\n\n      {/* Price Range */}\n      <MetricCard\n        title=\"Price Range\"\n        value={`£${metrics.price_range?.toFixed(2) || '0.00'}`}\n        subtitle={`£${metrics.min_price?.toFixed(2) || '0.00'} - £${metrics.max_price?.toFixed(2) || '0.00'}`}\n        icon={<ChartBarIcon className=\"w-5 h-5\" />}\n        color=\"green\"\n      />\n\n      {/* Competitors */}\n      <MetricCard\n        title=\"Active Competitors\"\n        value={competitorCount}\n        subtitle={`${metrics.total_data_points || 0} data points`}\n        icon={<UsersIcon className=\"w-5 h-5\" />}\n        color=\"yellow\"\n      />\n\n      {/* Price Volatility */}\n      <MetricCard\n        title=\"Price Volatility\"\n        value={`${priceVolatility.toFixed(1)}%`}\n        subtitle={`Std Dev: £${metrics.standard_deviation?.toFixed(2) || '0.00'}`}\n        icon={<ChartBarIcon className=\"w-5 h-5\" />}\n        color={priceVolatility > 15 ? 'red' : priceVolatility > 8 ? 'yellow' : 'green'}\n      />\n\n      {/* Price Quartiles */}\n      {metrics.price_quartiles && (\n        <>\n          <MetricCard\n            title=\"25th Percentile\"\n            value={metrics.price_quartiles.q1}\n            subtitle=\"Lower quartile\"\n            icon={<ChartBarIcon className=\"w-5 h-5\" />}\n            color=\"gray\"\n          />\n\n          <MetricCard\n            title=\"75th Percentile\"\n            value={metrics.price_quartiles.q3}\n            subtitle=\"Upper quartile\"\n            icon={<ChartBarIcon className=\"w-5 h-5\" />}\n            color=\"gray\"\n          />\n        </>\n      )}\n\n      {/* Anomalies */}\n      {anomalyCount > 0 && (\n        <MetricCard\n          title=\"Price Anomalies\"\n          value={anomalyCount}\n          subtitle={`${metrics.anomalies?.filter(a => a.severity === 'high').length || 0} high severity`}\n          icon={<ExclamationCircleIcon className=\"w-5 h-5\" />}\n          color=\"red\"\n        />\n      )}\n\n      {/* Period Information */}\n      <MetricCard\n        title=\"Analysis Period\"\n        value={`${Math.ceil((new Date(metrics.period_end).getTime() - new Date(metrics.period_start).getTime()) / (1000 * 60 * 60 * 24))} days`}\n        subtitle={`${new Date(metrics.period_start).toLocaleDateString()} - ${new Date(metrics.period_end).toLocaleDateString()}`}\n        icon={<ChartBarIcon className=\"w-5 h-5\" />}\n        color=\"gray\"\n      />\n    </div>\n  );\n};"],"names":["PerformanceMetrics","MetricCard","title","value","subtitle","trend","trendValue","icon","color","isLoading","colorClasses","blue","green","red","yellow","gray","trendIcons","up","ArrowTrendingUpIcon","className","down","ArrowTrendingDownIcon","stable","MinusIcon","div","h3","p","toLowerCase","includes","toFixed","span","metrics","Array","map","_","i","Object","keys","length","ChartBarIcon","getTrendInfo","trends","changePercent","Math","abs","price_change_percent","trendInfo","competitorCount","competitors","anomalyCount","anomalies","priceVolatility","average_price","standard_deviation","median_price","CurrencyPoundIcon","price_range","min_price","max_price","total_data_points","UsersIcon","price_quartiles","q1","q3","filter","a","severity","ExclamationCircleIcon","ceil","Date","period_end","getTime","period_start","toLocaleDateString"],"mappings":"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"}