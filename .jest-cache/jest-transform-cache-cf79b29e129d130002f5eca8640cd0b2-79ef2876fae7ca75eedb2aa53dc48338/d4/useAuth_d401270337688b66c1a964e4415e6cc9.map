{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/hooks/useAuth.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, createContext, useContext } from 'react'\nimport { User, AuthState } from '@/types/auth'\nimport { authService } from '@/services/auth'\n\ninterface AuthContextType extends AuthState {\n  login: (code: string, redirectUri: string) => Promise<void>\n  logout: () => void\n  refreshUser: () => Promise<void>\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport const useAuthContext = (): AuthContextType => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error('useAuthContext must be used within an AuthProvider')\n  }\n  return context\n}\n\nexport const useAuth = () => {\n  const [user, setUser] = useState<User | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        if (authService.isAuthenticated()) {\n          const userData = await authService.getCurrentUser()\n          setUser(userData)\n        }\n      } catch (error) {\n        console.error('Auth initialization failed:', error)\n        authService.logout()\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    initAuth()\n  }, [])\n\n  const login = async (code: string, redirectUri: string) => {\n    try {\n      const response = await authService.login({ code, redirect_uri: redirectUri })\n      setUser(response.user)\n    } catch (error) {\n      console.error('Login failed:', error)\n      throw error\n    }\n  }\n\n  const logout = () => {\n    authService.logout()\n    setUser(null)\n  }\n\n  const refreshUser = async () => {\n    try {\n      const userData = await authService.getCurrentUser()\n      setUser(userData)\n    } catch (error) {\n      console.error('User refresh failed:', error)\n      logout()\n    }\n  }\n\n  return {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n    refreshUser,\n  }\n}\n\nexport { AuthContext }"],"names":["AuthContext","useAuth","useAuthContext","createContext","undefined","context","useContext","Error","user","setUser","useState","isLoading","setIsLoading","useEffect","initAuth","authService","isAuthenticated","userData","getCurrentUser","error","console","logout","login","code","redirectUri","response","redirect_uri","refreshUser"],"mappings":"AAAA;;;;;;;;;;;;IA+ESA,WAAW;eAAXA;;IAzDIC,OAAO;eAAPA;;IARAC,cAAc;eAAdA;;;uBAZkD;sBAEnC;AAQ5B,MAAMF,cAAcG,IAAAA,oBAAa,EAA8BC;AAExD,MAAMF,iBAAiB;IAC5B,MAAMG,UAAUC,IAAAA,iBAAU,EAACN;IAC3B,IAAI,CAACK,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IACA,OAAOF;AACT;AAEO,MAAMJ,UAAU;IACrB,MAAM,CAACO,MAAMC,QAAQ,GAAGC,IAAAA,eAAQ,EAAc;IAC9C,MAAM,CAACC,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAC;IAE3CG,IAAAA,gBAAS,EAAC;QACR,MAAMC,WAAW;YACf,IAAI;gBACF,IAAIC,iBAAW,CAACC,eAAe,IAAI;oBACjC,MAAMC,WAAW,MAAMF,iBAAW,CAACG,cAAc;oBACjDT,QAAQQ;gBACV;YACF,EAAE,OAAOE,OAAO;gBACdC,QAAQD,KAAK,CAAC,+BAA+BA;gBAC7CJ,iBAAW,CAACM,MAAM;YACpB,SAAU;gBACRT,aAAa;YACf;QACF;QAEAE;IACF,GAAG,EAAE;IAEL,MAAMQ,QAAQ,OAAOC,MAAcC;QACjC,IAAI;YACF,MAAMC,WAAW,MAAMV,iBAAW,CAACO,KAAK,CAAC;gBAAEC;gBAAMG,cAAcF;YAAY;YAC3Ef,QAAQgB,SAASjB,IAAI;QACvB,EAAE,OAAOW,OAAO;YACdC,QAAQD,KAAK,CAAC,iBAAiBA;YAC/B,MAAMA;QACR;IACF;IAEA,MAAME,SAAS;QACbN,iBAAW,CAACM,MAAM;QAClBZ,QAAQ;IACV;IAEA,MAAMkB,cAAc;QAClB,IAAI;YACF,MAAMV,WAAW,MAAMF,iBAAW,CAACG,cAAc;YACjDT,QAAQQ;QACV,EAAE,OAAOE,OAAO;YACdC,QAAQD,KAAK,CAAC,wBAAwBA;YACtCE;QACF;IACF;IAEA,OAAO;QACLb;QACAQ,iBAAiB,CAAC,CAACR;QACnBG;QACAW;QACAD;QACAM;IACF;AACF"}