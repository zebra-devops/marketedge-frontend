{"version":3,"names":["PerformanceMetrics","MetricCard","title","value","subtitle","trend","trendValue","icon","color","cov_1pvhl96lsj","b","isLoading","f","colorClasses","s","blue","green","red","yellow","gray","trendIcons","up","_jsxruntime","jsx","_outline","ArrowTrendingUpIcon","className","down","ArrowTrendingDownIcon","stable","MinusIcon","jsxs","toLowerCase","includes","toFixed","metrics","Array","map","_","i","Object","keys","length","ChartBarIcon","getTrendInfo","trends","changePercent","Math","abs","price_change_percent","trendInfo","competitorCount","competitors","anomalyCount","anomalies","priceVolatility","average_price","standard_deviation","median_price","CurrencyPoundIcon","price_range","min_price","max_price","total_data_points","UsersIcon","price_quartiles","Fragment","q1","q3","filter","a","severity","ExclamationCircleIcon","ceil","Date","period_end","getTime","period_start","toLocaleDateString"],"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/market-edge/PerformanceMetrics.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n  MinusIcon,\n  CurrencyPoundIcon,\n  ChartBarIcon,\n  UsersIcon,\n  ExclamationCircleIcon\n} from '@heroicons/react/24/outline';\nimport { MarketMetrics } from '@/types/market-edge';\n\ninterface PerformanceMetricsProps {\n  metrics: MarketMetrics;\n  isLoading?: boolean;\n  className?: string;\n}\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  subtitle?: string;\n  trend?: 'up' | 'down' | 'stable';\n  trendValue?: string;\n  icon?: React.ReactNode;\n  color?: 'blue' | 'green' | 'red' | 'yellow' | 'gray';\n  isLoading?: boolean;\n}\n\nconst MetricCard: React.FC<MetricCardProps> = ({\n  title,\n  value,\n  subtitle,\n  trend,\n  trendValue,\n  icon,\n  color = 'blue',\n  isLoading = false\n}) => {\n  const colorClasses = {\n    blue: 'bg-blue-50 text-blue-600',\n    green: 'bg-green-50 text-green-600',\n    red: 'bg-red-50 text-red-600',\n    yellow: 'bg-yellow-50 text-yellow-600',\n    gray: 'bg-gray-50 text-gray-600'\n  };\n\n  const trendIcons = {\n    up: <ArrowTrendingUpIcon className=\"w-4 h-4 text-green-500\" />,\n    down: <ArrowTrendingDownIcon className=\"w-4 h-4 text-red-500\" />,\n    stable: <MinusIcon className=\"w-4 h-4 text-gray-500\" />\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n        <div className=\"animate-pulse\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <div className=\"h-4 bg-gray-200 rounded w-24\"></div>\n            <div className=\"h-8 w-8 bg-gray-200 rounded\"></div>\n          </div>\n          <div className=\"h-8 bg-gray-200 rounded w-20 mb-2\"></div>\n          <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg border border-gray-200 hover:shadow-md transition-shadow\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-sm font-medium text-gray-500\">{title}</h3>\n        {icon && (\n          <div className={`p-2 rounded-lg ${colorClasses[color]}`}>\n            {icon}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"flex items-baseline justify-between\">\n        <div>\n          <p className=\"text-2xl font-semibold text-gray-900\">\n            {typeof value === 'number' && title.toLowerCase().includes('price') \n              ? `£${value.toFixed(2)}` \n              : value}\n          </p>\n          {subtitle && (\n            <p className=\"text-sm text-gray-600 mt-1\">{subtitle}</p>\n          )}\n        </div>\n        \n        {trend && trendValue && (\n          <div className=\"flex items-center space-x-1\">\n            {trendIcons[trend]}\n            <span className={`text-sm font-medium ${\n              trend === 'up' ? 'text-green-600' :\n              trend === 'down' ? 'text-red-600' :\n              'text-gray-600'\n            }`}>\n              {trendValue}\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const PerformanceMetrics: React.FC<PerformanceMetricsProps> = ({\n  metrics,\n  isLoading = false,\n  className = ''\n}) => {\n  if (isLoading) {\n    return (\n      <div className={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 ${className}`}>\n        {[...Array(8)].map((_, i) => (\n          <MetricCard\n            key={i}\n            title=\"\"\n            value=\"\"\n            isLoading={true}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  if (!metrics || Object.keys(metrics).length === 0) {\n    return (\n      <div className={`bg-white rounded-lg border border-gray-200 p-6 ${className}`}>\n        <div className=\"text-center text-gray-500\">\n          <ChartBarIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No metrics available</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Metrics will appear here once pricing data is analyzed.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // Calculate trend information\n  const getTrendInfo = () => {\n    const trends = metrics.trends;\n    if (!trends || trends.trend === 'insufficient_data') {\n      return { trend: 'stable' as const, trendValue: 'No trend data' };\n    }\n\n    const changePercent = Math.abs(trends.price_change_percent || 0);\n    return {\n      trend: trends.trend === 'increasing' ? 'up' as const : \n             trends.trend === 'decreasing' ? 'down' as const : \n             'stable' as const,\n      trendValue: `${changePercent.toFixed(1)}%`\n    };\n  };\n\n  const trendInfo = getTrendInfo();\n  const competitorCount = Object.keys(metrics.competitors || {}).length;\n  const anomalyCount = metrics.anomalies?.length || 0;\n\n  // Calculate price volatility (coefficient of variation)\n  const priceVolatility = metrics.average_price > 0 \n    ? (metrics.standard_deviation / metrics.average_price) * 100 \n    : 0;\n\n  return (\n    <div className={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 ${className}`}>\n      {/* Average Price */}\n      <MetricCard\n        title=\"Average Price\"\n        value={metrics.average_price}\n        subtitle={`Median: £${metrics.median_price?.toFixed(2) || '0.00'}`}\n        trend={trendInfo.trend}\n        trendValue={trendInfo.trendValue}\n        icon={<CurrencyPoundIcon className=\"w-5 h-5\" />}\n        color=\"blue\"\n      />\n\n      {/* Price Range */}\n      <MetricCard\n        title=\"Price Range\"\n        value={`£${metrics.price_range?.toFixed(2) || '0.00'}`}\n        subtitle={`£${metrics.min_price?.toFixed(2) || '0.00'} - £${metrics.max_price?.toFixed(2) || '0.00'}`}\n        icon={<ChartBarIcon className=\"w-5 h-5\" />}\n        color=\"green\"\n      />\n\n      {/* Competitors */}\n      <MetricCard\n        title=\"Active Competitors\"\n        value={competitorCount}\n        subtitle={`${metrics.total_data_points || 0} data points`}\n        icon={<UsersIcon className=\"w-5 h-5\" />}\n        color=\"yellow\"\n      />\n\n      {/* Price Volatility */}\n      <MetricCard\n        title=\"Price Volatility\"\n        value={`${priceVolatility.toFixed(1)}%`}\n        subtitle={`Std Dev: £${metrics.standard_deviation?.toFixed(2) || '0.00'}`}\n        icon={<ChartBarIcon className=\"w-5 h-5\" />}\n        color={priceVolatility > 15 ? 'red' : priceVolatility > 8 ? 'yellow' : 'green'}\n      />\n\n      {/* Price Quartiles */}\n      {metrics.price_quartiles && (\n        <>\n          <MetricCard\n            title=\"25th Percentile\"\n            value={metrics.price_quartiles.q1}\n            subtitle=\"Lower quartile\"\n            icon={<ChartBarIcon className=\"w-5 h-5\" />}\n            color=\"gray\"\n          />\n\n          <MetricCard\n            title=\"75th Percentile\"\n            value={metrics.price_quartiles.q3}\n            subtitle=\"Upper quartile\"\n            icon={<ChartBarIcon className=\"w-5 h-5\" />}\n            color=\"gray\"\n          />\n        </>\n      )}\n\n      {/* Anomalies */}\n      {anomalyCount > 0 && (\n        <MetricCard\n          title=\"Price Anomalies\"\n          value={anomalyCount}\n          subtitle={`${metrics.anomalies?.filter(a => a.severity === 'high').length || 0} high severity`}\n          icon={<ExclamationCircleIcon className=\"w-5 h-5\" />}\n          color=\"red\"\n        />\n      )}\n\n      {/* Period Information */}\n      <MetricCard\n        title=\"Analysis Period\"\n        value={`${Math.ceil((new Date(metrics.period_end).getTime() - new Date(metrics.period_start).getTime()) / (1000 * 60 * 60 * 24))} days`}\n        subtitle={`${new Date(metrics.period_start).toLocaleDateString()} - ${new Date(metrics.period_end).toLocaleDateString()}`}\n        icon={<ChartBarIcon className=\"w-5 h-5\" />}\n        color=\"gray\"\n      />\n    </div>\n  );\n};"],"mappingsa;;;;;;WAAAA,kBAAA;;;;;;;;wEA5GK;;;kCASX;;;;;;;;;;;;;;;;;AAoBP,MAAMC,UAAA,GAAwCA,CAAC;EAC7CC,KAAK;EACLC,KAAK;EACLC,QAAQ;EACRC,KAAK;EACLC,UAAU;EACVC,IAAI;EACJC,KAAA;EAAA;EAAA,CAAAC,cAAA,GAAAC,CAAA,UAAQ,MAAM;EACdC,SAAA;EAAA;EAAA,CAAAF,cAAA,GAAAC,CAAA,UAAY,KAAK;AAAA,CAClB;EAAA;EAAAD,cAAA,GAAAG,CAAA;EACC,MAAMC,YAAA;EAAA;EAAA,CAAAJ,cAAA,GAAAK,CAAA,OAAe;IACnBC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPC,GAAA,EAAK;IACLC,MAAA,EAAQ;IACRC,IAAA,EAAM;EACR;EAEA,MAAMC,UAAA;EAAA;EAAA,CAAAX,cAAA,GAAAK,CAAA,OAAa;IACjBO,EAAA,eAAI,IAAAC,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAC,mBAAmB;MAACC,SAAA,EAAU;;IACnCC,IAAA,eAAM,IAAAL,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAI,qBAAqB;MAACF,SAAA,EAAU;;IACvCG,MAAA,eAAQ,IAAAP,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAM,SAAS;MAACJ,SAAA,EAAU;;EAC/B;EAAA;EAAAjB,cAAA,GAAAK,CAAA;EAEA,IAAIH,SAAA,EAAW;IAAA;IAAAF,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAK,CAAA;IACb,oBACE,IAAAQ,WAAA,CAAAC,GAAA,EAAC;MAAIG,SAAA,EAAU;gBACb,iBAAAJ,WAAA,CAAAS,IAAA,EAAC;QAAIL,SAAA,EAAU;gCACb,IAAAJ,WAAA,CAAAS,IAAA,EAAC;UAAIL,SAAA,EAAU;kCACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;YAAIG,SAAA,EAAU;2BACf,IAAAJ,WAAA,CAAAC,GAAA,EAAC;YAAIG,SAAA,EAAU;;yBAEjB,IAAAJ,WAAA,CAAAC,GAAA,EAAC;UAAIG,SAAA,EAAU;yBACf,IAAAJ,WAAA,CAAAC,GAAA,EAAC;UAAIG,SAAA,EAAU;;;;EAIvB;EAAA;EAAA;IAAAjB,cAAA,GAAAC,CAAA;EAAA;EAAAD,cAAA,GAAAK,CAAA;EAEA,oBACE,IAAAQ,WAAA,CAAAS,IAAA,EAAC;IAAIL,SAAA,EAAU;4BACb,IAAAJ,WAAA,CAAAS,IAAA,EAAC;MAAIL,SAAA,EAAU;8BACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;QAAGG,SAAA,EAAU;kBAAqCxB;;MAClD;MAAA,CAAAO,cAAA,GAAAC,CAAA,UAAAH,IAAA;MAAA;MAAA,CAAAE,cAAA,GAAAC,CAAA,uBACC,IAAAY,WAAA,CAAAC,GAAA,EAAC;QAAIG,SAAA,EAAW,kBAAkBb,YAAY,CAACL,KAAA,CAAM,EAAE;kBACpDD;;qBAKP,IAAAe,WAAA,CAAAS,IAAA,EAAC;MAAIL,SAAA,EAAU;8BACb,IAAAJ,WAAA,CAAAS,IAAA,EAAC;gCACC,IAAAT,WAAA,CAAAC,GAAA,EAAC;UAAEG,SAAA,EAAU;;UACV;UAAA,CAAAjB,cAAA,GAAAC,CAAA,iBAAOP,KAAA,KAAU;UAAA;UAAA,CAAAM,cAAA,GAAAC,CAAA,UAAYR,KAAA,CAAM8B,WAAW,GAAGC,QAAQ,CAAC;UAAA;UAAA,CAAAxB,cAAA,GAAAC,CAAA,UACvD,IAAIP,KAAA,CAAM+B,OAAO,CAAC,IAAI;UAAA;UAAA,CAAAzB,cAAA,GAAAC,CAAA,UACtBP,KAAA;;QAEL;QAAA,CAAAM,cAAA,GAAAC,CAAA,UAAAN,QAAA;QAAA;QAAA,CAAAK,cAAA,GAAAC,CAAA,uBACC,IAAAY,WAAA,CAAAC,GAAA,EAAC;UAAEG,SAAA,EAAU;oBAA8BtB;;;MAI9C;MAAA,CAAAK,cAAA,GAAAC,CAAA,UAAAL,KAAA;MAAA;MAAA,CAAAI,cAAA,GAAAC,CAAA,UAASJ,UAAA;MAAA;MAAA,CAAAG,cAAA,GAAAC,CAAA,uBACR,IAAAY,WAAA,CAAAS,IAAA,EAAC;QAAIL,SAAA,EAAU;mBACZN,UAAU,CAACf,KAAA,CAAM,E,aAClB,IAAAiB,WAAA,CAAAC,GAAA,EAAC;UAAKG,SAAA,EAAW,uBACfrB,KAAA,KAAU;UAAA;UAAA,CAAAI,cAAA,GAAAC,CAAA,WAAO;UAAA;UAAA,CAAAD,cAAA,GAAAC,CAAA,WACjBL,KAAA,KAAU;UAAA;UAAA,CAAAI,cAAA,GAAAC,CAAA,WAAS;UAAA;UAAA,CAAAD,cAAA,GAAAC,CAAA,WACnB,mBACA;oBACCJ;;;;;AAOf;AAAA;AAAAG,cAAA,GAAAK,CAAA;AAEO,MAAMd,kBAAA,GAAwDA,CAAC;EACpEmC,OAAO;EACPxB,SAAA;EAAA;EAAA,CAAAF,cAAA,GAAAC,CAAA,WAAY,KAAK;EACjBgB,SAAA;EAAA;EAAA,CAAAjB,cAAA,GAAAC,CAAA,WAAY,EAAE;AAAA,CACf;EAAA;EAAAD,cAAA,GAAAG,CAAA;EAAAH,cAAA,GAAAK,CAAA;EACC,IAAIH,SAAA,EAAW;IAAA;IAAAF,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAK,CAAA;IACb,oBACE,IAAAQ,WAAA,CAAAC,GAAA,EAAC;MAAIG,SAAA,EAAW,wDAAwDA,SAAA,EAAW;gBAChF,C,GAAIU,KAAA,CAAM,GAAG,CAACC,GAAG,CAAC,CAACC,CAAA,EAAGC,CAAA,KACrB;QAAA;QAAA9B,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAK,CAAA;QAAA,OADqB,aACrB,IAAAQ,WAAA,CAAAC,GAAA,EAACtB,UAAA;UAECC,KAAA,EAAM;UACNC,KAAA,EAAM;UACNQ,SAAA,EAAW;WAHN4B,CAAA;MAAA;;EAQf;EAAA;EAAA;IAAA9B,cAAA,GAAAC,CAAA;EAAA;EAAAD,cAAA,GAAAK,CAAA;EAEA;EAAI;EAAA,CAAAL,cAAA,GAAAC,CAAA,YAACyB,OAAA;EAAA;EAAA,CAAA1B,cAAA,GAAAC,CAAA,WAAW8B,MAAA,CAAOC,IAAI,CAACN,OAAA,EAASO,MAAM,KAAK,IAAG;IAAA;IAAAjC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAK,CAAA;IACjD,oBACE,IAAAQ,WAAA,CAAAC,GAAA,EAAC;MAAIG,SAAA,EAAW,kDAAkDA,SAAA,EAAW;gBAC3E,iBAAAJ,WAAA,CAAAS,IAAA,EAAC;QAAIL,SAAA,EAAU;gCACb,IAAAJ,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAmB,YAAY;UAACjB,SAAA,EAAU;yBACxB,IAAAJ,WAAA,CAAAC,GAAA,EAAC;UAAGG,SAAA,EAAU;oBAAyC;yBACvD,IAAAJ,WAAA,CAAAC,GAAA,EAAC;UAAEG,SAAA,EAAU;oBAA6B;;;;EAMlD;EAAA;EAAA;IAAAjB,cAAA,GAAAC,CAAA;EAAA;EAEA;EAAAD,cAAA,GAAAK,CAAA;EACA,MAAM8B,YAAA,GAAeA,CAAA;IAAA;IAAAnC,cAAA,GAAAG,CAAA;IACnB,MAAMiC,MAAA;IAAA;IAAA,CAAApC,cAAA,GAAAK,CAAA,QAASqB,OAAA,CAAQU,MAAM;IAAA;IAAApC,cAAA,GAAAK,CAAA;IAC7B;IAAI;IAAA,CAAAL,cAAA,GAAAC,CAAA,YAACmC,MAAA;IAAA;IAAA,CAAApC,cAAA,GAAAC,CAAA,WAAUmC,MAAA,CAAOxC,KAAK,KAAK,sBAAqB;MAAA;MAAAI,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAK,CAAA;MACnD,OAAO;QAAET,KAAA,EAAO;QAAmBC,UAAA,EAAY;MAAgB;IACjE;IAAA;IAAA;MAAAG,cAAA,GAAAC,CAAA;IAAA;IAEA,MAAMoC,aAAA;IAAA;IAAA,CAAArC,cAAA,GAAAK,CAAA,QAAgBiC,IAAA,CAAKC,GAAG;IAAC;IAAA,CAAAvC,cAAA,GAAAC,CAAA,WAAAmC,MAAA,CAAOI,oBAAoB;IAAA;IAAA,CAAAxC,cAAA,GAAAC,CAAA,WAAI;IAAA;IAAAD,cAAA,GAAAK,CAAA;IAC9D,OAAO;MACLT,KAAA,EAAOwC,MAAA,CAAOxC,KAAK,KAAK;MAAA;MAAA,CAAAI,cAAA,GAAAC,CAAA,WAAe;MAAA;MAAA,CAAAD,cAAA,GAAAC,CAAA,WAChCmC,MAAA,CAAOxC,KAAK,KAAK;MAAA;MAAA,CAAAI,cAAA,GAAAC,CAAA,WAAe;MAAA;MAAA,CAAAD,cAAA,GAAAC,CAAA,WAChC;MACPJ,UAAA,EAAY,GAAGwC,aAAA,CAAcZ,OAAO,CAAC;IACvC;EACF;EAEA,MAAMgB,SAAA;EAAA;EAAA,CAAAzC,cAAA,GAAAK,CAAA,QAAY8B,YAAA;EAClB,MAAMO,eAAA;EAAA;EAAA,CAAA1C,cAAA,GAAAK,CAAA,QAAkB0B,MAAA,CAAOC,IAAI;EAAC;EAAA,CAAAhC,cAAA,GAAAC,CAAA,WAAAyB,OAAA,CAAQiB,WAAW;EAAA;EAAA,CAAA3C,cAAA,GAAAC,CAAA,WAAI,CAAC,IAAGgC,MAAM;EACrE,MAAMW,YAAA;EAAA;EAAA,CAAA5C,cAAA,GAAAK,CAAA;EAAe;EAAA,CAAAL,cAAA,GAAAC,CAAA,WAAAyB,OAAA,CAAQmB,SAAS,EAAEZ,MAAA;EAAA;EAAA,CAAAjC,cAAA,GAAAC,CAAA,WAAU;EAElD;EACA,MAAM6C,eAAA;EAAA;EAAA,CAAA9C,cAAA,GAAAK,CAAA,QAAkBqB,OAAA,CAAQqB,aAAa,GAAG;EAAA;EAAA,CAAA/C,cAAA,GAAAC,CAAA,WAC5CyB,OAAC,CAAQsB,kBAAkB,GAAGtB,OAAA,CAAQqB,aAAa,GAAI;EAAA;EAAA,CAAA/C,cAAA,GAAAC,CAAA,WACvD;EAAA;EAAAD,cAAA,GAAAK,CAAA;EAEJ,oBACE,IAAAQ,WAAA,CAAAS,IAAA,EAAC;IAAIL,SAAA,EAAW,wDAAwDA,SAAA,EAAW;4BAEjF,IAAAJ,WAAA,CAAAC,GAAA,EAACtB,UAAA;MACCC,KAAA,EAAM;MACNC,KAAA,EAAOgC,OAAA,CAAQqB,aAAa;MAC5BpD,QAAA,EAAU;MAAY;MAAA,CAAAK,cAAA,GAAAC,CAAA,WAAAyB,OAAA,CAAQuB,YAAY,EAAExB,OAAA,CAAQ;MAAA;MAAA,CAAAzB,cAAA,GAAAC,CAAA,WAAM,SAAQ;MAClEL,KAAA,EAAO6C,SAAA,CAAU7C,KAAK;MACtBC,UAAA,EAAY4C,SAAA,CAAU5C,UAAU;MAChCC,IAAA,eAAM,IAAAe,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAmC,iBAAiB;QAACjC,SAAA,EAAU;;MACnClB,KAAA,EAAM;qBAIR,IAAAc,WAAA,CAAAC,GAAA,EAACtB,UAAA;MACCC,KAAA,EAAM;MACNC,KAAA,EAAO;MAAI;MAAA,CAAAM,cAAA,GAAAC,CAAA,WAAAyB,OAAA,CAAQyB,WAAW,EAAE1B,OAAA,CAAQ;MAAA;MAAA,CAAAzB,cAAA,GAAAC,CAAA,WAAM,SAAQ;MACtDN,QAAA,EAAU;MAAI;MAAA,CAAAK,cAAA,GAAAC,CAAA,WAAAyB,OAAA,CAAQ0B,SAAS,EAAE3B,OAAA,CAAQ;MAAA;MAAA,CAAAzB,cAAA,GAAAC,CAAA,WAAM;MAAa;MAAA,CAAAD,cAAA,GAAAC,CAAA,WAAAyB,OAAA,CAAQ2B,SAAS,EAAE5B,OAAA,CAAQ;MAAA;MAAA,CAAAzB,cAAA,GAAAC,CAAA,WAAM,SAAQ;MACrGH,IAAA,eAAM,IAAAe,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAmB,YAAY;QAACjB,SAAA,EAAU;;MAC9BlB,KAAA,EAAM;qBAIR,IAAAc,WAAA,CAAAC,GAAA,EAACtB,UAAA;MACCC,KAAA,EAAM;MACNC,KAAA,EAAOgD,eAAA;MACP/C,QAAA,EAAU;MAAG;MAAA,CAAAK,cAAA,GAAAC,CAAA,WAAAyB,OAAA,CAAQ4B,iBAAiB;MAAA;MAAA,CAAAtD,cAAA,GAAAC,CAAA,WAAI,gBAAe;MACzDH,IAAA,eAAM,IAAAe,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAwC,SAAS;QAACtC,SAAA,EAAU;;MAC3BlB,KAAA,EAAM;qBAIR,IAAAc,WAAA,CAAAC,GAAA,EAACtB,UAAA;MACCC,KAAA,EAAM;MACNC,KAAA,EAAO,GAAGoD,eAAA,CAAgBrB,OAAO,CAAC,KAAK;MACvC9B,QAAA,EAAU;MAAa;MAAA,CAAAK,cAAA,GAAAC,CAAA,WAAAyB,OAAA,CAAQsB,kBAAkB,EAAEvB,OAAA,CAAQ;MAAA;MAAA,CAAAzB,cAAA,GAAAC,CAAA,WAAM,SAAQ;MACzEH,IAAA,eAAM,IAAAe,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAmB,YAAY;QAACjB,SAAA,EAAU;;MAC9BlB,KAAA,EAAO+C,eAAA,GAAkB;MAAA;MAAA,CAAA9C,cAAA,GAAAC,CAAA,WAAK;MAAA;MAAA,CAAAD,cAAA,GAAAC,CAAA,WAAQ6C,eAAA,GAAkB;MAAA;MAAA,CAAA9C,cAAA,GAAAC,CAAA,WAAI;MAAA;MAAA,CAAAD,cAAA,GAAAC,CAAA,WAAW;;IAIxE;IAAA,CAAAD,cAAA,GAAAC,CAAA,WAAAyB,OAAA,CAAQ8B,eAAe;IAAA;IAAA,CAAAxD,cAAA,GAAAC,CAAA,wBACtB,IAAAY,WAAA,CAAAS,IAAA,EAAAT,WAAA,CAAA4C,QAAA;8BACE,IAAA5C,WAAA,CAAAC,GAAA,EAACtB,UAAA;QACCC,KAAA,EAAM;QACNC,KAAA,EAAOgC,OAAA,CAAQ8B,eAAe,CAACE,EAAE;QACjC/D,QAAA,EAAS;QACTG,IAAA,eAAM,IAAAe,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAmB,YAAY;UAACjB,SAAA,EAAU;;QAC9BlB,KAAA,EAAM;uBAGR,IAAAc,WAAA,CAAAC,GAAA,EAACtB,UAAA;QACCC,KAAA,EAAM;QACNC,KAAA,EAAOgC,OAAA,CAAQ8B,eAAe,CAACG,EAAE;QACjChE,QAAA,EAAS;QACTG,IAAA,eAAM,IAAAe,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAmB,YAAY;UAACjB,SAAA,EAAU;;QAC9BlB,KAAA,EAAM;;;IAMX;IAAA,CAAAC,cAAA,GAAAC,CAAA,WAAA2C,YAAA,GAAe;IAAA;IAAA,CAAA5C,cAAA,GAAAC,CAAA,wBACd,IAAAY,WAAA,CAAAC,GAAA,EAACtB,UAAA;MACCC,KAAA,EAAM;MACNC,KAAA,EAAOkD,YAAA;MACPjD,QAAA,EAAU;MAAG;MAAA,CAAAK,cAAA,GAAAC,CAAA,WAAAyB,OAAA,CAAQmB,SAAS,EAAEe,MAAA,CAAOC,CAAA,IAAK;QAAA;QAAA7D,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAK,CAAA;QAAA,OAAAwD,CAAA,CAAEC,QAAQ,KAAK;MAAA,GAAQ7B,MAAA;MAAA;MAAA,CAAAjC,cAAA,GAAAC,CAAA,WAAU,kBAAiB;MAC9FH,IAAA,eAAM,IAAAe,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAgD,qBAAqB;QAAC9C,SAAA,EAAU;;MACvClB,KAAA,EAAM;sBAKV,IAAAc,WAAA,CAAAC,GAAA,EAACtB,UAAA;MACCC,KAAA,EAAM;MACNC,KAAA,EAAO,GAAG4C,IAAA,CAAK0B,IAAI,CAAC,CAAC,IAAIC,IAAA,CAAKvC,OAAA,CAAQwC,UAAU,EAAEC,OAAO,KAAK,IAAIF,IAAA,CAAKvC,OAAA,CAAQ0C,YAAY,EAAED,OAAO,EAAC,KAAM,OAAO,KAAK,KAAK,EAAC,SAAU;MACvIxE,QAAA,EAAU,GAAG,IAAIsE,IAAA,CAAKvC,OAAA,CAAQ0C,YAAY,EAAEC,kBAAkB,QAAQ,IAAIJ,IAAA,CAAKvC,OAAA,CAAQwC,UAAU,EAAEG,kBAAkB,IAAI;MACzHvE,IAAA,eAAM,IAAAe,WAAA,CAAAC,GAAA,EAACC,QAAA,CAAAmB,YAAY;QAACjB,SAAA,EAAU;;MAC9BlB,KAAA,EAAM;;;AAId","ignoreList":[]}