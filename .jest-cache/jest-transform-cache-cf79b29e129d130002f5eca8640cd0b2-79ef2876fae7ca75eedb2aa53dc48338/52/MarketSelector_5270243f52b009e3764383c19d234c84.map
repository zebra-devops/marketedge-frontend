{"version":3,"names":["MarketSelector","selectedMarket","onMarketSelect","onCreateMarket","className","cov_xw5tnquva","b","f","markets","setMarkets","s","_react","useState","isOpen","setIsOpen","isLoading","setIsLoading","searchQuery","setSearchQuery","error","setError","useEffect","loadMarkets","marketData","_marketedgeapi","marketEdgeAPI","getMarkets","err","Error","message","filteredMarkets","filter","market","name","toLowerCase","includes","handleMarketSelect","_jsxruntime","jsxs","onClick","disabled","jsx","_outline","ChevronDownIcon","type","placeholder","value","onChange","e","target","autoFocus","length","map","competitor_count","is_active","id","PlusIcon"],"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/market-edge/MarketSelector.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ChevronDownIcon, PlusIcon } from '@heroicons/react/24/outline';\nimport { Market } from '@/types/market-edge';\nimport { marketEdgeAPI } from '@/services/market-edge-api';\n\ninterface MarketSelectorProps {\n  selectedMarket?: Market;\n  onMarketSelect: (market: Market) => void;\n  onCreateMarket?: () => void;\n  className?: string;\n}\n\nexport const MarketSelector: React.FC<MarketSelectorProps> = ({\n  selectedMarket,\n  onMarketSelect,\n  onCreateMarket,\n  className = ''\n}) => {\n  const [markets, setMarkets] = useState<Market[]>([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    loadMarkets();\n  }, []);\n\n  const loadMarkets = async () => {\n    try {\n      setIsLoading(true);\n      const marketData = await marketEdgeAPI.getMarkets();\n      setMarkets(marketData);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load markets');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const filteredMarkets = markets.filter(market =>\n    market.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const handleMarketSelect = (market: Market) => {\n    onMarketSelect(market);\n    setIsOpen(false);\n    setSearchQuery('');\n  };\n\n  return (\n    <div className={`relative ${className}`}>\n      {/* Selected Market Display */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"w-full flex items-center justify-between px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n        disabled={isLoading}\n      >\n        <div className=\"flex items-center\">\n          <div className=\"w-3 h-3 bg-green-500 rounded-full mr-3\"></div>\n          <span className=\"text-sm font-medium text-gray-900\">\n            {selectedMarket ? selectedMarket.name : 'Select Market'}\n          </span>\n        </div>\n        <ChevronDownIcon \n          className={`w-5 h-5 text-gray-400 transition-transform ${isOpen ? 'rotate-180' : ''}`} \n        />\n      </button>\n\n      {/* Dropdown */}\n      {isOpen && (\n        <div className=\"absolute z-50 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg max-h-80 overflow-hidden\">\n          {/* Search Input */}\n          <div className=\"p-3 border-b border-gray-200\">\n            <input\n              type=\"text\"\n              placeholder=\"Search markets...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              autoFocus\n            />\n          </div>\n\n          {/* Markets List */}\n          <div className=\"max-h-60 overflow-y-auto\">\n            {error ? (\n              <div className=\"p-4 text-center text-red-600 text-sm\">\n                {error}\n                <button\n                  onClick={loadMarkets}\n                  className=\"block mx-auto mt-2 text-blue-600 hover:text-blue-800 underline\"\n                >\n                  Retry\n                </button>\n              </div>\n            ) : isLoading ? (\n              <div className=\"p-4 text-center text-gray-500 text-sm\">\n                Loading markets...\n              </div>\n            ) : filteredMarkets.length === 0 ? (\n              <div className=\"p-4 text-center text-gray-500 text-sm\">\n                {searchQuery ? 'No markets found' : 'No markets available'}\n              </div>\n            ) : (\n              filteredMarkets.map((market) => (\n                <button\n                  key={market.id}\n                  onClick={() => handleMarketSelect(market)}\n                  className=\"w-full px-4 py-3 text-left hover:bg-gray-50 focus:outline-none focus:bg-gray-50 transition-colors\"\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {market.name}\n                      </div>\n                      <div className=\"text-xs text-gray-500 mt-1\">\n                        {market.competitor_count} competitors â€¢ \n                        {market.is_active ? ' Active' : ' Inactive'}\n                      </div>\n                    </div>\n                    {selectedMarket?.id === market.id && (\n                      <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n                    )}\n                  </div>\n                </button>\n              ))\n            )}\n          </div>\n\n          {/* Create New Market */}\n          {onCreateMarket && (\n            <div className=\"border-t border-gray-200\">\n              <button\n                onClick={() => {\n                  onCreateMarket();\n                  setIsOpen(false);\n                }}\n                className=\"w-full px-4 py-3 text-left hover:bg-gray-50 focus:outline-none focus:bg-gray-50 transition-colors flex items-center text-blue-600\"\n              >\n                <PlusIcon className=\"w-4 h-4 mr-2\" />\n                <span className=\"text-sm font-medium\">Create New Market</span>\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Overlay */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => setIsOpen(false)}\n        />\n      )}\n    </div>\n  );\n};"],"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","ignoreList":[]}