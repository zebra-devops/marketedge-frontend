{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/ui/__tests__/Modal.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen } from '@/test-utils'\nimport userEvent from '@testing-library/user-event'\nimport Modal from '../Modal'\n\n// Mock Headless UI components\njest.mock('@headlessui/react', () => ({\n  Dialog: {\n    Root: ({ children, show }: { children: React.ReactNode; show: boolean }) => \n      show ? <div data-testid=\"modal-root\">{children}</div> : null,\n    Panel: ({ children, className }: { children: React.ReactNode; className?: string }) => \n      <div data-testid=\"modal-panel\" className={className}>{children}</div>,\n    Title: ({ children, as: Component = 'h3', className }: { children: React.ReactNode; as?: keyof JSX.IntrinsicElements; className?: string }) => \n      <Component data-testid=\"modal-title\" className={className}>{children}</Component>,\n  },\n  Transition: {\n    Root: ({ children, show }: { children: React.ReactNode; show: boolean }) => \n      show ? <div data-testid=\"transition-root\">{children}</div> : null,\n    Child: ({ children }: { children: React.ReactNode }) => \n      <div data-testid=\"transition-child\">{children}</div>,\n  },\n}))\n\n// Mock Heroicons\njest.mock('@heroicons/react/24/outline', () => ({\n  XMarkIcon: ({ className }: { className?: string }) => \n    <svg data-testid=\"close-icon\" className={className}>\n      <path d=\"close-icon\" />\n    </svg>\n}))\n\ndescribe('Modal Component', () => {\n  const user = userEvent.setup()\n\n  const defaultProps = {\n    isOpen: true,\n    onClose: jest.fn(),\n    title: 'Test Modal',\n    children: <div>Modal content</div>,\n  }\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('renders when isOpen is true', () => {\n    render(<Modal {...defaultProps} />)\n    \n    expect(screen.getByTestId('modal-root')).toBeInTheDocument()\n    expect(screen.getByTestId('modal-panel')).toBeInTheDocument()\n    expect(screen.getByTestId('modal-title')).toBeInTheDocument()\n    expect(screen.getByText('Test Modal')).toBeInTheDocument()\n    expect(screen.getByText('Modal content')).toBeInTheDocument()\n  })\n\n  it('does not render when isOpen is false', () => {\n    render(<Modal {...defaultProps} isOpen={false} />)\n    \n    expect(screen.queryByTestId('modal-root')).not.toBeInTheDocument()\n    expect(screen.queryByText('Test Modal')).not.toBeInTheDocument()\n    expect(screen.queryByText('Modal content')).not.toBeInTheDocument()\n  })\n\n  it('renders with default medium maxWidth', () => {\n    render(<Modal {...defaultProps} />)\n    \n    const panel = screen.getByTestId('modal-panel')\n    expect(panel).toHaveClass('max-w-md')\n  })\n\n  it('renders with different maxWidth sizes', () => {\n    const sizes = ['sm', 'md', 'lg', 'xl', '2xl'] as const\n    \n    sizes.forEach(size => {\n      const { unmount } = render(<Modal {...defaultProps} maxWidth={size} />)\n      \n      const panel = screen.getByTestId('modal-panel')\n      expect(panel).toHaveClass(`max-w-${size}`)\n      \n      unmount()\n    })\n  })\n\n  it('calls onClose when close button is clicked', async () => {\n    const onClose = jest.fn()\n    render(<Modal {...defaultProps} onClose={onClose} />)\n    \n    const closeButton = screen.getByRole('button')\n    await user.click(closeButton)\n    \n    expect(onClose).toHaveBeenCalledTimes(1)\n  })\n\n  it('has proper accessibility attributes', () => {\n    render(<Modal {...defaultProps} />)\n    \n    const closeButton = screen.getByRole('button')\n    expect(closeButton).toHaveAttribute('type', 'button')\n    \n    // Screen reader text for close button\n    expect(screen.getByText('Close')).toBeInTheDocument()\n    expect(screen.getByText('Close')).toHaveClass('sr-only')\n    \n    const closeIcon = screen.getByTestId('close-icon')\n    expect(closeIcon).toHaveAttribute('aria-hidden', 'true')\n  })\n\n  it('renders title as h3 element', () => {\n    render(<Modal {...defaultProps} />)\n    \n    const title = screen.getByTestId('modal-title')\n    expect(title.tagName).toBe('H3')\n    expect(title).toHaveClass('text-lg', 'font-semibold', 'leading-6', 'text-gray-900', 'mb-4')\n  })\n\n  it('renders custom children content', () => {\n    const customContent = (\n      <div>\n        <p>Custom paragraph</p>\n        <button>Custom button</button>\n      </div>\n    )\n    \n    render(<Modal {...defaultProps} children={customContent} />)\n    \n    expect(screen.getByText('Custom paragraph')).toBeInTheDocument()\n    expect(screen.getByRole('button', { name: /custom button/i })).toBeInTheDocument()\n  })\n\n  it('has proper modal styling classes', () => {\n    render(<Modal {...defaultProps} />)\n    \n    const panel = screen.getByTestId('modal-panel')\n    expect(panel).toHaveClass(\n      'relative',\n      'transform',\n      'overflow-hidden',\n      'rounded-lg',\n      'bg-white',\n      'px-4',\n      'pb-4',\n      'pt-5',\n      'text-left',\n      'shadow-xl',\n      'transition-all'\n    )\n  })\n\n  it('close button has proper styling', () => {\n    render(<Modal {...defaultProps} />)\n    \n    const closeButton = screen.getByRole('button')\n    expect(closeButton).toHaveClass(\n      'rounded-md',\n      'bg-white',\n      'text-gray-400',\n      'hover:text-gray-500',\n      'focus:outline-none',\n      'focus:ring-2',\n      'focus:ring-indigo-500',\n      'focus:ring-offset-2'\n    )\n  })\n\n  it('supports keyboard navigation', async () => {\n    const onClose = jest.fn()\n    render(<Modal {...defaultProps} onClose={onClose} />)\n    \n    const closeButton = screen.getByRole('button')\n    closeButton.focus()\n    expect(closeButton).toHaveFocus()\n    \n    await user.keyboard('{Enter}')\n    expect(onClose).toHaveBeenCalledTimes(1)\n  })\n\n  it('renders with proper responsive classes', () => {\n    render(<Modal {...defaultProps} />)\n    \n    const panel = screen.getByTestId('modal-panel')\n    expect(panel).toHaveClass('sm:my-8', 'sm:w-full', 'sm:p-6')\n  })\n\n  it('maintains focus management', () => {\n    render(<Modal {...defaultProps} />)\n    \n    // Modal should be focusable for screen readers\n    const modal = screen.getByTestId('modal-root')\n    expect(modal).toBeInTheDocument()\n  })\n\n  it('handles dynamic title changes', () => {\n    const { rerender } = render(<Modal {...defaultProps} title=\"Original Title\" />)\n    expect(screen.getByText('Original Title')).toBeInTheDocument()\n    \n    rerender(<Modal {...defaultProps} title=\"Updated Title\" />)\n    expect(screen.getByText('Updated Title')).toBeInTheDocument()\n    expect(screen.queryByText('Original Title')).not.toBeInTheDocument()\n  })\n\n  it('handles dynamic content changes', () => {\n    const { rerender } = render(\n      <Modal {...defaultProps} children={<div>Original Content</div>} />\n    )\n    expect(screen.getByText('Original Content')).toBeInTheDocument()\n    \n    rerender(\n      <Modal {...defaultProps} children={<div>Updated Content</div>} />\n    )\n    expect(screen.getByText('Updated Content')).toBeInTheDocument()\n    expect(screen.queryByText('Original Content')).not.toBeInTheDocument()\n  })\n})"],"names":["jest","mock","Dialog","Root","children","show","div","data-testid","Panel","className","Title","as","Component","Transition","Child","XMarkIcon","svg","path","d","describe","user","userEvent","setup","defaultProps","isOpen","onClose","fn","title","beforeEach","clearAllMocks","it","render","Modal","expect","screen","getByTestId","toBeInTheDocument","getByText","queryByTestId","not","queryByText","panel","toHaveClass","sizes","forEach","size","unmount","maxWidth","closeButton","getByRole","click","toHaveBeenCalledTimes","toHaveAttribute","closeIcon","tagName","toBe","customContent","p","button","name","focus","toHaveFocus","keyboard","modal","rerender"],"mappings":";AAKA,8BAA8B;AAC9BA,KAAKC,IAAI,CAAC,qBAAqB,IAAO,CAAA;QACpCC,QAAQ;YACNC,MAAM,CAAC,EAAEC,QAAQ,EAAEC,IAAI,EAAgD,GACrEA,qBAAO,qBAACC;oBAAIC,eAAY;8BAAcH;qBAAkB;YAC1DI,OAAO,CAAC,EAAEJ,QAAQ,EAAEK,SAAS,EAAqD,iBAChF,qBAACH;oBAAIC,eAAY;oBAAcE,WAAWA;8BAAYL;;YACxDM,OAAO,CAAC,EAAEN,QAAQ,EAAEO,IAAIC,YAAY,IAAI,EAAEH,SAAS,EAAuF,iBACxI,qBAACG;oBAAUL,eAAY;oBAAcE,WAAWA;8BAAYL;;QAChE;QACAS,YAAY;YACVV,MAAM,CAAC,EAAEC,QAAQ,EAAEC,IAAI,EAAgD,GACrEA,qBAAO,qBAACC;oBAAIC,eAAY;8BAAmBH;qBAAkB;YAC/DU,OAAO,CAAC,EAAEV,QAAQ,EAAiC,iBACjD,qBAACE;oBAAIC,eAAY;8BAAoBH;;QACzC;IACF,CAAA;AAEA,iBAAiB;AACjBJ,KAAKC,IAAI,CAAC,+BAA+B,IAAO,CAAA;QAC9Cc,WAAW,CAAC,EAAEN,SAAS,EAA0B,iBAC/C,qBAACO;gBAAIT,eAAY;gBAAaE,WAAWA;0BACvC,cAAA,qBAACQ;oBAAKC,GAAE;;;IAEd,CAAA;;;;;8DA7BkB;2BACa;kEACT;8DACJ;;;;;;AA4BlBC,SAAS,mBAAmB;IAC1B,MAAMC,OAAOC,kBAAS,CAACC,KAAK;IAE5B,MAAMC,eAAe;QACnBC,QAAQ;QACRC,SAASzB,KAAK0B,EAAE;QAChBC,OAAO;QACPvB,wBAAU,qBAACE;sBAAI;;IACjB;IAEAsB,WAAW;QACT5B,KAAK6B,aAAa;IACpB;IAEAC,GAAG,+BAA+B;QAChCC,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;;QAE9BU,OAAOC,iBAAM,CAACC,WAAW,CAAC,eAAeC,iBAAiB;QAC1DH,OAAOC,iBAAM,CAACC,WAAW,CAAC,gBAAgBC,iBAAiB;QAC3DH,OAAOC,iBAAM,CAACC,WAAW,CAAC,gBAAgBC,iBAAiB;QAC3DH,OAAOC,iBAAM,CAACG,SAAS,CAAC,eAAeD,iBAAiB;QACxDH,OAAOC,iBAAM,CAACG,SAAS,CAAC,kBAAkBD,iBAAiB;IAC7D;IAEAN,GAAG,wCAAwC;QACzCC,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;YAAEC,QAAQ;;QAExCS,OAAOC,iBAAM,CAACI,aAAa,CAAC,eAAeC,GAAG,CAACH,iBAAiB;QAChEH,OAAOC,iBAAM,CAACM,WAAW,CAAC,eAAeD,GAAG,CAACH,iBAAiB;QAC9DH,OAAOC,iBAAM,CAACM,WAAW,CAAC,kBAAkBD,GAAG,CAACH,iBAAiB;IACnE;IAEAN,GAAG,wCAAwC;QACzCC,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;;QAE9B,MAAMkB,QAAQP,iBAAM,CAACC,WAAW,CAAC;QACjCF,OAAOQ,OAAOC,WAAW,CAAC;IAC5B;IAEAZ,GAAG,yCAAyC;QAC1C,MAAMa,QAAQ;YAAC;YAAM;YAAM;YAAM;YAAM;SAAM;QAE7CA,MAAMC,OAAO,CAACC,CAAAA;YACZ,MAAM,EAAEC,OAAO,EAAE,GAAGf,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;gBAAE,GAAGT,YAAY;gBAAEwB,UAAUF;;YAE9D,MAAMJ,QAAQP,iBAAM,CAACC,WAAW,CAAC;YACjCF,OAAOQ,OAAOC,WAAW,CAAC,CAAC,MAAM,EAAEG,KAAK,CAAC;YAEzCC;QACF;IACF;IAEAhB,GAAG,8CAA8C;QAC/C,MAAML,UAAUzB,KAAK0B,EAAE;QACvBK,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;YAAEE,SAASA;;QAEzC,MAAMuB,cAAcd,iBAAM,CAACe,SAAS,CAAC;QACrC,MAAM7B,KAAK8B,KAAK,CAACF;QAEjBf,OAAOR,SAAS0B,qBAAqB,CAAC;IACxC;IAEArB,GAAG,uCAAuC;QACxCC,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;;QAE9B,MAAMyB,cAAcd,iBAAM,CAACe,SAAS,CAAC;QACrChB,OAAOe,aAAaI,eAAe,CAAC,QAAQ;QAE5C,sCAAsC;QACtCnB,OAAOC,iBAAM,CAACG,SAAS,CAAC,UAAUD,iBAAiB;QACnDH,OAAOC,iBAAM,CAACG,SAAS,CAAC,UAAUK,WAAW,CAAC;QAE9C,MAAMW,YAAYnB,iBAAM,CAACC,WAAW,CAAC;QACrCF,OAAOoB,WAAWD,eAAe,CAAC,eAAe;IACnD;IAEAtB,GAAG,+BAA+B;QAChCC,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;;QAE9B,MAAMI,QAAQO,iBAAM,CAACC,WAAW,CAAC;QACjCF,OAAON,MAAM2B,OAAO,EAAEC,IAAI,CAAC;QAC3BtB,OAAON,OAAOe,WAAW,CAAC,WAAW,iBAAiB,aAAa,iBAAiB;IACtF;IAEAZ,GAAG,mCAAmC;QACpC,MAAM0B,8BACJ,sBAAClD;;8BACC,qBAACmD;8BAAE;;8BACH,qBAACC;8BAAO;;;;QAIZ3B,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;YAAEnB,UAAUoD;;QAE1CvB,OAAOC,iBAAM,CAACG,SAAS,CAAC,qBAAqBD,iBAAiB;QAC9DH,OAAOC,iBAAM,CAACe,SAAS,CAAC,UAAU;YAAEU,MAAM;QAAiB,IAAIvB,iBAAiB;IAClF;IAEAN,GAAG,oCAAoC;QACrCC,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;;QAE9B,MAAMkB,QAAQP,iBAAM,CAACC,WAAW,CAAC;QACjCF,OAAOQ,OAAOC,WAAW,CACvB,YACA,aACA,mBACA,cACA,YACA,QACA,QACA,QACA,aACA,aACA;IAEJ;IAEAZ,GAAG,mCAAmC;QACpCC,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;;QAE9B,MAAMyB,cAAcd,iBAAM,CAACe,SAAS,CAAC;QACrChB,OAAOe,aAAaN,WAAW,CAC7B,cACA,YACA,iBACA,uBACA,sBACA,gBACA,yBACA;IAEJ;IAEAZ,GAAG,gCAAgC;QACjC,MAAML,UAAUzB,KAAK0B,EAAE;QACvBK,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;YAAEE,SAASA;;QAEzC,MAAMuB,cAAcd,iBAAM,CAACe,SAAS,CAAC;QACrCD,YAAYY,KAAK;QACjB3B,OAAOe,aAAaa,WAAW;QAE/B,MAAMzC,KAAK0C,QAAQ,CAAC;QACpB7B,OAAOR,SAAS0B,qBAAqB,CAAC;IACxC;IAEArB,GAAG,0CAA0C;QAC3CC,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;;QAE9B,MAAMkB,QAAQP,iBAAM,CAACC,WAAW,CAAC;QACjCF,OAAOQ,OAAOC,WAAW,CAAC,WAAW,aAAa;IACpD;IAEAZ,GAAG,8BAA8B;QAC/BC,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;;QAE9B,+CAA+C;QAC/C,MAAMwC,QAAQ7B,iBAAM,CAACC,WAAW,CAAC;QACjCF,OAAO8B,OAAO3B,iBAAiB;IACjC;IAEAN,GAAG,iCAAiC;QAClC,MAAM,EAAEkC,QAAQ,EAAE,GAAGjC,IAAAA,iBAAM,gBAAC,qBAACC,cAAK;YAAE,GAAGT,YAAY;YAAEI,OAAM;;QAC3DM,OAAOC,iBAAM,CAACG,SAAS,CAAC,mBAAmBD,iBAAiB;QAE5D4B,uBAAS,qBAAChC,cAAK;YAAE,GAAGT,YAAY;YAAEI,OAAM;;QACxCM,OAAOC,iBAAM,CAACG,SAAS,CAAC,kBAAkBD,iBAAiB;QAC3DH,OAAOC,iBAAM,CAACM,WAAW,CAAC,mBAAmBD,GAAG,CAACH,iBAAiB;IACpE;IAEAN,GAAG,mCAAmC;QACpC,MAAM,EAAEkC,QAAQ,EAAE,GAAGjC,IAAAA,iBAAM,gBACzB,qBAACC,cAAK;YAAE,GAAGT,YAAY;YAAEnB,wBAAU,qBAACE;0BAAI;;;QAE1C2B,OAAOC,iBAAM,CAACG,SAAS,CAAC,qBAAqBD,iBAAiB;QAE9D4B,uBACE,qBAAChC,cAAK;YAAE,GAAGT,YAAY;YAAEnB,wBAAU,qBAACE;0BAAI;;;QAE1C2B,OAAOC,iBAAM,CAACG,SAAS,CAAC,oBAAoBD,iBAAiB;QAC7DH,OAAOC,iBAAM,CAACM,WAAW,CAAC,qBAAqBD,GAAG,CAACH,iBAAiB;IACtE;AACF"}