{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/utils/timer-utils.ts"],"sourcesContent":["/**\n * Timer Utilities for Production Environment\n * \n * Ensures timer functions (setInterval, setTimeout, etc.) are available\n * in all environments including Vercel production builds.\n * \n * Addresses persistent \"setInterval is not a function\" errors in production.\n */\n\n// Timer function interfaces\ninterface TimerFunction {\n  (callback: (...args: any[]) => void, delay: number, ...args: any[]): NodeJS.Timeout | number;\n}\n\ninterface ClearFunction {\n  (id: NodeJS.Timeout | number | null | undefined): void;\n}\n\n// Safe timer implementations with fallbacks\nclass SafeTimers {\n  private intervalMap = new Map<number, boolean>();\n  private timeoutMap = new Map<number, boolean>();\n  private nextId = 1;\n\n  // Safe setInterval with comprehensive environment detection\n  setInterval: TimerFunction = (callback, delay, ...args) => {\n    // Environment checks\n    if (typeof window === 'undefined') {\n      // Server-side: return mock ID\n      return this.nextId++;\n    }\n\n    // Check if native setInterval exists and is a function\n    if (typeof window.setInterval === 'function') {\n      try {\n        const id = window.setInterval(callback, delay, ...args);\n        return id;\n      } catch (error) {\n        console.warn('Native setInterval failed, using fallback:', error);\n      }\n    }\n\n    // Check global setInterval\n    if (typeof globalThis.setInterval === 'function') {\n      try {\n        const id = globalThis.setInterval(callback, delay, ...args);\n        return id;\n      } catch (error) {\n        console.warn('Global setInterval failed, using fallback:', error);\n      }\n    }\n\n    // Fallback implementation using setTimeout\n    console.warn('Using setTimeout fallback for setInterval');\n    const intervalId = this.nextId++;\n    this.intervalMap.set(intervalId, true);\n\n    const runInterval = () => {\n      if (!this.intervalMap.has(intervalId)) return; // Cleared\n      \n      try {\n        callback(...args);\n      } catch (error) {\n        console.error('Timer callback error:', error);\n      }\n\n      // Schedule next execution\n      if (this.intervalMap.has(intervalId)) {\n        this.setTimeout(runInterval, delay);\n      }\n    };\n\n    // Start the interval\n    this.setTimeout(runInterval, delay);\n    return intervalId;\n  };\n\n  // Safe setTimeout with comprehensive environment detection\n  setTimeout: TimerFunction = (callback, delay, ...args) => {\n    // Environment checks\n    if (typeof window === 'undefined') {\n      // Server-side: return mock ID\n      return this.nextId++;\n    }\n\n    // Check if native setTimeout exists and is a function\n    if (typeof window.setTimeout === 'function') {\n      try {\n        const id = window.setTimeout(callback, delay, ...args);\n        return id;\n      } catch (error) {\n        console.warn('Native setTimeout failed, using fallback:', error);\n      }\n    }\n\n    // Check global setTimeout\n    if (typeof globalThis.setTimeout === 'function') {\n      try {\n        const id = globalThis.setTimeout(callback, delay, ...args);\n        return id;\n      } catch (error) {\n        console.warn('Global setTimeout failed, using fallback:', error);\n      }\n    }\n\n    // Ultimate fallback: immediate execution (better than crashing)\n    console.warn('No setTimeout available, executing callback immediately');\n    const timeoutId = this.nextId++;\n    this.timeoutMap.set(timeoutId, true);\n    \n    // Use Promise.resolve for next-tick execution\n    Promise.resolve().then(() => {\n      if (this.timeoutMap.has(timeoutId)) {\n        try {\n          callback(...args);\n        } catch (error) {\n          console.error('Timer callback error:', error);\n        }\n        this.timeoutMap.delete(timeoutId);\n      }\n    });\n\n    return timeoutId;\n  };\n\n  // Safe clearInterval\n  clearInterval: ClearFunction = (id) => {\n    if (id === null || id === undefined) return;\n\n    // Try native clearInterval first\n    if (typeof window !== 'undefined' && typeof window.clearInterval === 'function') {\n      try {\n        window.clearInterval(id as any);\n      } catch (error) {\n        // Fallback to manual tracking\n      }\n    }\n\n    // Try global clearInterval\n    if (typeof globalThis.clearInterval === 'function') {\n      try {\n        globalThis.clearInterval(id as any);\n      } catch (error) {\n        // Fallback to manual tracking\n      }\n    }\n\n    // Clean up our tracking\n    if (typeof id === 'number' && this.intervalMap.has(id)) {\n      this.intervalMap.delete(id);\n    }\n  };\n\n  // Safe clearTimeout\n  clearTimeout: ClearFunction = (id) => {\n    if (id === null || id === undefined) return;\n\n    // Try native clearTimeout first\n    if (typeof window !== 'undefined' && typeof window.clearTimeout === 'function') {\n      try {\n        window.clearTimeout(id as any);\n      } catch (error) {\n        // Fallback to manual tracking\n      }\n    }\n\n    // Try global clearTimeout\n    if (typeof globalThis.clearTimeout === 'function') {\n      try {\n        globalThis.clearTimeout(id as any);\n      } catch (error) {\n        // Fallback to manual tracking\n      }\n    }\n\n    // Clean up our tracking\n    if (typeof id === 'number' && this.timeoutMap.has(id)) {\n      this.timeoutMap.delete(id);\n    }\n  };\n\n  // Environment diagnostic for debugging\n  diagnoseEnvironment(): void {\n    const checks = {\n      hasWindow: typeof window !== 'undefined',\n      hasGlobalThis: typeof globalThis !== 'undefined',\n      windowSetInterval: typeof window?.setInterval,\n      windowSetTimeout: typeof window?.setTimeout,\n      globalSetInterval: typeof globalThis?.setInterval,\n      globalSetTimeout: typeof globalThis?.setTimeout,\n      nodeProcess: typeof process !== 'undefined' && process?.env?.NODE_ENV,\n      userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'N/A'\n    };\n\n    console.log('Timer Environment Diagnostic:', checks);\n  }\n\n  // Clear all tracked timers (for cleanup)\n  clearAll(): void {\n    // Clear all tracked intervals\n    this.intervalMap.forEach((_, id) => {\n      this.clearInterval(id);\n    });\n    this.intervalMap.clear();\n\n    // Clear all tracked timeouts\n    this.timeoutMap.forEach((_, id) => {\n      this.clearTimeout(id);\n    });\n    this.timeoutMap.clear();\n  }\n}\n\n// Create singleton instance\nexport const safeTimers = new SafeTimers();\n\n// Export individual functions for convenience\nexport const { setInterval: safeSetInterval, setTimeout: safeSetTimeout, clearInterval: safeClearInterval, clearTimeout: safeClearTimeout } = safeTimers;\n\n// Environment setup - ensure timer functions are available globally\nexport function ensureTimerFunctions(): void {\n  // Only run in browser environment\n  if (typeof window === 'undefined') return;\n\n  // Add diagnostic logging for production debugging\n  if (process.env.NODE_ENV === 'production') {\n    safeTimers.diagnoseEnvironment();\n  }\n\n  // Ensure global timer functions exist\n  if (!window.setInterval || typeof window.setInterval !== 'function') {\n    console.warn('Patching missing window.setInterval');\n    (window as any).setInterval = safeTimers.setInterval;\n  }\n\n  if (!window.setTimeout || typeof window.setTimeout !== 'function') {\n    console.warn('Patching missing window.setTimeout');\n    (window as any).setTimeout = safeTimers.setTimeout;\n  }\n\n  if (!window.clearInterval || typeof window.clearInterval !== 'function') {\n    console.warn('Patching missing window.clearInterval');\n    (window as any).clearInterval = safeTimers.clearInterval;\n  }\n\n  if (!window.clearTimeout || typeof window.clearTimeout !== 'function') {\n    console.warn('Patching missing window.clearTimeout');\n    (window as any).clearTimeout = safeTimers.clearTimeout;\n  }\n\n  // Also patch globalThis if needed\n  if (!globalThis.setInterval || typeof globalThis.setInterval !== 'function') {\n    (globalThis as any).setInterval = safeTimers.setInterval;\n  }\n\n  if (!globalThis.setTimeout || typeof globalThis.setTimeout !== 'function') {\n    (globalThis as any).setTimeout = safeTimers.setTimeout;\n  }\n\n  if (!globalThis.clearInterval || typeof globalThis.clearInterval !== 'function') {\n    (globalThis as any).clearInterval = safeTimers.clearInterval;\n  }\n\n  if (!globalThis.clearTimeout || typeof globalThis.clearTimeout !== 'function') {\n    (globalThis as any).clearTimeout = safeTimers.clearTimeout;\n  }\n}\n\n// Auto-initialize in browser environments\nif (typeof window !== 'undefined') {\n  ensureTimerFunctions();\n}\n\n// Export cleanup function for testing\nexport function cleanupTimers(): void {\n  safeTimers.clearAll();\n}\n\n// Default export\nexport default safeTimers;"],"names":["cleanupTimers","ensureTimerFunctions","safeClearInterval","safeClearTimeout","safeSetInterval","safeSetTimeout","safeTimers","SafeTimers","diagnoseEnvironment","checks","hasWindow","window","hasGlobalThis","globalThis","windowSetInterval","setInterval","windowSetTimeout","setTimeout","globalSetInterval","globalSetTimeout","nodeProcess","process","env","NODE_ENV","userAgent","navigator","console","log","clearAll","intervalMap","forEach","_","id","clearInterval","clear","timeoutMap","clearTimeout","Map","nextId","callback","delay","args","error","warn","intervalId","set","runInterval","has","timeoutId","Promise","resolve","then","delete","undefined"],"mappings":"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"}