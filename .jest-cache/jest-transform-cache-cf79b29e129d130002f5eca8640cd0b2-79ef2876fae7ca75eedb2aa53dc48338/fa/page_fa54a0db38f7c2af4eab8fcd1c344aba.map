{"version":3,"names":["MarketEdgePage","cov_ipuxs7z4g","f","selectedMarket","setSelectedMarket","s","_react","useState","marketOverview","setMarketOverview","pricingTrends","setPricingTrends","competitorComparison","setCompetitorComparison","isLoading","setIsLoading","error","setError","activeTab","setActiveTab","isDummyMode","setIsDummyMode","useEffect","b","loadMarketData","overview","trends","comparison","Promise","all","_marketedgeapi","marketEdgeAPI","getMarketOverview","id","getPricingTrends","days_back","compareCompetitors","err","Error","message","handleRefreshData","tabs","name","icon","_outline","ChartBarIcon","UsersIcon","ExclamationTriangleIcon","_jsxruntime","jsxs","className","jsx","_DummyDataToggle","DummyDataToggle","onToggle","_MarketSelector","MarketSelector","undefined","onMarketSelect","onCreateMarket","console","log","onClick","disabled","ArrowPathIcon","_AccountMenu","AccountMenu","PlusIcon","Fragment","BeakerIcon","map","tab","Icon","competitors","length","recent_data_points","recent_alerts","filter","a","is_read","metrics","_PerformanceMetrics","PerformanceMetrics","_AlertsPanel","AlertsPanel","alerts","onRefresh","_CompetitorTable","CompetitorTable","onViewCompetitor","competitor","onEditCompetitor","_PricingChart","PricingChart","data","chartType","title","height"],"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/app/market-edge/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  ChartBarIcon, \n  UsersIcon, \n  ExclamationTriangleIcon,\n  PlusIcon,\n  ArrowPathIcon,\n  BeakerIcon\n} from '@heroicons/react/24/outline';\nimport { MarketSelector } from '@/components/market-edge/MarketSelector';\nimport { CompetitorTable } from '@/components/market-edge/CompetitorTable';\nimport { PricingChart } from '@/components/market-edge/PricingChart';\nimport { PerformanceMetrics } from '@/components/market-edge/PerformanceMetrics';\nimport { AlertsPanel } from '@/components/market-edge/AlertsPanel';\nimport { AccountMenu } from '@/components/ui/AccountMenu';\nimport { DummyDataToggle } from '@/components/ui/DummyDataToggle';\nimport { marketEdgeAPI } from '@/services/market-edge-api';\nimport { \n  Market, \n  MarketOverview, \n  MarketTrends, \n  CompetitorComparison \n} from '@/types/market-edge';\n\nexport default function MarketEdgePage() {\n  const [selectedMarket, setSelectedMarket] = useState<Market | null>(null);\n  const [marketOverview, setMarketOverview] = useState<MarketOverview | null>(null);\n  const [pricingTrends, setPricingTrends] = useState<MarketTrends | null>(null);\n  const [competitorComparison, setCompetitorComparison] = useState<CompetitorComparison | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<'overview' | 'competitors' | 'pricing' | 'alerts'>('overview');\n  const [isDummyMode, setIsDummyMode] = useState(true); // Default to dummy mode for testing\n\n  useEffect(() => {\n    if (selectedMarket) {\n      loadMarketData();\n    }\n  }, [selectedMarket, isDummyMode]); // Reload data when dummy mode changes\n\n  const loadMarketData = async () => {\n    if (!selectedMarket) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const [overview, trends, comparison] = await Promise.all([\n        marketEdgeAPI.getMarketOverview(selectedMarket.id),\n        marketEdgeAPI.getPricingTrends(selectedMarket.id, { days_back: 30 }),\n        marketEdgeAPI.compareCompetitors(selectedMarket.id)\n      ]);\n\n      setMarketOverview(overview);\n      setPricingTrends(trends);\n      setCompetitorComparison(comparison);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load market data');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRefreshData = () => {\n    loadMarketData();\n  };\n\n  const tabs = [\n    { id: 'overview', name: 'Overview', icon: ChartBarIcon },\n    { id: 'competitors', name: 'Competitors', icon: UsersIcon },\n    { id: 'pricing', name: 'Pricing Analysis', icon: ChartBarIcon },\n    { id: 'alerts', name: 'Alerts', icon: ExclamationTriangleIcon },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <ChartBarIcon className=\"h-8 w-8 text-blue-600 mr-3\" />\n              <h1 className=\"text-2xl font-bold text-gray-900\">Market Edge</h1>\n              <span className=\"ml-3 text-sm text-gray-500\">Competitive Intelligence</span>\n            </div>\n            \n            <div className=\"flex items-center space-x-6\">\n              {/* Dummy Data Toggle */}\n              <DummyDataToggle\n                isDummyMode={isDummyMode}\n                onToggle={setIsDummyMode}\n              />\n              \n              {/* Market Selector and Actions */}\n              <div className=\"flex items-center space-x-4\">\n                <MarketSelector\n                  selectedMarket={selectedMarket || undefined}\n                  onMarketSelect={setSelectedMarket}\n                  onCreateMarket={() => {\n                    // This would open a create market modal\n                    console.log('Create new market');\n                  }}\n                  className=\"w-64\"\n                />\n                \n                {selectedMarket && (\n                  <button\n                    onClick={handleRefreshData}\n                    disabled={isLoading}\n                    className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n                  >\n                    <ArrowPathIcon className={`h-4 w-4 mr-2 ${isLoading ? 'animate-spin' : ''}`} />\n                    Refresh\n                  </button>\n                )}\n              </div>\n              \n              {/* Account Menu */}\n              <AccountMenu />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {!selectedMarket ? (\n          // Welcome State\n          <div className=\"text-center py-12\">\n            <ChartBarIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\n            <h3 className=\"mt-2 text-lg font-medium text-gray-900\">Welcome to Market Edge</h3>\n            <p className=\"mt-1 text-sm text-gray-500 max-w-2xl mx-auto\">\n              Get started by selecting a market to analyze, or create a new market to begin tracking competitors and pricing data.\n              {isDummyMode && (\n                <span className=\"block mt-2 text-blue-600 font-medium\">\n                  Currently in test mode - select a market to see sample competitive intelligence data.\n                </span>\n              )}\n            </p>\n            <div className=\"mt-6\">\n              <button\n                onClick={() => {\n                  // This would open market selector or create modal\n                  console.log('Get started');\n                }}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                <PlusIcon className=\"h-4 w-4 mr-2\" />\n                Get Started\n              </button>\n            </div>\n          </div>\n        ) : error ? (\n          // Error State\n          <div className=\"text-center py-12\">\n            <ExclamationTriangleIcon className=\"mx-auto h-12 w-12 text-red-400\" />\n            <h3 className=\"mt-2 text-lg font-medium text-gray-900\">Error Loading Market Data</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">{error}</p>\n            <div className=\"mt-6\">\n              <button\n                onClick={handleRefreshData}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n              >\n                <ArrowPathIcon className=\"h-4 w-4 mr-2\" />\n                Try Again\n              </button>\n            </div>\n          </div>\n        ) : (\n          <>\n            {/* Data Mode Banner */}\n            {isDummyMode && (\n              <div className=\"mb-6 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-center\">\n                  <BeakerIcon className=\"h-5 w-5 text-blue-600 mr-2\" />\n                  <p className=\"text-sm text-blue-700\">\n                    <span className=\"font-medium\">Test Mode Active:</span> You're viewing sample competitive intelligence data for demonstration purposes.\n                    Toggle to \"Live\" mode to connect to real data sources.\n                  </p>\n                </div>\n              </div>\n            )}\n            \n            {/* Navigation Tabs */}\n            <div className=\"border-b border-gray-200 mb-8\">\n              <nav className=\"-mb-px flex space-x-8\">\n                {tabs.map((tab) => {\n                  const Icon = tab.icon;\n                  return (\n                    <button\n                      key={tab.id}\n                      onClick={() => setActiveTab(tab.id as any)}\n                      className={`${\n                        activeTab === tab.id\n                          ? 'border-blue-500 text-blue-600'\n                          : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                      } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center`}\n                    >\n                      <Icon className=\"h-4 w-4 mr-2\" />\n                      {tab.name}\n                    </button>\n                  );\n                })}\n              </nav>\n            </div>\n\n            {/* Tab Content */}\n            {activeTab === 'overview' && (\n              <div className=\"space-y-8\">\n                {/* Market Overview Cards */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                    <div className=\"flex items-center\">\n                      <UsersIcon className=\"h-8 w-8 text-blue-600\" />\n                      <div className=\"ml-4\">\n                        <p className=\"text-sm font-medium text-gray-500\">Competitors</p>\n                        <p className=\"text-2xl font-semibold text-gray-900\">\n                          {marketOverview?.competitors.length || 0}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                    <div className=\"flex items-center\">\n                      <ChartBarIcon className=\"h-8 w-8 text-green-600\" />\n                      <div className=\"ml-4\">\n                        <p className=\"text-sm font-medium text-gray-500\">Data Points</p>\n                        <p className=\"text-2xl font-semibold text-gray-900\">\n                          {marketOverview?.recent_data_points || 0}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                    <div className=\"flex items-center\">\n                      <ExclamationTriangleIcon className=\"h-8 w-8 text-yellow-600\" />\n                      <div className=\"ml-4\">\n                        <p className=\"text-sm font-medium text-gray-500\">Active Alerts</p>\n                        <p className=\"text-2xl font-semibold text-gray-900\">\n                          {marketOverview?.recent_alerts.filter(a => !a.is_read).length || 0}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Performance Metrics */}\n                {marketOverview?.metrics && (\n                  <PerformanceMetrics \n                    metrics={marketOverview.metrics} \n                    isLoading={isLoading}\n                  />\n                )}\n\n                {/* Recent Alerts */}\n                {marketOverview?.recent_alerts && (\n                  <AlertsPanel\n                    alerts={marketOverview.recent_alerts}\n                    isLoading={isLoading}\n                    onRefresh={handleRefreshData}\n                  />\n                )}\n              </div>\n            )}\n\n            {activeTab === 'competitors' && (\n              <div className=\"space-y-8\">\n                {marketOverview?.competitors && (\n                  <CompetitorTable\n                    competitors={marketOverview.competitors}\n                    isLoading={isLoading}\n                    onViewCompetitor={(competitor) => {\n                      console.log('View competitor:', competitor);\n                    }}\n                    onEditCompetitor={(competitor) => {\n                      console.log('Edit competitor:', competitor);\n                    }}\n                  />\n                )}\n\n                {competitorComparison && (\n                  <PricingChart\n                    data={competitorComparison}\n                    chartType=\"bar\"\n                    title=\"Competitor Price Comparison\"\n                    height={400}\n                  />\n                )}\n              </div>\n            )}\n\n            {activeTab === 'pricing' && (\n              <div className=\"space-y-8\">\n                {pricingTrends && (\n                  <PricingChart\n                    data={pricingTrends}\n                    chartType=\"line\"\n                    title=\"Pricing Trends Over Time\"\n                    height={500}\n                  />\n                )}\n\n                {marketOverview?.metrics && (\n                  <PerformanceMetrics \n                    metrics={marketOverview.metrics} \n                    isLoading={isLoading}\n                  />\n                )}\n              </div>\n            )}\n\n            {activeTab === 'alerts' && (\n              <div className=\"space-y-8\">\n                {marketOverview?.recent_alerts && (\n                  <AlertsPanel\n                    alerts={marketOverview.recent_alerts}\n                    isLoading={isLoading}\n                    onRefresh={handleRefreshData}\n                  />\n                )}\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}"],"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","ignoreList":[]}