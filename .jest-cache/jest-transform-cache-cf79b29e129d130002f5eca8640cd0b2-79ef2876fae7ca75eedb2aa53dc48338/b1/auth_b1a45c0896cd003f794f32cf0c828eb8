48c54ff689c3b2c3024974ed1ff107e7
"use strict";

/* istanbul ignore next */
function cov_j0efudg6e() {
  var path = "/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/services/auth.ts";
  var hash = "563240dacd38db3e260b14e71292ba26da862357";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/services/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "6": {
        start: {
          line: 19,
          column: 13
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "7": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 20,
          column: 78
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "9": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 28,
          column: 77
        }
      },
      "10": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 11
        }
      },
      "11": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "13": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 47
        }
      },
      "14": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 102
        }
      },
      "15": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 49
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 50
        }
      },
      "17": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "19": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 33
        }
      },
      "20": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 12,
            column: 18
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 17
          },
          end: {
            line: 15,
            column: 18
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 27
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 35
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 13
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 43
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 15
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 22
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 22,
            column: 38
          }
        }, {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 24,
            column: 5
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 14
          }
        }, {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 32
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/services/auth.ts"],
      sourcesContent: ["import { apiService } from './api'\nimport { LoginRequest, TokenResponse, User } from '@/types/auth'\nimport Cookies from 'js-cookie'\n\nexport class AuthService {\n  async login(loginData: LoginRequest): Promise<TokenResponse> {\n    const response = await apiService.post<TokenResponse>('/auth/login', loginData)\n    \n    Cookies.set('access_token', response.access_token, { expires: 1 })\n    Cookies.set('refresh_token', response.refresh_token, { expires: 7 })\n    \n    return response\n  }\n\n  async getCurrentUser(): Promise<User> {\n    return apiService.get<User>('/auth/me')\n  }\n\n  async getAuth0Url(redirectUri: string): Promise<{ auth_url: string }> {\n    return apiService.get<{ auth_url: string }>(`/auth/auth0-url?redirect_uri=${encodeURIComponent(redirectUri)}`)\n  }\n\n  logout() {\n    Cookies.remove('access_token')\n    Cookies.remove('refresh_token')\n    window.location.href = '/login'\n  }\n\n  getToken(): string | undefined {\n    return Cookies.get('access_token')\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.getToken()\n  }\n}\n\nexport const authService = new AuthService()"],
      names: ["AuthService", "authService", "login", "loginData", "response", "apiService", "post", "Cookies", "set", "access_token", "expires", "refresh_token", "getCurrentUser", "get", "getAuth0Url", "redirectUri", "encodeURIComponent", "logout", "remove", "window", "location", "href", "getToken", "isAuthenticated"],
      mappings: ";;;;;;;;;;;IAIaA,WAAW;eAAXA;;IAiCAC,WAAW;eAAXA;;;qBArCc;iEAEP;;;;;;AAEb,MAAMD;IACX,MAAME,MAAMC,SAAuB,EAA0B;QAC3D,MAAMC,WAAW,MAAMC,eAAU,CAACC,IAAI,CAAgB,eAAeH;QAErEI,iBAAO,CAACC,GAAG,CAAC,gBAAgBJ,SAASK,YAAY,EAAE;YAAEC,SAAS;QAAE;QAChEH,iBAAO,CAACC,GAAG,CAAC,iBAAiBJ,SAASO,aAAa,EAAE;YAAED,SAAS;QAAE;QAElE,OAAON;IACT;IAEA,MAAMQ,iBAAgC;QACpC,OAAOP,eAAU,CAACQ,GAAG,CAAO;IAC9B;IAEA,MAAMC,YAAYC,WAAmB,EAAiC;QACpE,OAAOV,eAAU,CAACQ,GAAG,CAAuB,CAAC,6BAA6B,EAAEG,mBAAmBD,aAAa,CAAC;IAC/G;IAEAE,SAAS;QACPV,iBAAO,CAACW,MAAM,CAAC;QACfX,iBAAO,CAACW,MAAM,CAAC;QACfC,OAAOC,QAAQ,CAACC,IAAI,GAAG;IACzB;IAEAC,WAA+B;QAC7B,OAAOf,iBAAO,CAACM,GAAG,CAAC;IACrB;IAEAU,kBAA2B;QACzB,OAAO,CAAC,CAAC,IAAI,CAACD,QAAQ;IACxB;AACF;AAEO,MAAMrB,cAAc,IAAID"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "563240dacd38db3e260b14e71292ba26da862357"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_j0efudg6e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_j0efudg6e();
cov_j0efudg6e().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_j0efudg6e().f[0]++;
  cov_j0efudg6e().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_j0efudg6e().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_j0efudg6e().s[3]++;
_export(exports, {
  AuthService: function () {
    /* istanbul ignore next */
    cov_j0efudg6e().f[1]++;
    cov_j0efudg6e().s[4]++;
    return AuthService;
  },
  authService: function () {
    /* istanbul ignore next */
    cov_j0efudg6e().f[2]++;
    cov_j0efudg6e().s[5]++;
    return authService;
  }
});
const _api =
/* istanbul ignore next */
(cov_j0efudg6e().s[6]++, require("./api"));
const _jscookie =
/* istanbul ignore next */
(/*#__PURE__*/cov_j0efudg6e().s[7]++, _interop_require_default(require("js-cookie")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_j0efudg6e().f[3]++;
  cov_j0efudg6e().s[8]++;
  return /* istanbul ignore next */(cov_j0efudg6e().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_j0efudg6e().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_j0efudg6e().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_j0efudg6e().b[0][1]++, {
    default: obj
  });
}
class AuthService {
  async login(loginData) {
    /* istanbul ignore next */
    cov_j0efudg6e().f[4]++;
    const response =
    /* istanbul ignore next */
    (cov_j0efudg6e().s[9]++, await _api.apiService.post("/auth/login", loginData));
    /* istanbul ignore next */
    cov_j0efudg6e().s[10]++;
    _jscookie.default.set("access_token", response.access_token, {
      expires: 1
    });
    /* istanbul ignore next */
    cov_j0efudg6e().s[11]++;
    _jscookie.default.set("refresh_token", response.refresh_token, {
      expires: 7
    });
    /* istanbul ignore next */
    cov_j0efudg6e().s[12]++;
    return response;
  }
  async getCurrentUser() {
    /* istanbul ignore next */
    cov_j0efudg6e().f[5]++;
    cov_j0efudg6e().s[13]++;
    return _api.apiService.get("/auth/me");
  }
  async getAuth0Url(redirectUri) {
    /* istanbul ignore next */
    cov_j0efudg6e().f[6]++;
    cov_j0efudg6e().s[14]++;
    return _api.apiService.get(`/auth/auth0-url?redirect_uri=${encodeURIComponent(redirectUri)}`);
  }
  logout() {
    /* istanbul ignore next */
    cov_j0efudg6e().f[7]++;
    cov_j0efudg6e().s[15]++;
    _jscookie.default.remove("access_token");
    /* istanbul ignore next */
    cov_j0efudg6e().s[16]++;
    _jscookie.default.remove("refresh_token");
    /* istanbul ignore next */
    cov_j0efudg6e().s[17]++;
    window.location.href = "/login";
  }
  getToken() {
    /* istanbul ignore next */
    cov_j0efudg6e().f[8]++;
    cov_j0efudg6e().s[18]++;
    return _jscookie.default.get("access_token");
  }
  isAuthenticated() {
    /* istanbul ignore next */
    cov_j0efudg6e().f[9]++;
    cov_j0efudg6e().s[19]++;
    return !!this.getToken();
  }
}
const authService =
/* istanbul ignore next */
(cov_j0efudg6e().s[20]++, new AuthService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBdXRoU2VydmljZSIsImNvdl9qMGVmdWRnNmUiLCJmIiwicyIsImF1dGhTZXJ2aWNlIiwibG9naW4iLCJsb2dpbkRhdGEiLCJyZXNwb25zZSIsIl9hcGkiLCJhcGlTZXJ2aWNlIiwicG9zdCIsIl9qc2Nvb2tpZSIsImRlZmF1bHQiLCJzZXQiLCJhY2Nlc3NfdG9rZW4iLCJleHBpcmVzIiwicmVmcmVzaF90b2tlbiIsImdldEN1cnJlbnRVc2VyIiwiZ2V0IiwiZ2V0QXV0aDBVcmwiLCJyZWRpcmVjdFVyaSIsImVuY29kZVVSSUNvbXBvbmVudCIsImxvZ291dCIsInJlbW92ZSIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsImdldFRva2VuIiwiaXNBdXRoZW50aWNhdGVkIl0sInNvdXJjZXMiOlsiL1VzZXJzL21hdHQvU2l0ZXMvTWFya2V0RWRnZS9wbGF0Zm9ybS13cmFwcGVyL2Zyb250ZW5kL3NyYy9zZXJ2aWNlcy9hdXRoLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFwaVNlcnZpY2UgfSBmcm9tICcuL2FwaSdcbmltcG9ydCB7IExvZ2luUmVxdWVzdCwgVG9rZW5SZXNwb25zZSwgVXNlciB9IGZyb20gJ0AvdHlwZXMvYXV0aCdcbmltcG9ydCBDb29raWVzIGZyb20gJ2pzLWNvb2tpZSdcblxuZXhwb3J0IGNsYXNzIEF1dGhTZXJ2aWNlIHtcbiAgYXN5bmMgbG9naW4obG9naW5EYXRhOiBMb2dpblJlcXVlc3QpOiBQcm9taXNlPFRva2VuUmVzcG9uc2U+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFwaVNlcnZpY2UucG9zdDxUb2tlblJlc3BvbnNlPignL2F1dGgvbG9naW4nLCBsb2dpbkRhdGEpXG4gICAgXG4gICAgQ29va2llcy5zZXQoJ2FjY2Vzc190b2tlbicsIHJlc3BvbnNlLmFjY2Vzc190b2tlbiwgeyBleHBpcmVzOiAxIH0pXG4gICAgQ29va2llcy5zZXQoJ3JlZnJlc2hfdG9rZW4nLCByZXNwb25zZS5yZWZyZXNoX3Rva2VuLCB7IGV4cGlyZXM6IDcgfSlcbiAgICBcbiAgICByZXR1cm4gcmVzcG9uc2VcbiAgfVxuXG4gIGFzeW5jIGdldEN1cnJlbnRVc2VyKCk6IFByb21pc2U8VXNlcj4ge1xuICAgIHJldHVybiBhcGlTZXJ2aWNlLmdldDxVc2VyPignL2F1dGgvbWUnKVxuICB9XG5cbiAgYXN5bmMgZ2V0QXV0aDBVcmwocmVkaXJlY3RVcmk6IHN0cmluZyk6IFByb21pc2U8eyBhdXRoX3VybDogc3RyaW5nIH0+IHtcbiAgICByZXR1cm4gYXBpU2VydmljZS5nZXQ8eyBhdXRoX3VybDogc3RyaW5nIH0+KGAvYXV0aC9hdXRoMC11cmw/cmVkaXJlY3RfdXJpPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHJlZGlyZWN0VXJpKX1gKVxuICB9XG5cbiAgbG9nb3V0KCkge1xuICAgIENvb2tpZXMucmVtb3ZlKCdhY2Nlc3NfdG9rZW4nKVxuICAgIENvb2tpZXMucmVtb3ZlKCdyZWZyZXNoX3Rva2VuJylcbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvbG9naW4nXG4gIH1cblxuICBnZXRUb2tlbigpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiBDb29raWVzLmdldCgnYWNjZXNzX3Rva2VuJylcbiAgfVxuXG4gIGlzQXV0aGVudGljYXRlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gISF0aGlzLmdldFRva2VuKClcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgYXV0aFNlcnZpY2UgPSBuZXcgQXV0aFNlcnZpY2UoKSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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