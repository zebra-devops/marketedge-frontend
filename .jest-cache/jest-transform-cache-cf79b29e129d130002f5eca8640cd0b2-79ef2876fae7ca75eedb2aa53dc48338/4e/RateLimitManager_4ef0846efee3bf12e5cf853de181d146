d7daef77a64f44d4c7b97ced162e0492
/**
 * Rate Limit Manager Component
 * 
 * Admin component for managing tenant-specific rate limits.
 * Demonstrates multi-tenant testing scenarios and accessibility compliance.
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "RateLimitManager", {
    enumerable: true,
    get: function() {
        return RateLimitManager;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _outline = require("@heroicons/react/24/outline");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const TIER_COLORS = {
    standard: "bg-gray-100 text-gray-800",
    premium: "bg-blue-100 text-blue-800",
    enterprise: "bg-purple-100 text-purple-800"
};
const TIER_LIMITS = {
    standard: {
        requests_per_hour: 1000,
        burst_size: 100
    },
    premium: {
        requests_per_hour: 5000,
        burst_size: 250
    },
    enterprise: {
        requests_per_hour: 10000,
        burst_size: 500
    }
};
const RateLimitManager = ({ tenantId, className = "", onUpdate })=>{
    const [rateLimits, setRateLimits] = (0, _react.useState)([]);
    const [loading, setLoading] = (0, _react.useState)(true);
    const [error, setError] = (0, _react.useState)(null);
    const [selectedRateLimit, setSelectedRateLimit] = (0, _react.useState)(null);
    const [editingMode, setEditingMode] = (0, _react.useState)(null);
    // Form state
    const [formData, setFormData] = (0, _react.useState)({
        tier: "standard",
        requests_per_hour: 1000,
        burst_size: 100,
        emergency_reason: ""
    });
    (0, _react.useEffect)(()=>{
        fetchRateLimits();
    }, [
        tenantId
    ]);
    const fetchRateLimits = async ()=>{
        try {
            setLoading(true);
            const response = await fetch("/api/v1/admin/rate-limits");
            if (!response.ok) {
                throw new Error(`Failed to fetch rate limits: ${response.status}`);
            }
            const data = await response.json();
            const filteredData = tenantId ? data.filter((rl)=>rl.tenant_id === tenantId) : data;
            setRateLimits(filteredData);
            setError(null);
        } catch (err) {
            const errorMessage = err instanceof Error ? err.message : "Failed to fetch rate limits";
            setError(errorMessage);
        } finally{
            setLoading(false);
        }
    };
    const handleUpdateRateLimit = async (rateLimitId, updates)=>{
        try {
            const response = await fetch(`/api/v1/admin/rate-limits/${rateLimitId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(updates)
            });
            if (!response.ok) {
                throw new Error(`Failed to update rate limit: ${response.status}`);
            }
            const updatedRateLimit = await response.json();
            setRateLimits((prev)=>prev.map((rl)=>rl.id === rateLimitId ? updatedRateLimit : rl));
            if (onUpdate) {
                onUpdate(updatedRateLimit);
            }
            setEditingMode(null);
            setSelectedRateLimit(null);
        } catch (err) {
            const errorMessage = err instanceof Error ? err.message : "Failed to update rate limit";
            setError(errorMessage);
        }
    };
    const handleEmergencyBypass = async (tenantId, reason, durationHours = 1)=>{
        try {
            const response = await fetch(`/api/v1/admin/rate-limits/${tenantId}/emergency-bypass`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    reason,
                    duration_hours: durationHours
                })
            });
            if (!response.ok) {
                throw new Error(`Failed to enable emergency bypass: ${response.status}`);
            }
            const updatedRateLimit = await response.json();
            setRateLimits((prev)=>prev.map((rl)=>rl.tenant_id === tenantId ? updatedRateLimit : rl));
            setEditingMode(null);
            setSelectedRateLimit(null);
            setFormData({
                ...formData,
                emergency_reason: ""
            });
        } catch (err) {
            const errorMessage = err instanceof Error ? err.message : "Failed to enable emergency bypass";
            setError(errorMessage);
        }
    };
    const handleRemoveBypass = async (tenantId)=>{
        try {
            const response = await fetch(`/api/v1/admin/rate-limits/${tenantId}/emergency-bypass`, {
                method: "DELETE"
            });
            if (!response.ok) {
                throw new Error(`Failed to remove emergency bypass: ${response.status}`);
            }
            await fetchRateLimits() // Refresh data
            ;
        } catch (err) {
            const errorMessage = err instanceof Error ? err.message : "Failed to remove emergency bypass";
            setError(errorMessage);
        }
    };
    const handleTierChange = (tier)=>{
        const limits = TIER_LIMITS[tier];
        setFormData({
            ...formData,
            tier,
            requests_per_hour: limits.requests_per_hour,
            burst_size: limits.burst_size
        });
    };
    const formatBypassUntil = (bypassUntil)=>{
        return new Date(bypassUntil).toLocaleString();
    };
    if (loading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: `flex items-center justify-center p-8 ${className}`,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600",
                "data-testid": "loading-spinner",
                "aria-label": "Loading rate limits"
            })
        });
    }
    if (error) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: `p-4 ${className}`,
            role: "alert",
            "aria-live": "assertive",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-2 text-red-600",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ExclamationTriangleIcon, {
                            className: "h-5 w-5",
                            "aria-hidden": "true"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            children: error
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    onClick: fetchRateLimits,
                    className: "mt-2 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 focus:ring-2 focus:ring-red-500 focus:ring-offset-2",
                    "aria-label": "Retry loading rate limits",
                    children: "Retry"
                })
            ]
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `space-y-6 ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h2", {
                        className: "text-lg font-semibold text-gray-900",
                        children: [
                            "Rate Limit Management",
                            tenantId && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "ml-2 text-sm text-gray-500",
                                children: "(Single Tenant)"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        onClick: fetchRateLimits,
                        className: "px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded focus:ring-2 focus:ring-gray-500 focus:ring-offset-2",
                        "aria-label": "Refresh rate limits",
                        children: "Refresh"
                    })
                ]
            }),
            rateLimits.length === 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "text-center py-8 text-gray-500",
                children: "No rate limits found"
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "bg-white shadow overflow-hidden sm:rounded-md",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("ul", {
                    className: "divide-y divide-gray-200",
                    children: rateLimits.map((rateLimit)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                            className: "px-6 py-4",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center justify-between",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex-1",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex items-center space-x-4",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                        className: "text-sm font-medium text-gray-900",
                                                        children: rateLimit.tenant_name
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        className: `px-2 py-1 text-xs rounded-full ${TIER_COLORS[rateLimit.tier]}`,
                                                        children: rateLimit.tier
                                                    }),
                                                    rateLimit.emergency_bypass && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                        className: "px-2 py-1 text-xs bg-red-100 text-red-800 rounded-full flex items-center space-x-1",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ExclamationTriangleIcon, {
                                                                className: "h-3 w-3"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                children: "Emergency Bypass"
                                                            })
                                                        ]
                                                    }),
                                                    !rateLimit.enabled && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        className: "px-2 py-1 text-xs bg-gray-100 text-gray-800 rounded-full",
                                                        children: "Disabled"
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "mt-2 text-sm text-gray-600",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                        children: [
                                                            "Limit: ",
                                                            rateLimit.requests_per_hour.toLocaleString(),
                                                            " req/hour"
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                        className: "ml-4",
                                                        children: [
                                                            "Burst: ",
                                                            rateLimit.burst_size
                                                        ]
                                                    })
                                                ]
                                            }),
                                            rateLimit.emergency_bypass && rateLimit.bypass_reason && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "mt-2 p-2 bg-red-50 border border-red-200 rounded text-sm",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                                        className: "text-red-700",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                                                children: "Reason:"
                                                            }),
                                                            " ",
                                                            rateLimit.bypass_reason
                                                        ]
                                                    }),
                                                    rateLimit.bypass_until && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                                        className: "text-red-600 mt-1",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                                                children: "Until:"
                                                            }),
                                                            " ",
                                                            formatBypassUntil(rateLimit.bypass_until)
                                                        ]
                                                    })
                                                ]
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center space-x-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                onClick: ()=>{
                                                    setSelectedRateLimit(rateLimit);
                                                    setEditingMode("edit");
                                                    setFormData({
                                                        tier: rateLimit.tier,
                                                        requests_per_hour: rateLimit.requests_per_hour,
                                                        burst_size: rateLimit.burst_size,
                                                        emergency_reason: ""
                                                    });
                                                },
                                                className: "px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2",
                                                "aria-label": `Edit rate limit for ${rateLimit.tenant_name}`,
                                                children: "Edit"
                                            }),
                                            rateLimit.emergency_bypass ? /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                onClick: ()=>handleRemoveBypass(rateLimit.tenant_id),
                                                className: "px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700 focus:ring-2 focus:ring-green-500 focus:ring-offset-2",
                                                "aria-label": `Remove emergency bypass for ${rateLimit.tenant_name}`,
                                                children: "Remove Bypass"
                                            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                onClick: ()=>{
                                                    setSelectedRateLimit(rateLimit);
                                                    setEditingMode("emergency");
                                                    setFormData({
                                                        ...formData,
                                                        emergency_reason: ""
                                                    });
                                                },
                                                className: "px-3 py-1 text-sm bg-red-600 text-white rounded hover:bg-red-700 focus:ring-2 focus:ring-red-500 focus:ring-offset-2",
                                                "aria-label": `Enable emergency bypass for ${rateLimit.tenant_name}`,
                                                children: "Emergency"
                                            })
                                        ]
                                    })
                                ]
                            })
                        }, rateLimit.id))
                })
            }),
            editingMode === "edit" && selectedRateLimit && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50",
                role: "dialog",
                "aria-labelledby": "edit-modal-title",
                "aria-modal": "true",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "bg-white rounded-lg p-6 w-full max-w-md mx-4",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                            id: "edit-modal-title",
                            className: "text-lg font-semibold mb-4",
                            children: [
                                "Edit Rate Limit: ",
                                selectedRateLimit.tenant_name
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            className: "block text-sm font-medium text-gray-700 mb-1",
                                            children: "Tier"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("select", {
                                            value: formData.tier,
                                            onChange: (e)=>handleTierChange(e.target.value),
                                            className: "w-full px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                                            "aria-describedby": "tier-help",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                    value: "standard",
                                                    children: "Standard"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                    value: "premium",
                                                    children: "Premium"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                    value: "enterprise",
                                                    children: "Enterprise"
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            id: "tier-help",
                                            className: "text-xs text-gray-500 mt-1",
                                            children: "Tier determines default rate limits"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            className: "block text-sm font-medium text-gray-700 mb-1",
                                            children: "Requests per Hour"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                            type: "number",
                                            min: "1",
                                            max: "100000",
                                            value: formData.requests_per_hour,
                                            onChange: (e)=>setFormData({
                                                    ...formData,
                                                    requests_per_hour: parseInt(e.target.value) || 0
                                                }),
                                            className: "w-full px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                                            "aria-describedby": "requests-help"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            id: "requests-help",
                                            className: "text-xs text-gray-500 mt-1",
                                            children: "Maximum requests allowed per hour"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            className: "block text-sm font-medium text-gray-700 mb-1",
                                            children: "Burst Size"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                            type: "number",
                                            min: "1",
                                            max: "1000",
                                            value: formData.burst_size,
                                            onChange: (e)=>setFormData({
                                                    ...formData,
                                                    burst_size: parseInt(e.target.value) || 0
                                                }),
                                            className: "w-full px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                                            "aria-describedby": "burst-help"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            id: "burst-help",
                                            className: "text-xs text-gray-500 mt-1",
                                            children: "Temporary burst allowance above rate limit"
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex justify-end space-x-2 mt-6",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    onClick: ()=>{
                                        setEditingMode(null);
                                        setSelectedRateLimit(null);
                                    },
                                    className: "px-4 py-2 text-sm border border-gray-300 rounded hover:bg-gray-50 focus:ring-2 focus:ring-gray-500 focus:ring-offset-2",
                                    children: "Cancel"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    onClick: ()=>handleUpdateRateLimit(selectedRateLimit.id, {
                                            tier: formData.tier,
                                            requests_per_hour: formData.requests_per_hour,
                                            burst_size: formData.burst_size
                                        }),
                                    className: "px-4 py-2 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2",
                                    disabled: formData.requests_per_hour < 1 || formData.burst_size < 1,
                                    "aria-describedby": "update-help",
                                    children: "Update"
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            id: "update-help",
                            className: "text-xs text-gray-500 mt-2",
                            children: "Changes take effect immediately"
                        })
                    ]
                })
            }),
            editingMode === "emergency" && selectedRateLimit && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50",
                role: "dialog",
                "aria-labelledby": "emergency-modal-title",
                "aria-modal": "true",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "bg-white rounded-lg p-6 w-full max-w-md mx-4",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                            id: "emergency-modal-title",
                            className: "text-lg font-semibold mb-4 text-red-700",
                            children: [
                                "Emergency Bypass: ",
                                selectedRateLimit.tenant_name
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "mb-4 p-3 bg-red-50 border border-red-200 rounded",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                className: "text-sm text-red-700",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                        children: "Warning:"
                                    }),
                                    " This will temporarily remove all rate limiting for this tenant. Use only in genuine emergencies."
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "space-y-4",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                        className: "block text-sm font-medium text-gray-700 mb-1",
                                        children: "Reason for Emergency Bypass *"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("textarea", {
                                        value: formData.emergency_reason,
                                        onChange: (e)=>setFormData({
                                                ...formData,
                                                emergency_reason: e.target.value
                                            }),
                                        className: "w-full px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-red-500 focus:border-red-500",
                                        rows: 3,
                                        placeholder: "Explain why emergency bypass is needed...",
                                        required: true,
                                        "aria-describedby": "reason-help"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        id: "reason-help",
                                        className: "text-xs text-gray-500 mt-1",
                                        children: "This reason will be logged for audit purposes"
                                    })
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex justify-end space-x-2 mt-6",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    onClick: ()=>{
                                        setEditingMode(null);
                                        setSelectedRateLimit(null);
                                        setFormData({
                                            ...formData,
                                            emergency_reason: ""
                                        });
                                    },
                                    className: "px-4 py-2 text-sm border border-gray-300 rounded hover:bg-gray-50 focus:ring-2 focus:ring-gray-500 focus:ring-offset-2",
                                    children: "Cancel"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    onClick: ()=>handleEmergencyBypass(selectedRateLimit.tenant_id, formData.emergency_reason),
                                    className: "px-4 py-2 text-sm bg-red-600 text-white rounded hover:bg-red-700 focus:ring-2 focus:ring-red-500 focus:ring-offset-2",
                                    disabled: formData.emergency_reason.trim().length < 10,
                                    "aria-describedby": "emergency-help",
                                    children: "Enable Emergency Bypass"
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            id: "emergency-help",
                            className: "text-xs text-gray-500 mt-2",
                            children: "Bypass will automatically expire in 1 hour"
                        })
                    ]
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,