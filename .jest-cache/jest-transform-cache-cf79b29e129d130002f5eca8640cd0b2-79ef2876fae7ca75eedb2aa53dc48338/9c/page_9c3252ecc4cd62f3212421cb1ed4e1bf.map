{"version":3,"names":["LoginPage","cov_zec8nvtie","f","s","console","log","process","env","NEXT_PUBLIC_AUTH0_DOMAIN","NEXT_PUBLIC_AUTH0_CLIENT_ID","isLoading","setIsLoading","_react","useState","isProcessingCallback","setIsProcessingCallback","user","login","_useAuth","useAuthContext","router","_navigation","useRouter","searchParams","useSearchParams","processedCodeRef","useRef","isProcessingRef","useEffect","b","push","code","get","error","substring","current","_reacthottoast","default","window","history","replaceState","document","title","location","pathname","handleCallback","redirectUri","origin","success","handleLogin","auth_url","_auth","authService","getAuth0Url","href","clearSession","localStorage","clear","sessionStorage","_jsxruntime","jsx","className","jsxs","_LoadingSpinner","size","_Button","onClick"],"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/app/login/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState, useRef } from 'react'\nimport { useRouter, useSearchParams } from 'next/navigation'\nimport { useAuthContext } from '@/hooks/useAuth'\nimport { authService } from '@/services/auth'\nimport Button from '@/components/ui/Button'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner'\nimport toast from 'react-hot-toast'\n\nexport default function LoginPage() {\n  // Add this temporarily to see if env vars are loaded\n  console.log('Auth0 Domain:', process.env.NEXT_PUBLIC_AUTH0_DOMAIN);\n  console.log('Auth0 Client ID:', process.env.NEXT_PUBLIC_AUTH0_CLIENT_ID);\n  \n  const [isLoading, setIsLoading] = useState(false)\n  const [isProcessingCallback, setIsProcessingCallback] = useState(false)\n  const { user, login } = useAuthContext()\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  \n  // Use ref to prevent multiple processing\n  const processedCodeRef = useRef<string | null>(null)\n  const isProcessingRef = useRef(false)\n\n  useEffect(() => {\n    console.log('LoginPage useEffect triggered')\n    \n    if (user) {\n      console.log('User already logged in, redirecting to dashboard')\n      router.push('/dashboard')\n      return\n    }\n\n    const code = searchParams.get('code')\n    const error = searchParams.get('error')\n\n    console.log('URL params - code:', code?.substring(0, 10) + '...', 'error:', error)\n    console.log('Processing state - processedCode:', processedCodeRef.current?.substring(0, 10) + '...', 'isProcessing:', isProcessingRef.current)\n\n    if (error) {\n      toast.error(`Authentication error: ${error}`)\n      // Clear URL parameters\n      window.history.replaceState({}, document.title, window.location.pathname)\n      return\n    }\n\n    if (code && code !== processedCodeRef.current && !isProcessingRef.current) {\n      console.log('Processing new authorization code')\n      processedCodeRef.current = code\n      isProcessingRef.current = true\n      \n      // Immediately clear URL to prevent reuse\n      window.history.replaceState({}, document.title, window.location.pathname)\n      handleCallback(code)\n    }\n  }, [user, searchParams, router])\n\n  const handleCallback = async (code: string) => {\n    setIsProcessingCallback(true)\n    try {\n      console.log('Processing auth code:', code.substring(0, 10) + '...')\n      const redirectUri = `${window.location.origin}/login`\n      await login(code, redirectUri)\n      toast.success('Login successful!')\n      router.push('/dashboard')\n    } catch (error) {\n      console.error('Login callback failed:', error)\n      toast.error('Login failed. Please get a new authorization code.')\n      // Reset refs to allow fresh login attempt\n      processedCodeRef.current = null\n      isProcessingRef.current = false\n    } finally {\n      setIsProcessingCallback(false)\n    }\n  }\n\n  const handleLogin = async () => {\n    setIsLoading(true)\n    // Reset refs before new login attempt\n    processedCodeRef.current = null\n    isProcessingRef.current = false\n    \n    try {\n      const redirectUri = `${window.location.origin}/login`\n      const { auth_url } = await authService.getAuth0Url(redirectUri)\n      console.log('Redirecting to Auth0:', auth_url)\n      window.location.href = auth_url\n    } catch (error) {\n      console.error('Failed to get Auth0 URL:', error)\n      toast.error('Failed to initiate login. Please try again.')\n      setIsLoading(false)\n    }\n  }\n\n  const clearSession = () => {\n    // Clear any stored tokens\n    localStorage.clear()\n    sessionStorage.clear()\n    // Clear URL parameters\n    window.history.replaceState({}, document.title, window.location.pathname)\n    // Reset refs\n    processedCodeRef.current = null\n    isProcessingRef.current = false\n    setIsProcessingCallback(false)\n    toast.success('Session cleared. Try logging in again.')\n  }\n\n  if (isProcessingCallback) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <LoadingSpinner size=\"lg\" />\n          <p className=\"mt-4 text-gray-600\">Processing login...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Sign in to Platform Wrapper\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Access your business intelligence tools\n          </p>\n        </div>\n        <div className=\"mt-8 space-y-6\">\n          <div className=\"rounded-md shadow-sm space-y-3\">\n            <Button\n              onClick={handleLogin}\n              isLoading={isLoading}\n              className=\"group relative w-full flex justify-center py-3 px-4 text-sm font-medium rounded-md\"\n              size=\"lg\"\n            >\n              Sign in with Auth0\n            </Button>\n            <Button\n              onClick={clearSession}\n              className=\"group relative w-full flex justify-center py-2 px-4 text-sm font-medium rounded-md bg-gray-200 hover:bg-gray-300 text-gray-700\"\n              size=\"sm\"\n            >\n              Clear Session & Get Fresh Code\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}"],"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","ignoreList":[]}