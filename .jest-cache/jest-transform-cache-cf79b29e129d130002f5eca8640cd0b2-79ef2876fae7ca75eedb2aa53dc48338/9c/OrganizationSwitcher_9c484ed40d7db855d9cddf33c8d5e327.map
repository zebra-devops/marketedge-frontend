{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/ui/OrganizationSwitcher.tsx"],"sourcesContent":["'use client'\n\nimport { Fragment, useState } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport {\n  BuildingOfficeIcon,\n  ChevronDownIcon,\n  CheckIcon,\n} from '@heroicons/react/24/outline'\nimport { useOrganisationContext } from '@/components/providers/OrganisationProvider'\nimport { Organisation } from '@/types/api'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner'\n\nconst getIndustryIcon = (industry: string) => {\n  // Industry badge colors and icons\n  switch (industry.toLowerCase()) {\n    case 'cinema exhibition':\n    case 'cinema':\n      return { color: 'bg-purple-100 text-purple-800', icon: '🎬' }\n    case 'hotel':\n    case 'accommodation':\n      return { color: 'bg-blue-100 text-blue-800', icon: '🏨' }\n    case 'gym':\n    case 'fitness':\n      return { color: 'bg-green-100 text-green-800', icon: '💪' }\n    case 'retail':\n    case 'retail trade':\n      return { color: 'bg-yellow-100 text-yellow-800', icon: '🛍️' }\n    case 'b2b':\n    case 'business services':\n      return { color: 'bg-gray-100 text-gray-800', icon: '🏢' }\n    default:\n      return { color: 'bg-gray-100 text-gray-800', icon: '🏢' }\n  }\n}\n\ninterface OrganizationSwitcherProps {\n  className?: string\n}\n\nexport default function OrganizationSwitcher({ className = '' }: OrganizationSwitcherProps) {\n  const {\n    currentOrganisation,\n    accessibleOrganisations,\n    switchOrganisation,\n    isSwitching,\n    isLoadingAccessible,\n    isSuperAdmin,\n  } = useOrganisationContext()\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const handleSwitchOrganisation = async (organisation: Organisation) => {\n    if (organisation.id === currentOrganisation?.id || isSwitching) return\n    \n    try {\n      await switchOrganisation(organisation.id)\n      setIsOpen(false)\n    } catch (error) {\n      console.error('Failed to switch organization:', error)\n      // Error handling could show a toast notification here\n    }\n  }\n\n  // Don't show if user has access to only one organization or none\n  // Exception: Show for super admins even if they only have one org, as they can potentially access all\n  if (isLoadingAccessible || (accessibleOrganisations.length <= 1 && !isSuperAdmin)) {\n    return null\n  }\n\n  // For super admins, show even if only one org is loaded (they can access others)\n  if (isSuperAdmin && accessibleOrganisations.length === 0) {\n    return null\n  }\n\n  const currentOrgDisplay = currentOrganisation || accessibleOrganisations[0]\n  const currentIndustryStyle = getIndustryIcon(currentOrgDisplay?.industry || '')\n\n  return (\n    <div className={`relative ${className}`}>\n      <Listbox value={currentOrganisation} onChange={handleSwitchOrganisation}>\n        <div className=\"relative\">\n          <Listbox.Button\n            className=\"relative w-full min-w-[200px] cursor-pointer rounded-lg bg-white py-2 pl-3 pr-10 text-left border border-gray-300 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-1 focus:ring-primary-500 sm:text-sm\"\n            disabled={isSwitching}\n          >\n            <div className=\"flex items-center gap-3\">\n              {isSwitching ? (\n                <LoadingSpinner size=\"sm\" />\n              ) : (\n                <BuildingOfficeIcon className=\"h-5 w-5 text-gray-400\" />\n              )}\n              \n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"block truncate font-medium text-gray-900\">\n                    {currentOrgDisplay?.name || 'Select Organization'}\n                  </span>\n                  {currentOrgDisplay?.industry && (\n                    <span\n                      className={`inline-flex items-center gap-1 px-2 py-0.5 rounded-full text-xs font-medium ${currentIndustryStyle.color}`}\n                    >\n                      <span>{currentIndustryStyle.icon}</span>\n                      <span className=\"hidden sm:inline\">\n                        {currentOrgDisplay.industry}\n                      </span>\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n            \n            <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n              <ChevronDownIcon\n                className=\"h-5 w-5 text-gray-400\"\n                aria-hidden=\"true\"\n              />\n            </span>\n          </Listbox.Button>\n          \n          <Transition\n            show={isOpen}\n            as={Fragment}\n            leave=\"transition ease-in duration-100\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n            beforeEnter={() => setIsOpen(true)}\n            afterLeave={() => setIsOpen(false)}\n          >\n            <Listbox.Options className=\"absolute z-50 mt-1 max-h-60 w-full min-w-[280px] overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n              <div className=\"px-3 py-2 text-xs font-medium text-gray-500 border-b border-gray-200\">\n                {isSuperAdmin ? (\n                  <div className=\"flex items-center justify-between\">\n                    <span>Switch Organization</span>\n                    <span className=\"px-2 py-0.5 bg-purple-100 text-purple-700 rounded-full text-xs font-medium\">\n                      Super Admin\n                    </span>\n                  </div>\n                ) : (\n                  'Switch Organization'\n                )}\n              </div>\n              \n              {accessibleOrganisations.map((organisation) => {\n                const industryStyle = getIndustryIcon(organisation.industry || '')\n                const isCurrent = organisation.id === currentOrganisation?.id\n                \n                return (\n                  <Listbox.Option\n                    key={organisation.id}\n                    className={({ active, selected }) =>\n                      `relative cursor-pointer select-none py-3 px-3 ${\n                        active || selected\n                          ? 'bg-primary-50 text-primary-900'\n                          : 'text-gray-900'\n                      } ${isCurrent ? 'bg-primary-50' : ''}`\n                    }\n                    value={organisation}\n                  >\n                    {({ selected }) => (\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n                          <BuildingOfficeIcon className=\"h-5 w-5 text-gray-400 flex-shrink-0\" />\n                          \n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"flex items-center gap-2 mb-1\">\n                              <span className={`block truncate ${isCurrent ? 'font-semibold' : 'font-medium'}`}>\n                                {organisation.name}\n                              </span>\n                              {isCurrent && (\n                                <span className=\"text-xs bg-primary-100 text-primary-700 px-2 py-0.5 rounded-full\">\n                                  Current\n                                </span>\n                              )}\n                            </div>\n                            \n                            {organisation.industry && (\n                              <div className=\"flex items-center gap-2\">\n                                <span\n                                  className={`inline-flex items-center gap-1 px-2 py-0.5 rounded-full text-xs font-medium ${industryStyle.color}`}\n                                >\n                                  <span>{industryStyle.icon}</span>\n                                  <span>{organisation.industry}</span>\n                                </span>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                        \n                        {isCurrent && (\n                          <CheckIcon className=\"h-5 w-5 text-primary-600\" />\n                        )}\n                      </div>\n                    )}\n                  </Listbox.Option>\n                )\n              })}\n            </Listbox.Options>\n          </Transition>\n        </div>\n      </Listbox>\n    </div>\n  )\n}"],"names":["OrganizationSwitcher","getIndustryIcon","industry","toLowerCase","color","icon","className","currentOrganisation","accessibleOrganisations","switchOrganisation","isSwitching","isLoadingAccessible","isSuperAdmin","useOrganisationContext","isOpen","setIsOpen","useState","handleSwitchOrganisation","organisation","id","error","console","length","currentOrgDisplay","currentIndustryStyle","div","Listbox","value","onChange","Button","disabled","LoadingSpinner","size","BuildingOfficeIcon","span","name","ChevronDownIcon","aria-hidden","Transition","show","as","Fragment","leave","leaveFrom","leaveTo","beforeEnter","afterLeave","Options","map","industryStyle","isCurrent","Option","active","selected","CheckIcon"],"mappings":"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"}