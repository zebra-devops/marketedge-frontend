64186e569aa55e31739016443c0d3d84
"use strict";

/* istanbul ignore next */
function cov_1voxh8aabk() {
  var path = "/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/services/api.ts";
  var hash = "fbe238f85c29422ee4d929531e978942422918dc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/services/api.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 26
        }
      },
      "3": {
        start: {
          line: 11,
          column: 29
        },
        end: {
          line: 11,
          column: 71
        }
      },
      "4": {
        start: {
          line: 12,
          column: 32
        },
        end: {
          line: 12,
          column: 78
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 25,
          column: 11
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "8": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 35,
          column: 43
        }
      },
      "9": {
        start: {
          line: 30,
          column: 26
        },
        end: {
          line: 30,
          column: 63
        }
      },
      "10": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 33,
          column: 13
        }
      },
      "11": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 65
        }
      },
      "12": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 26
        }
      },
      "13": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 41
        }
      },
      "14": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 56,
          column: 11
        }
      },
      "15": {
        start: {
          line: 36,
          column: 58
        },
        end: {
          line: 36,
          column: 66
        }
      },
      "16": {
        start: {
          line: 37,
          column: 36
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "17": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "18": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 46
        }
      },
      "19": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 53,
          column: 17
        }
      },
      "20": {
        start: {
          line: 41,
          column: 41
        },
        end: {
          line: 41,
          column: 79
        }
      },
      "21": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 49,
          column: 21
        }
      },
      "22": {
        start: {
          line: 43,
          column: 41
        },
        end: {
          line: 45,
          column: 26
        }
      },
      "23": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 85
        }
      },
      "24": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 47,
          column: 98
        }
      },
      "25": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 60
        }
      },
      "26": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "27": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 52
        }
      },
      "28": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 41
        }
      },
      "29": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 49
        }
      },
      "30": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "31": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "32": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 29
        }
      },
      "33": {
        start: {
          line: 67,
          column: 25
        },
        end: {
          line: 67,
          column: 58
        }
      },
      "34": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 29
        }
      },
      "35": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 71,
          column: 57
        }
      },
      "36": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 29
        }
      },
      "37": {
        start: {
          line: 75,
          column: 25
        },
        end: {
          line: 75,
          column: 54
        }
      },
      "38": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 29
        }
      },
      "39": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 79,
          column: 119
        }
      },
      "40": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 29
        }
      },
      "41": {
        start: {
          line: 83,
          column: 19
        },
        end: {
          line: 83,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 45
          },
          end: {
            line: 29,
            column: 46
          }
        },
        loc: {
          start: {
            line: 29,
            column: 55
          },
          end: {
            line: 35,
            column: 9
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 35,
            column: 12
          }
        },
        loc: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 35,
            column: 41
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 36,
            column: 46
          },
          end: {
            line: 36,
            column: 47
          }
        },
        loc: {
          start: {
            line: 36,
            column: 58
          },
          end: {
            line: 36,
            column: 66
          }
        },
        line: 36
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 36,
            column: 68
          },
          end: {
            line: 36,
            column: 69
          }
        },
        loc: {
          start: {
            line: 36,
            column: 83
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 36
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 18
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 58
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 62
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 66
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 70
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 22
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 74
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 29
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 78
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 46
          }
        }, {
          start: {
            line: 38,
            column: 50
          },
          end: {
            line: 38,
            column: 73
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 20
          },
          end: {
            line: 49,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 20
          },
          end: {
            line: 49,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/services/api.ts"],
      sourcesContent: ["import axios, { AxiosInstance, AxiosResponse } from 'axios'\nimport Cookies from 'js-cookie'\nimport { TokenResponse, RefreshTokenRequest } from '@/types/auth'\n\nclass ApiService {\n  private client: AxiosInstance\n\n  constructor() {\n    this.client = axios.create({\n      baseURL: process.env.NEXT_PUBLIC_API_BASE_URL + '/api/v1',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    this.setupInterceptors()\n  }\n\n  private setupInterceptors() {\n    this.client.interceptors.request.use(\n      (config) => {\n        const token = Cookies.get('access_token')\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`\n        }\n        return config\n      },\n      (error) => Promise.reject(error)\n    )\n\n    this.client.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        const originalRequest = error.config\n\n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true\n\n          try {\n            const refreshToken = Cookies.get('refresh_token')\n            if (refreshToken) {\n              const response = await this.refreshToken({ refresh_token: refreshToken })\n              Cookies.set('access_token', response.access_token)\n              originalRequest.headers.Authorization = `Bearer ${response.access_token}`\n              return this.client(originalRequest)\n            }\n          } catch (refreshError) {\n            this.clearTokens()\n            window.location.href = '/login'\n          }\n        }\n\n        return Promise.reject(error)\n      }\n    )\n  }\n\n  private clearTokens() {\n    Cookies.remove('access_token')\n    Cookies.remove('refresh_token')\n  }\n\n  async get<T>(url: string): Promise<T> {\n    const response: AxiosResponse<T> = await this.client.get(url)\n    return response.data\n  }\n\n  async post<T>(url: string, data?: any): Promise<T> {\n    const response: AxiosResponse<T> = await this.client.post(url, data)\n    return response.data\n  }\n\n  async put<T>(url: string, data?: any): Promise<T> {\n    const response: AxiosResponse<T> = await this.client.put(url, data)\n    return response.data\n  }\n\n  async delete<T>(url: string): Promise<T> {\n    const response: AxiosResponse<T> = await this.client.delete(url)\n    return response.data\n  }\n\n  async refreshToken(data: RefreshTokenRequest): Promise<{ access_token: string; token_type: string }> {\n    const response = await axios.post(\n      `${process.env.NEXT_PUBLIC_API_BASE_URL}/api/v1/auth/refresh`,\n      data\n    )\n    return response.data\n  }\n}\n\nexport const apiService = new ApiService()"],
      names: ["apiService", "ApiService", "constructor", "client", "axios", "create", "baseURL", "process", "env", "NEXT_PUBLIC_API_BASE_URL", "headers", "setupInterceptors", "interceptors", "request", "use", "config", "token", "Cookies", "get", "Authorization", "error", "Promise", "reject", "response", "originalRequest", "status", "_retry", "refreshToken", "refresh_token", "set", "access_token", "refreshError", "clearTokens", "window", "location", "href", "remove", "url", "data", "post", "put", "delete"],
      mappings: ";;;;+BA2FaA;;;eAAAA;;;8DA3FuC;iEAChC;;;;;;AAGpB,MAAMC;IAGJC,aAAc;QACZ,IAAI,CAACC,MAAM,GAAGC,cAAK,CAACC,MAAM,CAAC;YACzBC,SAASC,QAAQC,GAAG,CAACC,wBAAwB,GAAG;YAChDC,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,IAAI,CAACC,iBAAiB;IACxB;IAEQA,oBAAoB;QAC1B,IAAI,CAACR,MAAM,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CAClC,CAACC;YACC,MAAMC,QAAQC,iBAAO,CAACC,GAAG,CAAC;YAC1B,IAAIF,OAAO;gBACTD,OAAOL,OAAO,CAACS,aAAa,GAAG,CAAC,OAAO,EAAEH,MAAM,CAAC;YAClD;YACA,OAAOD;QACT,GACA,CAACK,QAAUC,QAAQC,MAAM,CAACF;QAG5B,IAAI,CAACjB,MAAM,CAACS,YAAY,CAACW,QAAQ,CAACT,GAAG,CACnC,CAACS,WAAaA,UACd,OAAOH;YACL,MAAMI,kBAAkBJ,MAAML,MAAM;YAEpC,IAAIK,MAAMG,QAAQ,EAAEE,WAAW,OAAO,CAACD,gBAAgBE,MAAM,EAAE;gBAC7DF,gBAAgBE,MAAM,GAAG;gBAEzB,IAAI;oBACF,MAAMC,eAAeV,iBAAO,CAACC,GAAG,CAAC;oBACjC,IAAIS,cAAc;wBAChB,MAAMJ,WAAW,MAAM,IAAI,CAACI,YAAY,CAAC;4BAAEC,eAAeD;wBAAa;wBACvEV,iBAAO,CAACY,GAAG,CAAC,gBAAgBN,SAASO,YAAY;wBACjDN,gBAAgBd,OAAO,CAACS,aAAa,GAAG,CAAC,OAAO,EAAEI,SAASO,YAAY,CAAC,CAAC;wBACzE,OAAO,IAAI,CAAC3B,MAAM,CAACqB;oBACrB;gBACF,EAAE,OAAOO,cAAc;oBACrB,IAAI,CAACC,WAAW;oBAChBC,OAAOC,QAAQ,CAACC,IAAI,GAAG;gBACzB;YACF;YAEA,OAAOd,QAAQC,MAAM,CAACF;QACxB;IAEJ;IAEQY,cAAc;QACpBf,iBAAO,CAACmB,MAAM,CAAC;QACfnB,iBAAO,CAACmB,MAAM,CAAC;IACjB;IAEA,MAAMlB,IAAOmB,GAAW,EAAc;QACpC,MAAMd,WAA6B,MAAM,IAAI,CAACpB,MAAM,CAACe,GAAG,CAACmB;QACzD,OAAOd,SAASe,IAAI;IACtB;IAEA,MAAMC,KAAQF,GAAW,EAAEC,IAAU,EAAc;QACjD,MAAMf,WAA6B,MAAM,IAAI,CAACpB,MAAM,CAACoC,IAAI,CAACF,KAAKC;QAC/D,OAAOf,SAASe,IAAI;IACtB;IAEA,MAAME,IAAOH,GAAW,EAAEC,IAAU,EAAc;QAChD,MAAMf,WAA6B,MAAM,IAAI,CAACpB,MAAM,CAACqC,GAAG,CAACH,KAAKC;QAC9D,OAAOf,SAASe,IAAI;IACtB;IAEA,MAAMG,OAAUJ,GAAW,EAAc;QACvC,MAAMd,WAA6B,MAAM,IAAI,CAACpB,MAAM,CAACsC,MAAM,CAACJ;QAC5D,OAAOd,SAASe,IAAI;IACtB;IAEA,MAAMX,aAAaW,IAAyB,EAAyD;QACnG,MAAMf,WAAW,MAAMnB,cAAK,CAACmC,IAAI,CAC/B,CAAC,EAAEhC,QAAQC,GAAG,CAACC,wBAAwB,CAAC,oBAAoB,CAAC,EAC7D6B;QAEF,OAAOf,SAASe,IAAI;IACtB;AACF;AAEO,MAAMtC,aAAa,IAAIC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fbe238f85c29422ee4d929531e978942422918dc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1voxh8aabk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1voxh8aabk();
cov_1voxh8aabk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1voxh8aabk().s[1]++;
Object.defineProperty(exports, "apiService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1voxh8aabk().f[0]++;
    cov_1voxh8aabk().s[2]++;
    return apiService;
  }
});
const _axios =
/* istanbul ignore next */
(/*#__PURE__*/cov_1voxh8aabk().s[3]++, _interop_require_default(require("axios")));
const _jscookie =
/* istanbul ignore next */
(/*#__PURE__*/cov_1voxh8aabk().s[4]++, _interop_require_default(require("js-cookie")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1voxh8aabk().f[1]++;
  cov_1voxh8aabk().s[5]++;
  return /* istanbul ignore next */(cov_1voxh8aabk().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1voxh8aabk().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1voxh8aabk().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1voxh8aabk().b[0][1]++, {
    default: obj
  });
}
class ApiService {
  constructor() {
    /* istanbul ignore next */
    cov_1voxh8aabk().f[2]++;
    cov_1voxh8aabk().s[6]++;
    this.client = _axios.default.create({
      baseURL: process.env.NEXT_PUBLIC_API_BASE_URL + "/api/v1",
      headers: {
        "Content-Type": "application/json"
      }
    });
    /* istanbul ignore next */
    cov_1voxh8aabk().s[7]++;
    this.setupInterceptors();
  }
  setupInterceptors() {
    /* istanbul ignore next */
    cov_1voxh8aabk().f[3]++;
    cov_1voxh8aabk().s[8]++;
    this.client.interceptors.request.use(config => {
      /* istanbul ignore next */
      cov_1voxh8aabk().f[4]++;
      const token =
      /* istanbul ignore next */
      (cov_1voxh8aabk().s[9]++, _jscookie.default.get("access_token"));
      /* istanbul ignore next */
      cov_1voxh8aabk().s[10]++;
      if (token) {
        /* istanbul ignore next */
        cov_1voxh8aabk().b[2][0]++;
        cov_1voxh8aabk().s[11]++;
        config.headers.Authorization = `Bearer ${token}`;
      } else
      /* istanbul ignore next */
      {
        cov_1voxh8aabk().b[2][1]++;
      }
      cov_1voxh8aabk().s[12]++;
      return config;
    }, error => {
      /* istanbul ignore next */
      cov_1voxh8aabk().f[5]++;
      cov_1voxh8aabk().s[13]++;
      return Promise.reject(error);
    });
    /* istanbul ignore next */
    cov_1voxh8aabk().s[14]++;
    this.client.interceptors.response.use(response => {
      /* istanbul ignore next */
      cov_1voxh8aabk().f[6]++;
      cov_1voxh8aabk().s[15]++;
      return response;
    }, async error => {
      /* istanbul ignore next */
      cov_1voxh8aabk().f[7]++;
      const originalRequest =
      /* istanbul ignore next */
      (cov_1voxh8aabk().s[16]++, error.config);
      /* istanbul ignore next */
      cov_1voxh8aabk().s[17]++;
      if (
      /* istanbul ignore next */
      (cov_1voxh8aabk().b[4][0]++, error.response?.status === 401) &&
      /* istanbul ignore next */
      (cov_1voxh8aabk().b[4][1]++, !originalRequest._retry)) {
        /* istanbul ignore next */
        cov_1voxh8aabk().b[3][0]++;
        cov_1voxh8aabk().s[18]++;
        originalRequest._retry = true;
        /* istanbul ignore next */
        cov_1voxh8aabk().s[19]++;
        try {
          const refreshToken =
          /* istanbul ignore next */
          (cov_1voxh8aabk().s[20]++, _jscookie.default.get("refresh_token"));
          /* istanbul ignore next */
          cov_1voxh8aabk().s[21]++;
          if (refreshToken) {
            /* istanbul ignore next */
            cov_1voxh8aabk().b[5][0]++;
            const response =
            /* istanbul ignore next */
            (cov_1voxh8aabk().s[22]++, await this.refreshToken({
              refresh_token: refreshToken
            }));
            /* istanbul ignore next */
            cov_1voxh8aabk().s[23]++;
            _jscookie.default.set("access_token", response.access_token);
            /* istanbul ignore next */
            cov_1voxh8aabk().s[24]++;
            originalRequest.headers.Authorization = `Bearer ${response.access_token}`;
            /* istanbul ignore next */
            cov_1voxh8aabk().s[25]++;
            return this.client(originalRequest);
          } else
          /* istanbul ignore next */
          {
            cov_1voxh8aabk().b[5][1]++;
          }
        } catch (refreshError) {
          /* istanbul ignore next */
          cov_1voxh8aabk().s[26]++;
          this.clearTokens();
          /* istanbul ignore next */
          cov_1voxh8aabk().s[27]++;
          window.location.href = "/login";
        }
      } else
      /* istanbul ignore next */
      {
        cov_1voxh8aabk().b[3][1]++;
      }
      cov_1voxh8aabk().s[28]++;
      return Promise.reject(error);
    });
  }
  clearTokens() {
    /* istanbul ignore next */
    cov_1voxh8aabk().f[8]++;
    cov_1voxh8aabk().s[29]++;
    _jscookie.default.remove("access_token");
    /* istanbul ignore next */
    cov_1voxh8aabk().s[30]++;
    _jscookie.default.remove("refresh_token");
  }
  async get(url) {
    /* istanbul ignore next */
    cov_1voxh8aabk().f[9]++;
    const response =
    /* istanbul ignore next */
    (cov_1voxh8aabk().s[31]++, await this.client.get(url));
    /* istanbul ignore next */
    cov_1voxh8aabk().s[32]++;
    return response.data;
  }
  async post(url, data) {
    /* istanbul ignore next */
    cov_1voxh8aabk().f[10]++;
    const response =
    /* istanbul ignore next */
    (cov_1voxh8aabk().s[33]++, await this.client.post(url, data));
    /* istanbul ignore next */
    cov_1voxh8aabk().s[34]++;
    return response.data;
  }
  async put(url, data) {
    /* istanbul ignore next */
    cov_1voxh8aabk().f[11]++;
    const response =
    /* istanbul ignore next */
    (cov_1voxh8aabk().s[35]++, await this.client.put(url, data));
    /* istanbul ignore next */
    cov_1voxh8aabk().s[36]++;
    return response.data;
  }
  async delete(url) {
    /* istanbul ignore next */
    cov_1voxh8aabk().f[12]++;
    const response =
    /* istanbul ignore next */
    (cov_1voxh8aabk().s[37]++, await this.client.delete(url));
    /* istanbul ignore next */
    cov_1voxh8aabk().s[38]++;
    return response.data;
  }
  async refreshToken(data) {
    /* istanbul ignore next */
    cov_1voxh8aabk().f[13]++;
    const response =
    /* istanbul ignore next */
    (cov_1voxh8aabk().s[39]++, await _axios.default.post(`${process.env.NEXT_PUBLIC_API_BASE_URL}/api/v1/auth/refresh`, data));
    /* istanbul ignore next */
    cov_1voxh8aabk().s[40]++;
    return response.data;
  }
}
const apiService =
/* istanbul ignore next */
(cov_1voxh8aabk().s[41]++, new ApiService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,