{"version":3,"names":["DashboardPage","cov_1l6aq6ti2s","f","user","isLoading","authLoading","s","_useAuth","useAuthContext","router","_navigation","useRouter","data","tools","toolsLoading","_reactquery","useQuery","_api","apiService","get","enabled","organisation","orgLoading","_react","useEffect","b","push","_jsxruntime","jsx","_LoadingSpinner","default","_DashboardLayout","jsxs","className","first_name","name","industry","subscription_plan","is_active","length","map","tool","has_access","description","version","_Button","size","variant","disabled","subscription_tier","id"],"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["'use client'\n\nimport { useAuthContext } from '@/hooks/useAuth'\nimport { useRouter } from 'next/navigation'\nimport { useEffect, useState } from 'react'\nimport { useQuery } from 'react-query'\nimport { apiService } from '@/services/api'\nimport { Tool, Organisation } from '@/types/api'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner'\nimport Button from '@/components/ui/Button'\nimport DashboardLayout from '@/components/layout/DashboardLayout'\n\nexport default function DashboardPage() {\n  const { user, isLoading: authLoading } = useAuthContext()\n  const router = useRouter()\n\n  const { data: tools, isLoading: toolsLoading } = useQuery<Tool[]>(\n    'tools',\n    () => apiService.get('/tools'),\n    { enabled: !!user }\n  )\n\n  const { data: organisation, isLoading: orgLoading } = useQuery<Organisation>(\n    'organisation',\n    () => apiService.get('/organisations/current'),\n    { enabled: !!user }\n  )\n\n  useEffect(() => {\n    if (!authLoading && !user) {\n      router.push('/login')\n    }\n  }, [user, authLoading, router])\n\n  if (authLoading || !user) {\n    return <LoadingSpinner />\n  }\n\n  return (\n    <DashboardLayout>\n      <div className=\"space-y-6\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">\n            Welcome back, {user.first_name}!\n          </h1>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Access your business intelligence tools and manage your account.\n          </p>\n        </div>\n\n        {orgLoading ? (\n          <LoadingSpinner />\n        ) : organisation ? (\n          <div className=\"bg-white shadow rounded-lg p-6\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Organisation Details</h2>\n            <dl className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Name</dt>\n                <dd className=\"text-sm text-gray-900\">{organisation.name}</dd>\n              </div>\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Industry</dt>\n                <dd className=\"text-sm text-gray-900\">{organisation.industry || 'Not specified'}</dd>\n              </div>\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Subscription Plan</dt>\n                <dd className=\"text-sm text-gray-900 capitalize\">{organisation.subscription_plan}</dd>\n              </div>\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Status</dt>\n                <dd className=\"text-sm text-gray-900\">\n                  <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${\n                    organisation.is_active \n                      ? 'bg-green-100 text-green-800' \n                      : 'bg-red-100 text-red-800'\n                  }`}>\n                    {organisation.is_active ? 'Active' : 'Inactive'}\n                  </span>\n                </dd>\n              </div>\n            </dl>\n          </div>\n        ) : null}\n\n        <div className=\"bg-white shadow rounded-lg p-6\">\n          <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Available Tools</h2>\n          {toolsLoading ? (\n            <LoadingSpinner />\n          ) : tools && tools.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {tools.map((tool) => (\n                <div\n                  key={tool.id}\n                  className={`border rounded-lg p-4 ${\n                    tool.has_access \n                      ? 'border-green-200 bg-green-50' \n                      : 'border-gray-200 bg-gray-50'\n                  }`}\n                >\n                  <h3 className=\"font-medium text-gray-900\">{tool.name}</h3>\n                  <p className=\"text-sm text-gray-600 mt-1\">{tool.description}</p>\n                  <div className=\"mt-3 flex items-center justify-between\">\n                    <span className=\"text-xs text-gray-500\">v{tool.version}</span>\n                    {tool.has_access ? (\n                      <Button size=\"sm\">Access Tool</Button>\n                    ) : (\n                      <Button size=\"sm\" variant=\"secondary\" disabled>\n                        No Access\n                      </Button>\n                    )}\n                  </div>\n                  {tool.has_access && tool.subscription_tier && (\n                    <div className=\"mt-2\">\n                      <span className=\"inline-flex px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\n                        {tool.subscription_tier}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p className=\"text-gray-500\">No tools available.</p>\n          )}\n        </div>\n      </div>\n    </DashboardLayout>\n  )\n}"],"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","ignoreList":[]}