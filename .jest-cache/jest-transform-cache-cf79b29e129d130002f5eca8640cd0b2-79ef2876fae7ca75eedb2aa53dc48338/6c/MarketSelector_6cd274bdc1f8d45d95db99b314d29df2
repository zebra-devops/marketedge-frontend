89d9f2621d455a1ab9bd4a3c2540a5b8
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MarketSelector", {
    enumerable: true,
    get: function() {
        return MarketSelector;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _outline = require("@heroicons/react/24/outline");
const _marketedgeapi = require("../../services/market-edge-api");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const MarketSelector = ({ selectedMarket, onMarketSelect, onCreateMarket, className = "" })=>{
    const [markets, setMarkets] = (0, _react.useState)([]);
    const [isOpen, setIsOpen] = (0, _react.useState)(false);
    const [isLoading, setIsLoading] = (0, _react.useState)(true);
    const [searchQuery, setSearchQuery] = (0, _react.useState)("");
    const [error, setError] = (0, _react.useState)(null);
    (0, _react.useEffect)(()=>{
        loadMarkets();
    }, []);
    const loadMarkets = async ()=>{
        try {
            setIsLoading(true);
            const marketData = await _marketedgeapi.marketEdgeAPI.getMarkets();
            setMarkets(marketData);
            setError(null);
        } catch (err) {
            setError(err instanceof Error ? err.message : "Failed to load markets");
        } finally{
            setIsLoading(false);
        }
    };
    const filteredMarkets = markets.filter((market)=>market.name.toLowerCase().includes(searchQuery.toLowerCase()));
    const handleMarketSelect = (market)=>{
        onMarketSelect(market);
        setIsOpen(false);
        setSearchQuery("");
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `relative ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                onClick: ()=>setIsOpen(!isOpen),
                className: "w-full flex items-center justify-between px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                disabled: isLoading,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "w-3 h-3 bg-green-500 rounded-full mr-3"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "text-sm font-medium text-gray-900",
                                children: selectedMarket ? selectedMarket.name : "Select Market"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ChevronDownIcon, {
                        className: `w-5 h-5 text-gray-400 transition-transform ${isOpen ? "rotate-180" : ""}`
                    })
                ]
            }),
            isOpen && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "absolute z-50 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg max-h-80 overflow-hidden",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "p-3 border-b border-gray-200",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                            type: "text",
                            placeholder: "Search markets...",
                            value: searchQuery,
                            onChange: (e)=>setSearchQuery(e.target.value),
                            className: "w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                            autoFocus: true
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "max-h-60 overflow-y-auto",
                        children: error ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "p-4 text-center text-red-600 text-sm",
                            children: [
                                error,
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    onClick: loadMarkets,
                                    className: "block mx-auto mt-2 text-blue-600 hover:text-blue-800 underline",
                                    children: "Retry"
                                })
                            ]
                        }) : isLoading ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "p-4 text-center text-gray-500 text-sm",
                            children: "Loading markets..."
                        }) : filteredMarkets.length === 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "p-4 text-center text-gray-500 text-sm",
                            children: searchQuery ? "No markets found" : "No markets available"
                        }) : filteredMarkets.map((market)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: ()=>handleMarketSelect(market),
                                className: "w-full px-4 py-3 text-left hover:bg-gray-50 focus:outline-none focus:bg-gray-50 transition-colors",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "text-sm font-medium text-gray-900",
                                                    children: market.name
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "text-xs text-gray-500 mt-1",
                                                    children: [
                                                        market.competitor_count,
                                                        " competitors â€¢",
                                                        market.is_active ? " Active" : " Inactive"
                                                    ]
                                                })
                                            ]
                                        }),
                                        selectedMarket?.id === market.id && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "w-2 h-2 bg-blue-600 rounded-full"
                                        })
                                    ]
                                })
                            }, market.id))
                    }),
                    onCreateMarket && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "border-t border-gray-200",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                            onClick: ()=>{
                                onCreateMarket();
                                setIsOpen(false);
                            },
                            className: "w-full px-4 py-3 text-left hover:bg-gray-50 focus:outline-none focus:bg-gray-50 transition-colors flex items-center text-blue-600",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.PlusIcon, {
                                    className: "w-4 h-4 mr-2"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "text-sm font-medium",
                                    children: "Create New Market"
                                })
                            ]
                        })
                    })
                ]
            }),
            isOpen && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "fixed inset-0 z-40",
                onClick: ()=>setIsOpen(false)
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,