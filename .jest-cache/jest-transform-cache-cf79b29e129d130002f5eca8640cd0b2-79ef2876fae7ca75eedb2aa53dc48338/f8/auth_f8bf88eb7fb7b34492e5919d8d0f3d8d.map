{"version":3,"names":["cov_1s5v6gtyz3","actualCoverage","s","AuthError","f","authenticatedFetch","getAuthHeaders","logout","validateAdminRole","getCookie","name","value","document","cookie","parts","split","length","b","pop","shift","undefined","Error","constructor","message","statusCode","contentType","token","headers","url","options","response","fetch","status","window","location","href","error","user","role","is_active","localStorage","removeItem","sessionStorage","clear"],"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/lib/auth.ts"],"sourcesContent":["// Simple cookie utility\nfunction getCookie(name: string): string | undefined {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) {\n    return parts.pop()?.split(';').shift();\n  }\n  return undefined;\n}\n\nexport class AuthError extends Error {\n  constructor(message: string, public statusCode?: number) {\n    super(message);\n    this.name = 'AuthError';\n  }\n}\n\nexport interface AuthHeaders {\n  'Content-Type'?: string;\n  'Authorization': string;\n}\n\n/**\n * Get authentication headers for API requests\n * Safely extracts token from httpOnly cookies\n */\nexport function getAuthHeaders(contentType: string = 'application/json'): AuthHeaders {\n  const token = getCookie('access_token');\n  \n  if (!token) {\n    throw new AuthError('No authentication token found', 401);\n  }\n\n  const headers: AuthHeaders = {\n    'Authorization': `Bearer ${token}`\n  };\n\n  if (contentType) {\n    headers['Content-Type'] = contentType;\n  }\n\n  return headers;\n}\n\n/**\n * Make authenticated API request\n */\nexport async function authenticatedFetch(\n  url: string,\n  options: RequestInit = {}\n): Promise<Response> {\n  try {\n    const headers = getAuthHeaders();\n    \n    const response = await fetch(url, {\n      ...options,\n      headers: {\n        ...headers,\n        ...options.headers,\n      },\n    });\n\n    // Handle authentication errors\n    if (response.status === 401) {\n      // Clear invalid token and redirect to login\n      document.cookie = 'access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; secure; httpOnly';\n      window.location.href = '/login';\n      throw new AuthError('Authentication failed', 401);\n    }\n\n    if (response.status === 403) {\n      throw new AuthError('Insufficient permissions', 403);\n    }\n\n    return response;\n  } catch (error) {\n    if (error instanceof AuthError) {\n      throw error;\n    }\n    \n    // Handle network errors\n    throw new Error(`Request failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n  }\n}\n\n/**\n * Validate user has admin role\n */\nexport function validateAdminRole(user: any): boolean {\n  return user && user.role === 'admin' && user.is_active;\n}\n\n/**\n * Logout user securely\n */\nexport function logout(): void {\n  // Clear all auth-related cookies\n  document.cookie = 'access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; secure; httpOnly';\n  document.cookie = 'refresh_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; secure; httpOnly';\n  \n  // Clear any localStorage/sessionStorage\n  localStorage.removeItem('user');\n  sessionStorage.clear();\n  \n  // Redirect to login\n  window.location.href = '/login';\n}"],"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","ignoreList":[]}