{"version":3,"names":["AlertsPanel","alerts","isLoading","cov_1j1q276beu","b","onMarkRead","onRefresh","className","f","processingAlerts","setProcessingAlerts","s","_react","useState","Set","getSeverityIcon","severity","_jsxruntime","jsx","_outline","XCircleIcon","ExclamationCircleIcon","ExclamationTriangleIcon","InformationCircleIcon","getSeverityBadge","baseClasses","getAlertTypeLabel","type","labels","charAt","toUpperCase","slice","formatTimeAgo","dateString","date","Date","now","diffInMinutes","Math","floor","getTime","toLocaleDateString","handleMarkRead","alertId","has","prev","add","_marketedgeapi","marketEdgeAPI","markAlertRead","error","console","newSet","delete","unreadAlerts","readAlerts","default","useMemo","unread","filter","alert","is_read","sort","a","severityOrder","critical","high","medium","low","aSeverity","bSeverity","created_at","read","jsxs","Array","map","_","i","length","onClick","CheckCircleIcon","AlertItem","showActions","alert_type","title","message","trigger_data","round","confidence","id","disabled","EyeIcon"],"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/market-edge/AlertsPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  ExclamationTriangleIcon,\n  InformationCircleIcon,\n  ExclamationCircleIcon,\n  XCircleIcon,\n  CheckCircleIcon,\n  EyeIcon,\n  XMarkIcon\n} from '@heroicons/react/24/outline';\nimport { MarketAlert } from '@/types/market-edge';\nimport { marketEdgeAPI } from '@/services/market-edge-api';\n\ninterface AlertsPanelProps {\n  alerts: MarketAlert[];\n  isLoading?: boolean;\n  onMarkRead?: (alertId: string) => void;\n  onRefresh?: () => void;\n  className?: string;\n}\n\nexport const AlertsPanel: React.FC<AlertsPanelProps> = ({\n  alerts,\n  isLoading = false,\n  onMarkRead,\n  onRefresh,\n  className = ''\n}) => {\n  const [processingAlerts, setProcessingAlerts] = useState<Set<string>>(new Set());\n\n  const getSeverityIcon = (severity: string) => {\n    switch (severity) {\n      case 'critical':\n        return <XCircleIcon className=\"w-5 h-5 text-red-500\" />;\n      case 'high':\n        return <ExclamationCircleIcon className=\"w-5 h-5 text-red-500\" />;\n      case 'medium':\n        return <ExclamationTriangleIcon className=\"w-5 h-5 text-yellow-500\" />;\n      case 'low':\n        return <InformationCircleIcon className=\"w-5 h-5 text-blue-500\" />;\n      default:\n        return <InformationCircleIcon className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getSeverityBadge = (severity: string) => {\n    const baseClasses = \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\";\n    \n    switch (severity) {\n      case 'critical':\n        return `${baseClasses} bg-red-100 text-red-800`;\n      case 'high':\n        return `${baseClasses} bg-red-100 text-red-800`;\n      case 'medium':\n        return `${baseClasses} bg-yellow-100 text-yellow-800`;\n      case 'low':\n        return `${baseClasses} bg-blue-100 text-blue-800`;\n      default:\n        return `${baseClasses} bg-gray-100 text-gray-800`;\n    }\n  };\n\n  const getAlertTypeLabel = (type: string) => {\n    const labels: Record<string, string> = {\n      'price_change': 'Price Change',\n      'new_competitor': 'New Competitor',\n      'anomaly': 'Anomaly',\n      'promotion': 'Promotion',\n      'market_shift': 'Market Shift',\n      'competitor_move': 'Competitor Move'\n    };\n    return labels[type] || type.charAt(0).toUpperCase() + type.slice(1);\n  };\n\n  const formatTimeAgo = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    if (diffInMinutes < 10080) return `${Math.floor(diffInMinutes / 1440)}d ago`;\n    return date.toLocaleDateString();\n  };\n\n  const handleMarkRead = async (alertId: string) => {\n    if (processingAlerts.has(alertId)) return;\n\n    setProcessingAlerts(prev => new Set(prev).add(alertId));\n    \n    try {\n      await marketEdgeAPI.markAlertRead(alertId);\n      if (onMarkRead) {\n        onMarkRead(alertId);\n      }\n    } catch (error) {\n      console.error('Failed to mark alert as read:', error);\n    } finally {\n      setProcessingAlerts(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(alertId);\n        return newSet;\n      });\n    }\n  };\n\n  // Group alerts by severity and read status\n  const { unreadAlerts, readAlerts } = React.useMemo(() => {\n    const unread = alerts.filter(alert => !alert.is_read)\n      .sort((a, b) => {\n        // Sort by severity first, then by date\n        const severityOrder = { critical: 4, high: 3, medium: 2, low: 1 };\n        const aSeverity = severityOrder[a.severity as keyof typeof severityOrder] || 0;\n        const bSeverity = severityOrder[b.severity as keyof typeof severityOrder] || 0;\n        \n        if (aSeverity !== bSeverity) return bSeverity - aSeverity;\n        return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();\n      });\n    \n    const read = alerts.filter(alert => alert.is_read)\n      .sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\n      .slice(0, 10); // Show only last 10 read alerts\n    \n    return { unreadAlerts: unread, readAlerts: read };\n  }, [alerts]);\n\n  if (isLoading) {\n    return (\n      <div className={`bg-white rounded-lg border border-gray-200 ${className}`}>\n        <div className=\"p-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Market Alerts</h3>\n        </div>\n        <div className=\"p-4\">\n          <div className=\"space-y-4\">\n            {[...Array(3)].map((_, i) => (\n              <div key={i} className=\"animate-pulse\">\n                <div className=\"flex items-start space-x-3\">\n                  <div className=\"w-5 h-5 bg-gray-200 rounded\"></div>\n                  <div className=\"flex-1\">\n                    <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (alerts.length === 0) {\n    return (\n      <div className={`bg-white rounded-lg border border-gray-200 ${className}`}>\n        <div className=\"p-4 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Market Alerts</h3>\n            {onRefresh && (\n              <button\n                onClick={onRefresh}\n                className=\"text-sm text-blue-600 hover:text-blue-800\"\n              >\n                Refresh\n              </button>\n            )}\n          </div>\n        </div>\n        <div className=\"p-6 text-center\">\n          <CheckCircleIcon className=\"mx-auto h-12 w-12 text-green-400\" />\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">All clear!</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            No alerts at the moment. You'll be notified of any market changes.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  const AlertItem: React.FC<{ alert: MarketAlert; showActions?: boolean }> = ({ \n    alert, \n    showActions = true \n  }) => (\n    <div className={`p-4 border-l-4 ${\n      alert.is_read \n        ? 'border-gray-200 bg-gray-50' \n        : alert.severity === 'critical' \n          ? 'border-red-500 bg-red-50'\n          : alert.severity === 'high'\n            ? 'border-red-400 bg-red-50'\n            : alert.severity === 'medium'\n              ? 'border-yellow-400 bg-yellow-50'\n              : 'border-blue-400 bg-blue-50'\n    }`}>\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-start space-x-3\">\n          {getSeverityIcon(alert.severity)}\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"flex items-center space-x-2 mb-1\">\n              <span className={getSeverityBadge(alert.severity)}>\n                {alert.severity.toUpperCase()}\n              </span>\n              <span className=\"text-xs text-gray-500\">\n                {getAlertTypeLabel(alert.alert_type)}\n              </span>\n            </div>\n            <p className={`text-sm font-medium ${alert.is_read ? 'text-gray-700' : 'text-gray-900'}`}>\n              {alert.title}\n            </p>\n            <p className={`text-sm mt-1 ${alert.is_read ? 'text-gray-600' : 'text-gray-700'}`}>\n              {alert.message}\n            </p>\n            <div className=\"flex items-center justify-between mt-2\">\n              <span className=\"text-xs text-gray-500\">\n                {formatTimeAgo(alert.created_at)}\n              </span>\n              {alert.trigger_data && (\n                <span className=\"text-xs text-gray-500\">\n                  Confidence: {Math.round((alert.trigger_data.confidence || 0) * 100)}%\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {showActions && !alert.is_read && (\n          <div className=\"flex items-center space-x-1 ml-4\">\n            <button\n              onClick={() => handleMarkRead(alert.id)}\n              disabled={processingAlerts.has(alert.id)}\n              className=\"p-1 text-gray-400 hover:text-gray-600 transition-colors\"\n              title=\"Mark as read\"\n            >\n              {processingAlerts.has(alert.id) ? (\n                <div className=\"w-4 h-4 border border-gray-300 border-t-gray-600 rounded-full animate-spin\"></div>\n              ) : (\n                <EyeIcon className=\"w-4 h-4\" />\n              )}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={`bg-white rounded-lg border border-gray-200 ${className}`}>\n      <div className=\"p-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-medium text-gray-900\">\n            Market Alerts\n            {unreadAlerts.length > 0 && (\n              <span className=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n                {unreadAlerts.length} new\n              </span>\n            )}\n          </h3>\n          {onRefresh && (\n            <button\n              onClick={onRefresh}\n              className=\"text-sm text-blue-600 hover:text-blue-800\"\n            >\n              Refresh\n            </button>\n          )}\n        </div>\n      </div>\n\n      <div className=\"max-h-96 overflow-y-auto\">\n        {/* Unread Alerts */}\n        {unreadAlerts.length > 0 && (\n          <div>\n            <div className=\"px-4 py-2 bg-gray-50 border-b border-gray-200\">\n              <h4 className=\"text-sm font-medium text-gray-900\">\n                Unread ({unreadAlerts.length})\n              </h4>\n            </div>\n            <div className=\"space-y-1\">\n              {unreadAlerts.map((alert) => (\n                <AlertItem key={alert.id} alert={alert} />\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Read Alerts */}\n        {readAlerts.length > 0 && (\n          <div>\n            <div className=\"px-4 py-2 bg-gray-50 border-b border-gray-200\">\n              <h4 className=\"text-sm font-medium text-gray-700\">\n                Recently Read\n              </h4>\n            </div>\n            <div className=\"space-y-1\">\n              {readAlerts.map((alert) => (\n                <AlertItem key={alert.id} alert={alert} showActions={false} />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Footer */}\n      <div className=\"px-4 py-3 bg-gray-50 border-t border-gray-200 text-center\">\n        <p className=\"text-xs text-gray-500\">\n          Alerts are updated in real-time based on market changes\n        </p>\n      </div>\n    </div>\n  );\n};"],"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","ignoreList":[]}