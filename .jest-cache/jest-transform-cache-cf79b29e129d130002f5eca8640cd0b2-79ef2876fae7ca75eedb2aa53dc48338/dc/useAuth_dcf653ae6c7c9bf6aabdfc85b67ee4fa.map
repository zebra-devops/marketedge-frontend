{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/hooks/useAuth.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, createContext, useContext } from 'react'\nimport { User } from '@/types/auth'\nimport { authService } from '@/services/auth'\nimport { safeClearInterval, ensureTimerFunctions } from '@/utils/timer-utils'\n\ninterface EnhancedUser extends User {\n  created_at?: string\n  updated_at?: string\n}\n\ninterface TenantInfo {\n  id: string\n  name: string\n  industry: string\n  subscription_plan: string\n}\n\ninterface AuthState {\n  user: EnhancedUser | null\n  tenant: TenantInfo | null\n  permissions: string[]\n  isLoading: boolean\n  isAuthenticated: boolean\n  isInitialized: boolean\n}\n\ninterface AuthContextType extends AuthState {\n  login: (loginData: { code: string; redirect_uri: string; state?: string }) => Promise<any>\n  logout: (allDevices?: boolean) => Promise<void>\n  refreshUser: () => Promise<void>\n  hasPermission: (permission: string) => boolean\n  hasAnyPermission: (permissions: string[]) => boolean\n  hasRole: (role: string) => boolean\n  checkSession: () => Promise<any>\n  extendSession: () => Promise<any>\n  getTenantContext: () => TenantInfo | null\n  validateTenantAccess: (requiredTenant: string) => boolean\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport const useAuthContext = (): AuthContextType => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error('useAuthContext must be used within an AuthProvider')\n  }\n  return context\n}\n\nexport const useAuth = (): AuthContextType => {\n  const [state, setState] = useState<AuthState>({\n    user: null,\n    tenant: null,\n    permissions: [],\n    isLoading: true,\n    isAuthenticated: false,\n    isInitialized: false\n  })\n\n  useEffect(() => {\n    initializeAuth()\n  }, [])\n\n  // Initialize timer-based features only on client-side after mount\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      // Ensure timer functions are available before initialization\n      ensureTimerFunctions()\n      \n      // Initialize auto-refresh and activity tracking\n      authService.initializeAutoRefresh()\n      authService.initializeActivityTracking()\n\n      // Cleanup function to clear intervals when component unmounts\n      return () => {\n        const refreshInterval = (window as any).__authRefreshInterval\n        const timeoutInterval = (window as any).__sessionTimeoutInterval\n        \n        if (refreshInterval) {\n          safeClearInterval(refreshInterval)\n          delete (window as any).__authRefreshInterval\n        }\n        \n        if (timeoutInterval) {\n          safeClearInterval(timeoutInterval)\n          delete (window as any).__sessionTimeoutInterval\n        }\n      }\n    }\n  }, [state.isAuthenticated]) // Re-initialize when auth state changes\n\n  const initializeAuth = async () => {\n    try {\n      setState(prev => ({ ...prev, isLoading: true }))\n\n      // Check if user has valid authentication\n      if (authService.isAuthenticated()) {\n        try {\n          // Get current user data from backend\n          const userResponse = await authService.getCurrentUser()\n          const permissions = authService.getUserPermissions ? authService.getUserPermissions() : []\n          \n          setState({\n            user: userResponse.user || userResponse,\n            tenant: userResponse.tenant || null,\n            permissions,\n            isLoading: false,\n            isAuthenticated: true,\n            isInitialized: true\n          })\n        } catch (error) {\n          console.error('Failed to get current user:', error)\n          // Clear invalid tokens\n          await authService.logout()\n          setState({\n            user: null,\n            tenant: null,\n            permissions: [],\n            isLoading: false,\n            isAuthenticated: false,\n            isInitialized: true\n          })\n        }\n      } else {\n        setState({\n          user: null,\n          tenant: null,\n          permissions: [],\n          isLoading: false,\n          isAuthenticated: false,\n          isInitialized: true\n        })\n      }\n    } catch (error) {\n      console.error('Auth initialization failed:', error)\n      setState({\n        user: null,\n        tenant: null,\n        permissions: [],\n        isLoading: false,\n        isAuthenticated: false,\n        isInitialized: true\n      })\n    }\n  }\n\n  const login = async (loginData: { code: string; redirect_uri: string; state?: string }) => {\n    setState(prev => ({ ...prev, isLoading: true }))\n    \n    try {\n      const response = await authService.login(loginData)\n      \n      setState({\n        user: response.user || response,\n        tenant: response.tenant || null,\n        permissions: response.permissions || [],\n        isLoading: false,\n        isAuthenticated: true,\n        isInitialized: true\n      })\n\n      return response\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        isLoading: false,\n        user: null,\n        tenant: null,\n        permissions: [],\n        isAuthenticated: false\n      }))\n      throw error\n    }\n  }\n\n  const logout = async (allDevices: boolean = false) => {\n    setState(prev => ({ ...prev, isLoading: true }))\n    \n    try {\n      await authService.logout(allDevices)\n    } catch (error) {\n      console.warn('Logout error:', error)\n    } finally {\n      setState({\n        user: null,\n        tenant: null,\n        permissions: [],\n        isLoading: false,\n        isAuthenticated: false,\n        isInitialized: true\n      })\n    }\n  }\n\n  const refreshUser = async () => {\n    try {\n      const userResponse = await authService.getCurrentUser()\n      const permissions = authService.getUserPermissions ? authService.getUserPermissions() : []\n      \n      setState(prev => ({\n        ...prev,\n        user: userResponse.user || userResponse,\n        tenant: userResponse.tenant || null,\n        permissions\n      }))\n    } catch (error) {\n      console.error('Failed to refresh user data:', error)\n      // Clear auth state on refresh failure\n      setState(prev => ({\n        ...prev,\n        user: null,\n        tenant: null,\n        permissions: [],\n        isAuthenticated: false\n      }))\n      await authService.logout()\n      throw error\n    }\n  }\n\n  const hasPermission = (permission: string): boolean => {\n    return authService.hasPermission ? authService.hasPermission(permission) : false\n  }\n\n  const hasAnyPermission = (permissions: string[]): boolean => {\n    return authService.hasAnyPermission ? authService.hasAnyPermission(permissions) : false\n  }\n\n  const hasRole = (role: string): boolean => {\n    return authService.getUserRole ? authService.getUserRole() === role : false\n  }\n\n  const checkSession = async () => {\n    try {\n      return authService.checkSession ? await authService.checkSession() : { valid: true }\n    } catch (error) {\n      console.error('Session check failed:', error)\n      throw error\n    }\n  }\n\n  const extendSession = async () => {\n    try {\n      return authService.extendSession ? await authService.extendSession() : { extended: true }\n    } catch (error) {\n      console.error('Session extension failed:', error)\n      throw error\n    }\n  }\n\n  const getTenantContext = (): TenantInfo | null => {\n    return state.tenant\n  }\n\n  const validateTenantAccess = (requiredTenant: string): boolean => {\n    if (!state.tenant || !state.isAuthenticated) {\n      return false\n    }\n    return state.tenant.id === requiredTenant\n  }\n\n  return {\n    ...state,\n    login,\n    logout,\n    refreshUser,\n    hasPermission,\n    hasAnyPermission,\n    hasRole,\n    checkSession,\n    extendSession,\n    getTenantContext,\n    validateTenantAccess\n  }\n}\n\nexport { AuthContext }"],"names":["AuthContext","useAuth","useAuthContext","createContext","undefined","context","useContext","Error","state","setState","useState","user","tenant","permissions","isLoading","isAuthenticated","isInitialized","useEffect","initializeAuth","window","ensureTimerFunctions","authService","initializeAutoRefresh","initializeActivityTracking","refreshInterval","__authRefreshInterval","timeoutInterval","__sessionTimeoutInterval","safeClearInterval","prev","userResponse","getCurrentUser","getUserPermissions","error","console","logout","login","loginData","response","allDevices","warn","refreshUser","hasPermission","permission","hasAnyPermission","hasRole","role","getUserRole","checkSession","valid","extendSession","extended","getTenantContext","validateTenantAccess","requiredTenant","id"],"mappings":"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"}